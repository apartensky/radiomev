/*system-text@0.1.0#text*/
define('system-text@0.1.0#text', [], function(){ return {}; });
/*app/domain/presets/tcga/model/TcgaPreset*/
define("app/domain/presets/tcga/model/TcgaPreset",["lodash"],function(_){var TcgaPreset=function(DS){return DS.defineResource({name:"TcgaPreset",endpoint:"presets/tcga",idAttribute:"name",computed:{dataLevelNorm:["dataLevel",function(dataLevel){return _.isNaN(parseInt(dataLevel))?dataLevel:"Level_"+dataLevel}]}})};return TcgaPreset.$inject=["DS"],TcgaPreset.$name="TcgaPreset",TcgaPreset.$provider="factory",TcgaPreset});
/*js-data@2.9.0#dist/js-data-debug*/
!function(root,factory){"object"==typeof exports&&"object"==typeof module?module.exports=factory():"function"==typeof define&&define.amd?define("js-data@2.9.0#dist/js-data-debug",[],factory):"object"==typeof exports?exports.JSData=factory():root.JSData=factory()}(this,function(){return function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:!1};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.loaded=!0,module.exports}var installedModules={};return __webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.p="",__webpack_require__(0)}([function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}var _index=__webpack_require__(1),_index2=_interopRequireDefault(_index),_utils=__webpack_require__(2),_utils2=_interopRequireDefault(_utils),_errors=__webpack_require__(3),_errors2=_interopRequireDefault(_errors);module.exports={DS:_index2["default"],DSUtils:_utils2["default"],DSErrors:_errors2["default"],createStore:function(options){return new _index2["default"](options)},version:{full:"2.9.0",major:parseInt("2",10),minor:parseInt("9",10),patch:parseInt("0",10),alpha:"false",beta:"false"}}},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function lifecycleNoopCb(resource,attrs,cb){cb(null,attrs)}function lifecycleNoop(resource,attrs){return attrs}function compare(orderBy,index,a,b){var def=orderBy[index],cA=_utils2["default"].get(a,def[0]),cB=_utils2["default"].get(b,def[0]);return _utils2["default"]._s(cA)&&(cA=_utils2["default"].upperCase(cA)),_utils2["default"]._s(cB)&&(cB=_utils2["default"].upperCase(cB)),"DESC"===def[1]?cA>cB?-1:cB>cA?1:index<orderBy.length-1?compare(orderBy,index+1,a,b):0:cB>cA?-1:cA>cB?1:index<orderBy.length-1?compare(orderBy,index+1,a,b):0}function escape(pattern){return pattern.replace(escapeRegExp,"\\$1")}function like(pattern,flags){return new RegExp("^"+escape(pattern).replace(percentRegExp,".*").replace(underscoreRegExp,".")+"$",flags)}function addMethods(target,obj){_utils2["default"].forOwn(obj,function(v,k){target[k]=v,target[k].before=function(fn){var orig=target[k];target[k]=function(){for(var _len2=arguments.length,args=Array(_len2),_key2=0;_len2>_key2;_key2++)args[_key2]=arguments[_key2];return orig.apply(this,fn.apply(this,args)||args)}}})}Object.defineProperty(exports,"__esModule",{value:!0});var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol?"symbol":typeof obj},_createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_utils=__webpack_require__(2),_utils2=_interopRequireDefault(_utils),_errors=__webpack_require__(3),_errors2=_interopRequireDefault(_errors),_index=__webpack_require__(41),_index2=_interopRequireDefault(_index),_index3=__webpack_require__(47),_index4=_interopRequireDefault(_index3),Defaults=function(){function Defaults(){_classCallCheck(this,Defaults)}return _createClass(Defaults,[{key:"errorFn",value:function(a,b){if(this.error&&"function"==typeof this.error){try{throw"string"==typeof a?new Error(a):a}catch(err){a=err}this.error(this.name||null,a||null,b||null)}}}]),Defaults}(),defaultsPrototype=Defaults.prototype;defaultsPrototype.actions={},defaultsPrototype.afterCreate=lifecycleNoopCb,defaultsPrototype.afterCreateCollection=lifecycleNoop,defaultsPrototype.afterCreateInstance=lifecycleNoop,defaultsPrototype.afterDestroy=lifecycleNoopCb,defaultsPrototype.afterEject=lifecycleNoop,defaultsPrototype.afterFind=lifecycleNoopCb,defaultsPrototype.afterFindAll=lifecycleNoopCb,defaultsPrototype.afterInject=lifecycleNoop,defaultsPrototype.afterLoadRelations=lifecycleNoopCb,defaultsPrototype.afterReap=lifecycleNoop,defaultsPrototype.afterUpdate=lifecycleNoopCb,defaultsPrototype.afterValidate=lifecycleNoopCb,defaultsPrototype.allowSimpleWhere=!0,defaultsPrototype.basePath="",defaultsPrototype.beforeCreate=lifecycleNoopCb,defaultsPrototype.beforeCreateCollection=lifecycleNoop,defaultsPrototype.beforeCreateInstance=lifecycleNoop,defaultsPrototype.beforeDestroy=lifecycleNoopCb,defaultsPrototype.beforeEject=lifecycleNoop,defaultsPrototype.beforeInject=lifecycleNoop,defaultsPrototype.beforeReap=lifecycleNoop,defaultsPrototype.beforeUpdate=lifecycleNoopCb,defaultsPrototype.beforeValidate=lifecycleNoopCb,defaultsPrototype.bypassCache=!1,defaultsPrototype.cacheResponse=!!_utils2["default"].w,defaultsPrototype.csp=!1,defaultsPrototype.clearEmptyQueries=!0,defaultsPrototype.computed={},defaultsPrototype.defaultAdapter="http",defaultsPrototype.debug=!1,defaultsPrototype.defaultValues={},defaultsPrototype.eagerEject=!1,defaultsPrototype.eagerInject=!1,defaultsPrototype.endpoint="",defaultsPrototype.error=console?function(a,b,c){return console["function"==typeof console.error?"error":"log"](a,b,c)}:!1,defaultsPrototype.errorHandler=function(){return _utils2["default"].Promise.reject(arguments.length<=0?void 0:arguments[0])},defaultsPrototype.fallbackAdapters=["http"],defaultsPrototype.findStrictCache=!1,defaultsPrototype.idAttribute="id",defaultsPrototype.ignoredChanges=[/\$/],defaultsPrototype.instanceEvents=!!_utils2["default"].w,defaultsPrototype.keepChangeHistory=!1,defaultsPrototype.linkRelations=!!_utils2["default"].w,defaultsPrototype.log=console?function(a,b,c,d,e){return console["function"==typeof console.info?"info":"log"](a,b,c,d,e)}:!1,defaultsPrototype.logFn=function(a,b,c,d){var _this=this;_this.debug&&_this.log&&"function"==typeof _this.log&&_this.log(_this.name||null,a||null,b||null,c||null,d||null)},defaultsPrototype.maxAge=!1,defaultsPrototype.methods={},defaultsPrototype.notify=!!_utils2["default"].w,defaultsPrototype.omit=[],defaultsPrototype.onConflict="merge",defaultsPrototype.reapAction=_utils2["default"].w?"inject":"none",defaultsPrototype.reapInterval=_utils2["default"].w?3e4:!1,defaultsPrototype.relationsEnumerable=!1,defaultsPrototype.resetHistoryOnInject=!0,defaultsPrototype.returnMeta=!1,defaultsPrototype.scopes={},defaultsPrototype.strategy="single",defaultsPrototype.upsert=!!_utils2["default"].w,defaultsPrototype.useClass=!0,defaultsPrototype.useFilter=!1,defaultsPrototype.validate=lifecycleNoopCb,defaultsPrototype.watchChanges=!!_utils2["default"].w;var escapeRegExp=/([.*+?^=!:${}()|[\]\/\\])/g,percentRegExp=/%/g,underscoreRegExp=/_/g;defaultsPrototype.defaultFilter=function(collection,resourceName,params,options){var definition=this.definitions[resourceName],idA="id",resource=void 0;definition&&(idA=definition.idAttribute,resource=this.store[resourceName]);var filtered=collection,where=null,reserved={skip:"",offset:"",where:"",limit:"",orderBy:"",sort:""};params=params||{},options=options||{},where=_utils2["default"]._o(params.where)?params.where:{},options.allowSimpleWhere&&_utils2["default"].forOwn(params,function(value,key){key in reserved||key in where||(where[key]={"==":value})}),_utils2["default"].isEmpty(where)&&(where=null),where?filtered=_utils2["default"].filter(filtered,function(attrs){var first=!0,keep=!0;return options.excludeTemporary&&resource&&resource.temporaryItems[attrs[idA]]?!1:(_utils2["default"].forOwn(where,function(clause,field){_utils2["default"]._o(clause)||(clause={"==":clause}),_utils2["default"].forOwn(clause,function(term,op){var expr=void 0,isOr="|"===op[0],val=_utils2["default"].get(attrs,field);op=isOr?op.substr(1):op,"=="===op?expr=val==term:"==="===op?expr=val===term:"!="===op?expr=val!=term:"!=="===op?expr=val!==term:">"===op?expr=val>term:">="===op?expr=val>=term:"<"===op?expr=term>val:"<="===op?expr=term>=val:"isectEmpty"===op?expr=!_utils2["default"].intersection(val||[],term||[]).length:"isectNotEmpty"===op?expr=_utils2["default"].intersection(val||[],term||[]).length:"in"===op?expr=_utils2["default"]._s(term)?-1!==term.indexOf(val):_utils2["default"].contains(term,val):"notIn"===op?expr=_utils2["default"]._s(term)?-1===term.indexOf(val):!_utils2["default"].contains(term,val):0===op.indexOf("like")?expr=null!==like(term,op.substr(4)).exec(val):0===op.indexOf("notLike")?expr=null===like(term,op.substr(7)).exec(val):"contains"===op?expr=_utils2["default"]._s(val)?-1!==val.indexOf(term):_utils2["default"].contains(val,term):"notContains"===op&&(expr=_utils2["default"]._s(val)?-1===val.indexOf(term):!_utils2["default"].contains(val,term)),void 0!==expr&&(keep=first?expr:isOr?keep||expr:keep&&expr),first=!1})}),keep)}):options.excludeTemporary&&resource&&(filtered=_utils2["default"].filter(filtered,function(attrs){return resource.temporaryItems[attrs[idA]]}));var orderBy=null;_utils2["default"]._s(params.orderBy)?orderBy=[[params.orderBy,"ASC"]]:_utils2["default"]._a(params.orderBy)&&(orderBy=params.orderBy),!orderBy&&_utils2["default"]._s(params.sort)?orderBy=[[params.sort,"ASC"]]:!orderBy&&_utils2["default"]._a(params.sort)&&(orderBy=params.sort),orderBy&&!function(){var index=0;_utils2["default"].forEach(orderBy,function(def,i){if(_utils2["default"]._s(def))orderBy[i]=[def,"ASC"];else if(!_utils2["default"]._a(def))throw new _errors2["default"].IA('DS.filter("'+resourceName+'"[, params][, options]): '+_utils2["default"].toJson(def)+": Must be a string or an array!",{params:{"orderBy[i]":{actual:"undefined"==typeof def?"undefined":_typeof(def),expected:"string|array"}}})}),filtered=_utils2["default"].sort(filtered,function(a,b){return compare(orderBy,index,a,b)})}();var limit=_utils2["default"]._n(params.limit)?params.limit:null,skip=null;return _utils2["default"]._n(params.skip)?skip=params.skip:_utils2["default"]._n(params.offset)&&(skip=params.offset),limit&&skip?filtered=_utils2["default"].slice(filtered,skip,Math.min(filtered.length,skip+limit)):_utils2["default"]._n(limit)?filtered=_utils2["default"].slice(filtered,0,Math.min(filtered.length,limit)):_utils2["default"]._n(skip)&&(filtered=skip<filtered.length?_utils2["default"].slice(filtered,skip):[]),filtered===collection?filtered.slice():filtered};var DS=function(){function DS(options){_classCallCheck(this,DS);var _this=this;options=options||{},_this.store={},_this.definitions={},_this.adapters={},_this.defaults=new Defaults,_this.observe=_utils2["default"].observe,_utils2["default"].forOwn(options,function(v,k){"omit"===k?_this.defaults.omit=v.concat(Defaults.prototype.omit):_this.defaults[k]=v}),_this.defaults.logFn("new data store created",_this.defaults);var P=_utils2["default"].Promise;P&&!P.prototype.spread&&(P.prototype.spread=function(cb){return this.then(function(arr){return cb.apply(this,arr)})}),_utils2["default"].Events(_this)}return _createClass(DS,[{key:"getAdapterName",value:function(options){var errorIfNotExist=!1;if(options=options||{},this.defaults.logFn("getAdapterName",options),_utils2["default"]._s(options)&&(errorIfNotExist=!0,options={adapter:options}),this.adapters[options.adapter])return options.adapter;if(errorIfNotExist)throw new Error(options.adapter+" is not a registered adapter!");return options.defaultAdapter}},{key:"getAdapter",value:function(options){return options=options||{},this.defaults.logFn("getAdapter",options),this.adapters[this.getAdapterName(options)]}},{key:"registerAdapter",value:function(name,Adapter,options){var _this=this;options=options||{},_this.defaults.logFn("registerAdapter",name,Adapter,options),_utils2["default"].isFunction(Adapter)?_this.adapters[name]=new Adapter(options):_this.adapters[name]=Adapter,options["default"]&&(_this.defaults.defaultAdapter=name),_this.defaults.logFn("default adapter is "+_this.defaults.defaultAdapter)}},{key:"is",value:function(resourceName,instance){var definition=this.definitions[resourceName];if(!definition)throw new _errors2["default"].NER(resourceName);return instance instanceof definition[definition["class"]]}},{key:"clear",value:function(){var _this2=this,ejected={};return _utils2["default"].forOwn(this.definitions,function(definition){var name=definition.name;ejected[name]=definition.ejectAll(),_this2.store[name].completedQueries={},_this2.store[name].queryData={}}),ejected}},{key:"errorFn",value:function(){for(var _len=arguments.length,args=Array(_len),_key=0;_len>_key;_key++)args[_key]=arguments[_key];var options=args[args.length-1],defaultHandler=this.defaults.errorHandler,errorHandler=options?options.errorHandler:defaultHandler;return errorHandler=errorHandler||defaultHandler,function(err){return errorHandler.apply(void 0,[err].concat(args))}}}]),DS}(),dsPrototype=DS.prototype;dsPrototype.getAdapterName.shorthand=!1,dsPrototype.getAdapter.shorthand=!1,dsPrototype.registerAdapter.shorthand=!1,dsPrototype.errors=_errors2["default"],dsPrototype.utils=_utils2["default"],addMethods(dsPrototype,_index2["default"]),addMethods(dsPrototype,_index4["default"]),exports["default"]=DS},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function _isArray(value){return"[object Array]"===toString.call(value)||!1}function isRegExp(value){return"[object RegExp]"===toString.call(value)||!1}function isString(value){return"string"==typeof value||value&&"object"===("undefined"==typeof value?"undefined":_typeof(value))&&"[object String]"===toString.call(value)||!1}function isObject(value){return"[object Object]"===toString.call(value)||!1}function isDate(value){return value&&"object"===("undefined"==typeof value?"undefined":_typeof(value))&&"[object Date]"===toString.call(value)||!1}function isNumber(value){var type="undefined"==typeof value?"undefined":_typeof(value);return"number"===type||value&&"object"===type&&"[object Number]"===toString.call(value)||!1}function isFunction(value){return"function"==typeof value||value&&"[object Function]"===toString.call(value)||!1}function isStringOrNumber(value){return isString(value)||isNumber(value)}function isStringOrNumberErr(field){return new _errors2["default"].IA('"'+field+'" must be a string or a number!')}function isObjectErr(field){return new _errors2["default"].IA('"'+field+'" must be an object!')}function isArrayErr(field){return new _errors2["default"].IA('"'+field+'" must be an array!')}function isEmpty(val){if(null==val)return!0;if("string"==typeof val||isArray(val))return!val.length;if("object"===("undefined"==typeof val?"undefined":_typeof(val))){var result=!0;return forOwn(val,function(){return result=!1,!1}),result}return!0}function intersection(array1,array2){if(!array1||!array2)return[];for(var result=[],item=void 0,i=0,length=array1.length;length>i;i++)item=array1[i],contains(result,item)||contains(array2,item)&&result.push(item);return result}function filter(array,cb,thisObj){var results=[];return forEach(array,function(value,key,arr){cb(value,key,arr)&&results.push(value)},thisObj),results}function Events(target){var events={};target=target||this,Object.defineProperties(target,{on:{value:function(type,func,ctx){events[type]=events[type]||[],events[type].push({f:func,c:ctx})}},off:{value:function(type,func){var listeners=events[type];if(listeners)if(func){for(var i=0;i<listeners.length;i++)if(listeners[i].f===func){listeners.splice(i,1);break}}else listeners.splice(0,listeners.length);else events={}}},emit:{value:function(){for(var _len=arguments.length,args=Array(_len),_key=0;_len>_key;_key++)args[_key]=arguments[_key];var listeners=events[args.shift()]||[];if(listeners)for(var i=0;i<listeners.length;i++)listeners[i].f.apply(listeners[i].c,args)}}})}function copy(source,destination,stackSource,stackDest,blacklist){if(destination){if(source===destination)throw new Error("Cannot copy! Source and destination are identical.");if(stackSource=stackSource||[],stackDest=stackDest||[],isObject(source)){var index=stackSource.indexOf(source);if(-1!==index)return stackDest[index];stackSource.push(source),stackDest.push(destination)}var result=void 0;if(isArray(source)){var i=void 0;for(destination.length=0,i=0;i<source.length;i++)result=copy(source[i],null,stackSource,stackDest,blacklist),isObject(source[i])&&(stackSource.push(source[i]),stackDest.push(result)),destination.push(result)}else{isArray(destination)?destination.length=0:forEach(destination,function(value,key){delete destination[key]});for(var key in source)if(source.hasOwnProperty(key)){if(isBlacklisted(key,blacklist))continue;result=copy(source[key],null,stackSource,stackDest,blacklist),isObject(source[key])&&(stackSource.push(source[key]),stackDest.push(result)),destination[key]=result}}}else destination=source,source&&(isArray(source)?destination=copy(source,[],stackSource,stackDest,blacklist):isDate(source)?destination=new Date(source.getTime()):isRegExp(source)?(destination=new RegExp(source.source,source.toString().match(/[^\/]*$/)[0]),destination.lastIndex=source.lastIndex):isObject(source)&&(destination=copy(source,Object.create(Object.getPrototypeOf(source)),stackSource,stackDest,blacklist)));return destination}function equals(o1,o2){if(o1===o2)return!0;if(null===o1||null===o2)return!1;if(o1!==o1&&o2!==o2)return!0;var length,key,keySet,t1="undefined"==typeof o1?"undefined":_typeof(o1),t2="undefined"==typeof o2?"undefined":_typeof(o2);if(t1==t2&&"object"==t1){if(!isArray(o1)){if(isDate(o1))return isDate(o2)?equals(o1.getTime(),o2.getTime()):!1;if(isRegExp(o1)&&isRegExp(o2))return o1.toString()==o2.toString();if(isArray(o2))return!1;keySet={};for(key in o1)if("$"!==key.charAt(0)&&!isFunction(o1[key])){if(!equals(o1[key],o2[key]))return!1;keySet[key]=!0}for(key in o2)if(!keySet.hasOwnProperty(key)&&"$"!==key.charAt(0)&&void 0!==o2[key]&&!isFunction(o2[key]))return!1;return!0}if(!isArray(o2))return!1;if((length=o1.length)===o2.length){for(key=0;length>key;key++)if(!equals(o1[key],o2[key]))return!1;return!0}}return!1}function resolveId(definition,idOrInstance){return isString(idOrInstance)||isNumber(idOrInstance)?idOrInstance:idOrInstance&&definition?idOrInstance[definition.idAttribute]||idOrInstance:idOrInstance}function resolveItem(resource,idOrInstance){return resource&&(isString(idOrInstance)||isNumber(idOrInstance))?resource.index[idOrInstance]||idOrInstance:idOrInstance}function isValidString(val){return null!=val&&""!==val}function join(items,separator){return separator=separator||"",filter(items,isValidString).join(separator)}function makePath(){for(var _len2=arguments.length,args=Array(_len2),_key2=0;_len2>_key2;_key2++)args[_key2]=arguments[_key2];var result=join(args,"/");return result.replace(/([^:\/]|^)\/{2,}/g,"$1/")}Object.defineProperty(exports,"__esModule",{value:!0});var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol?"symbol":typeof obj},_errors=__webpack_require__(3),_errors2=_interopRequireDefault(_errors),BinaryHeap=__webpack_require__(4),forEach=__webpack_require__(5),slice=__webpack_require__(6),forOwn=__webpack_require__(7),contains=__webpack_require__(10),deepMixIn=__webpack_require__(12),pascalCase=__webpack_require__(14),remove=__webpack_require__(21),pick=__webpack_require__(22),_keys=__webpack_require__(23),sort=__webpack_require__(24),upperCase=__webpack_require__(19),get=__webpack_require__(25),set=__webpack_require__(27),observe=__webpack_require__(29),guid=__webpack_require__(30),w=void 0,P=void 0,File=void 0,objectProto=Object.prototype,toString=objectProto.toString;try{P=Promise}catch(e){console.error("js-data requires a global Promise constructor!")}try{File=window.File}catch(e){File=function(){}}var isArray=Array.isArray||_isArray;try{w=window,w={}}catch(e){w=null}var toPromisify=["beforeValidate","validate","afterValidate","beforeCreate","afterCreate","beforeUpdate","afterUpdate","beforeDestroy","afterDestroy"],isBlacklisted=observe.isBlacklisted;exports["default"]={Promise:P,_:function(parent,options){var _this=this;if(parent=parent||{},options=options||{},options&&options.constructor===parent.constructor)return options;if(!isObject(options))throw new _errors2["default"].IA('"options" must be an object!');forEach(toPromisify,function(name){"function"==typeof options[name]&&-1===options[name].toString().indexOf("for (var _len = arg")&&(options[name]=_this.promisify(options[name]))});var O=function(attrs){var self=this;forOwn(attrs,function(value,key){self[key]=value})};return O.prototype=parent,O.prototype.orig=function(){var orig={};return forOwn(this,function(value,key){orig[key]=value}),orig},new O(options)},_n:isNumber,_s:isString,_sn:isStringOrNumber,_snErr:isStringOrNumberErr,_o:isObject,_oErr:isObjectErr,_a:isArray,_aErr:isArrayErr,applyScope:function(definition,params,options){var scope=options.scope,_params=copy(params);scope?isString(scope)&&(scope=[scope]):scope=[],scope.unshift("defaultScope"),forEach(scope,function(_scope){var scopeDef=options.scopes[_scope];"function"==typeof scopeDef?deepMixIn(params,scopeDef(definition)):scopeDef&&deepMixIn(params,scopeDef)}),deepMixIn(params,_params)},compute:function(fn,field){var _this=this,args=[];isObject(fn)||(forEach(fn.deps,function(dep){args.push(get(_this,dep))}),set(_this,field,fn[fn.length-1].apply(_this,args)))},contains:contains,copy:copy,deepMixIn:deepMixIn,diffObjectFromOldObject:observe.diffObjectFromOldObject,BinaryHeap:BinaryHeap,equals:equals,Events:Events,filter:filter,fillIn:function(target,obj){return forOwn(obj,function(v,k){k in target||(target[k]=v)}),target},forEach:forEach,forOwn:forOwn,fromJson:function(json){return isString(json)?JSON.parse(json):json},get:get,guid:guid,intersection:intersection,isArray:isArray,isBlacklisted:isBlacklisted,isEmpty:isEmpty,isFunction:isFunction,isObject:isObject,isNumber:isNumber,isString:isString,keys:_keys,makePath:makePath,observe:observe,omit:function(obj,bl){var toRemove=[];return forOwn(obj,function(v,k){isBlacklisted(k,bl)&&toRemove.push(k)}),forEach(toRemove,function(k){delete obj[k]}),obj},pascalCase:pascalCase,pick:pick,promisify:function(fn,target){var _this=this;if(fn){if("function"!=typeof fn)throw new Error("Can only promisify functions!");return function(){for(var _len3=arguments.length,args=Array(_len3),_key3=0;_len3>_key3;_key3++)args[_key3]=arguments[_key3];return new _this.Promise(function(resolve,reject){args.push(function(err,result){err?reject(err):resolve(result)});try{var promise=fn.apply(target||this,args);promise&&promise.then&&promise.then(resolve,reject)}catch(err){reject(err)}})}}},remove:remove,set:set,slice:slice,sort:sort,toJson:JSON.stringify,updateTimestamp:function(timestamp){var newTimestamp="function"==typeof Date.now?Date.now():(new Date).getTime();return timestamp&&timestamp>=newTimestamp?timestamp+1:newTimestamp},upperCase:upperCase,removeCircular:function(object){return function rmCirc(value,ctx){var i=void 0,nu=void 0;if(!("object"!==("undefined"==typeof value?"undefined":_typeof(value))||null===value||value instanceof Boolean||value instanceof Date||value instanceof Number||value instanceof RegExp||value instanceof String||File&&value instanceof File)){for(var cur=ctx.cur,parent=ctx.ctx;parent;){if(parent.cur===cur)return void 0;parent=parent.ctx}if(isArray(value))for(nu=[],i=0;i<value.length;i+=1)nu[i]=rmCirc(value[i],{ctx:ctx,cur:value[i]});else nu={},forOwn(value,function(v,k){nu[k]=rmCirc(value[k],{ctx:ctx,cur:value[k]})});return nu}return value}(object,{ctx:null,cur:object})},resolveItem:resolveItem,resolveId:resolveId,respond:function(response,meta,options){return"array"===options.returnMeta?[response,meta]:"object"===options.returnMeta?{response:response,meta:meta}:response},w:w,applyRelationGettersToTarget:function(store,definition,target){this.forEach(definition.relationList,function(def){var relationName=def.relation,localField=def.localField,localKey=def.localKey,foreignKey=def.foreignKey,localKeys=def.localKeys,foreignKeys=def.foreignKeys,enumerable="boolean"==typeof def.enumerable?def.enumerable:!!definition.relationsEnumerable;if("boolean"==typeof def.link?def.link:!!definition.linkRelations){delete target[localField];var prop={enumerable:enumerable};"belongsTo"===def.type?(prop.get=function(){var key=get(this,localKey),hasKey=!(!key&&0!==key);return hasKey?definition.getResource(relationName).get(key):void 0},prop.set=function(parent){return parent&&set(this,localKey,get(parent,definition.getResource(relationName).idAttribute)),get(this,localField)}):"hasMany"===def.type?(prop.get=function(){var params={};if(foreignKey)return params[foreignKey]=this[definition.idAttribute],definition.getResource(relationName).defaultFilter.call(store,store.store[relationName].collection,relationName,params,{allowSimpleWhere:!0});if(localKeys){var keys=get(this,localKeys)||[];return definition.getResource(relationName).getAll(isArray(keys)?keys:_keys(keys))}return foreignKeys?(set(params,"where."+foreignKeys+".contains",this[definition.idAttribute]),definition.getResource(relationName).defaultFilter.call(store,store.store[relationName].collection,relationName,params)):void 0},prop.set=function(children){var _this2=this;return children&&children.length&&!function(){var id=get(_this2,definition.idAttribute);foreignKey?forEach(children,function(child){set(child,foreignKey,id)}):localKeys?!function(){var keys=[];forEach(children,function(child){keys.push(get(child,definition.getResource(relationName).idAttribute))}),set(_this2,localKeys,keys)}():foreignKeys&&forEach(children,function(child){var keys=get(child,foreignKeys);keys?contains(keys,id)||keys.push(id):set(child,foreignKeys,[id])})}(),get(this,localField)}):"hasOne"===def.type&&(localKey?(prop.get=function(){var key=get(this,localKey),hasKey=!(!key&&0!==key);return hasKey?definition.getResource(relationName).get(key):void 0},prop.set=function(sibling){return sibling&&set(this,localKey,get(sibling,definition.getResource(relationName).idAttribute)),get(this,localField)}):(prop.get=function(){var params={};params[foreignKey]=this[definition.idAttribute];var items=params[foreignKey]?definition.getResource(relationName).defaultFilter.call(store,store.store[relationName].collection,relationName,params,{allowSimpleWhere:!0}):[];return items.length?items[0]:void 0},prop.set=function(sibling){return sibling&&set(sibling,foreignKey,get(this,definition.idAttribute)),get(this,localField)})),def.get&&!function(){var orig=prop.get;prop.get=function(){var _this3=this;return def.get(definition,def,this,function(){for(var _len4=arguments.length,args=Array(_len4),_key4=0;_len4>_key4;_key4++)args[_key4]=arguments[_key4];return orig.apply(_this3,args)})}}(),Object.defineProperty(target,localField,prop)}})}}},function(module,exports){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var IllegalArgumentError=function(_Error){function IllegalArgumentError(message){_classCallCheck(this,IllegalArgumentError);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(IllegalArgumentError).call(this));return"function"==typeof Error.captureStackTrace&&Error.captureStackTrace(_this,_this.constructor),_this.type=_this.constructor.name,_this.message=message,_this}return _inherits(IllegalArgumentError,_Error),IllegalArgumentError}(Error),RuntimeError=function(_Error2){function RuntimeError(message){_classCallCheck(this,RuntimeError);var _this2=_possibleConstructorReturn(this,Object.getPrototypeOf(RuntimeError).call(this));return"function"==typeof Error.captureStackTrace&&Error.captureStackTrace(_this2,_this2.constructor),_this2.type=_this2.constructor.name,_this2.message=message,_this2}return _inherits(RuntimeError,_Error2),RuntimeError}(Error),NonexistentResourceError=function(_Error3){function NonexistentResourceError(resourceName){_classCallCheck(this,NonexistentResourceError);var _this3=_possibleConstructorReturn(this,Object.getPrototypeOf(NonexistentResourceError).call(this));return"function"==typeof Error.captureStackTrace&&Error.captureStackTrace(_this3,_this3.constructor),_this3.type=_this3.constructor.name,_this3.message=resourceName+" is not a registered resource!",_this3}return _inherits(NonexistentResourceError,_Error3),NonexistentResourceError}(Error);exports["default"]={IllegalArgumentError:IllegalArgumentError,IA:IllegalArgumentError,RuntimeError:RuntimeError,R:RuntimeError,NonexistentResourceError:NonexistentResourceError,NER:NonexistentResourceError}},function(module,exports,__webpack_require__){!function(root,factory){module.exports=factory()}(this,function(){return function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:!1};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.loaded=!0,module.exports}var installedModules={};return __webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.p="",__webpack_require__(0)}([function(module,exports,__webpack_require__){function bubbleUp(heap,weightFunc,n){for(var element=heap[n],weight=weightFunc(element);n>0;){var parentN=Math.floor((n+1)/2)-1,_parent=heap[parentN];if(weight>=weightFunc(_parent))break;heap[parentN]=element,heap[n]=_parent,n=parentN}}function BinaryHeap(weightFunc,compareFunc){if(weightFunc||(weightFunc=function(x){return x}),compareFunc||(compareFunc=function(x,y){return x===y}),"function"!=typeof weightFunc)throw new Error('BinaryHeap([weightFunc][, compareFunc]): "weightFunc" must be a function!');if("function"!=typeof compareFunc)throw new Error('BinaryHeap([weightFunc][, compareFunc]): "compareFunc" must be a function!');this.weightFunc=weightFunc,this.compareFunc=compareFunc,this.heap=[]}var bubbleDown=function(heap,weightFunc,n){for(var length=heap.length,node=heap[n],nodeWeight=weightFunc(node);;){var child2N=2*(n+1),child1N=child2N-1,swap=null;if(length>child1N){var child1=heap[child1N],child1Weight=weightFunc(child1);nodeWeight>child1Weight&&(swap=child1N)}if(length>child2N){var child2=heap[child2N],child2Weight=weightFunc(child2);child2Weight<(null===swap?nodeWeight:weightFunc(heap[child1N]))&&(swap=child2N)}if(null===swap)break;heap[n]=heap[swap],heap[swap]=node,n=swap}},BHProto=BinaryHeap.prototype;BHProto.push=function(node){this.heap.push(node),bubbleUp(this.heap,this.weightFunc,this.heap.length-1)},BHProto.peek=function(){return this.heap[0]},BHProto.pop=function(){var front=this.heap[0],end=this.heap.pop();return this.heap.length>0&&(this.heap[0]=end,bubbleDown(this.heap,this.weightFunc,0)),front},BHProto.remove=function(node){
for(var length=this.heap.length,i=0;length>i;i++)if(this.compareFunc(this.heap[i],node)){var removed=this.heap[i],end=this.heap.pop();return i!==length-1&&(this.heap[i]=end,bubbleUp(this.heap,this.weightFunc,i),bubbleDown(this.heap,this.weightFunc,i)),removed}return null},BHProto.removeAll=function(){this.heap=[]},BHProto.size=function(){return this.heap.length},module.exports=BinaryHeap}])})},function(module,exports){function forEach(arr,callback,thisObj){if(null!=arr)for(var i=-1,len=arr.length;++i<len&&callback.call(thisObj,arr[i],i,arr)!==!1;);}module.exports=forEach},function(module,exports){function slice(arr,start,end){var len=arr.length;start=null==start?0:0>start?Math.max(len+start,0):Math.min(start,len),end=null==end?len:0>end?Math.max(len+end,0):Math.min(end,len);for(var result=[];end>start;)result.push(arr[start++]);return result}module.exports=slice},function(module,exports,__webpack_require__){function forOwn(obj,fn,thisObj){forIn(obj,function(val,key){return hasOwn(obj,key)?fn.call(thisObj,obj[key],key,obj):void 0})}var hasOwn=__webpack_require__(8),forIn=__webpack_require__(9);module.exports=forOwn},function(module,exports){function hasOwn(obj,prop){return Object.prototype.hasOwnProperty.call(obj,prop)}module.exports=hasOwn},function(module,exports,__webpack_require__){function checkDontEnum(){_dontEnums=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],_hasDontEnumBug=!0;for(var key in{toString:null})_hasDontEnumBug=!1}function forIn(obj,fn,thisObj){var key,i=0;null==_hasDontEnumBug&&checkDontEnum();for(key in obj)if(exec(fn,obj,key,thisObj)===!1)break;if(_hasDontEnumBug)for(var ctor=obj.constructor,isProto=!!ctor&&obj===ctor.prototype;(key=_dontEnums[i++])&&("constructor"===key&&(isProto||!hasOwn(obj,key))||obj[key]===Object.prototype[key]||exec(fn,obj,key,thisObj)!==!1););}function exec(fn,obj,key,thisObj){return fn.call(thisObj,obj[key],key,obj)}var _hasDontEnumBug,_dontEnums,hasOwn=__webpack_require__(8);module.exports=forIn},function(module,exports,__webpack_require__){function contains(arr,val){return-1!==indexOf(arr,val)}var indexOf=__webpack_require__(11);module.exports=contains},function(module,exports){function indexOf(arr,item,fromIndex){if(fromIndex=fromIndex||0,null==arr)return-1;for(var len=arr.length,i=0>fromIndex?len+fromIndex:fromIndex;len>i;){if(arr[i]===item)return i;i++}return-1}module.exports=indexOf},function(module,exports,__webpack_require__){function deepMixIn(target,objects){for(var obj,i=0,n=arguments.length;++i<n;)obj=arguments[i],obj&&forOwn(obj,copyProp,target);return target}function copyProp(val,key){var existing=this[key];isPlainObject(val)&&isPlainObject(existing)?deepMixIn(existing,val):this[key]=val}var forOwn=__webpack_require__(7),isPlainObject=__webpack_require__(13);module.exports=deepMixIn},function(module,exports){function isPlainObject(value){return!!value&&"object"==typeof value&&value.constructor===Object}module.exports=isPlainObject},function(module,exports,__webpack_require__){function pascalCase(str){return str=toString(str),camelCase(str).replace(/^[a-z]/,upperCase)}var toString=__webpack_require__(15),camelCase=__webpack_require__(16),upperCase=__webpack_require__(19);module.exports=pascalCase},function(module,exports){function toString(val){return null==val?"":val.toString()}module.exports=toString},function(module,exports,__webpack_require__){function camelCase(str){return str=toString(str),str=replaceAccents(str),str=removeNonWord(str).replace(/[\-_]/g," ").replace(/\s[a-z]/g,upperCase).replace(/\s+/g,"").replace(/^[A-Z]/g,lowerCase)}var toString=__webpack_require__(15),replaceAccents=__webpack_require__(17),removeNonWord=__webpack_require__(18),upperCase=__webpack_require__(19),lowerCase=__webpack_require__(20);module.exports=camelCase},function(module,exports,__webpack_require__){function replaceAccents(str){return str=toString(str),str.search(/[\xC0-\xFF]/g)>-1&&(str=str.replace(/[\xC0-\xC5]/g,"A").replace(/[\xC6]/g,"AE").replace(/[\xC7]/g,"C").replace(/[\xC8-\xCB]/g,"E").replace(/[\xCC-\xCF]/g,"I").replace(/[\xD0]/g,"D").replace(/[\xD1]/g,"N").replace(/[\xD2-\xD6\xD8]/g,"O").replace(/[\xD9-\xDC]/g,"U").replace(/[\xDD]/g,"Y").replace(/[\xDE]/g,"P").replace(/[\xE0-\xE5]/g,"a").replace(/[\xE6]/g,"ae").replace(/[\xE7]/g,"c").replace(/[\xE8-\xEB]/g,"e").replace(/[\xEC-\xEF]/g,"i").replace(/[\xF1]/g,"n").replace(/[\xF2-\xF6\xF8]/g,"o").replace(/[\xF9-\xFC]/g,"u").replace(/[\xFE]/g,"p").replace(/[\xFD\xFF]/g,"y")),str}var toString=__webpack_require__(15);module.exports=replaceAccents},function(module,exports,__webpack_require__){function removeNonWord(str){return str=toString(str),str.replace(PATTERN,"")}var toString=__webpack_require__(15),PATTERN=/[^\x20\x2D0-9A-Z\x5Fa-z\xC0-\xD6\xD8-\xF6\xF8-\xFF]/g;module.exports=removeNonWord},function(module,exports,__webpack_require__){function upperCase(str){return str=toString(str),str.toUpperCase()}var toString=__webpack_require__(15);module.exports=upperCase},function(module,exports,__webpack_require__){function lowerCase(str){return str=toString(str),str.toLowerCase()}var toString=__webpack_require__(15);module.exports=lowerCase},function(module,exports,__webpack_require__){function remove(arr,item){var idx=indexOf(arr,item);-1!==idx&&arr.splice(idx,1)}var indexOf=__webpack_require__(11);module.exports=remove},function(module,exports,__webpack_require__){function pick(obj,var_keys){for(var key,keys="string"!=typeof arguments[1]?arguments[1]:slice(arguments,1),out={},i=0;key=keys[i++];)out[key]=obj[key];return out}var slice=__webpack_require__(6);module.exports=pick},function(module,exports,__webpack_require__){var forOwn=__webpack_require__(7),keys=Object.keys||function(obj){var keys=[];return forOwn(obj,function(val,key){keys.push(key)}),keys};module.exports=keys},function(module,exports){function mergeSort(arr,compareFn){if(null==arr)return[];if(arr.length<2)return arr;null==compareFn&&(compareFn=defaultCompare);var mid,left,right;return mid=~~(arr.length/2),left=mergeSort(arr.slice(0,mid),compareFn),right=mergeSort(arr.slice(mid,arr.length),compareFn),merge(left,right,compareFn)}function defaultCompare(a,b){return b>a?-1:a>b?1:0}function merge(left,right,compareFn){for(var result=[];left.length&&right.length;)compareFn(left[0],right[0])<=0?result.push(left.shift()):result.push(right.shift());return left.length&&result.push.apply(result,left),right.length&&result.push.apply(result,right),result}module.exports=mergeSort},function(module,exports,__webpack_require__){function get(obj,prop){for(var parts=prop.split("."),last=parts.pop();prop=parts.shift();)if(obj=obj[prop],null==obj)return;return obj[last]}__webpack_require__(26);module.exports=get},function(module,exports){function isPrimitive(value){switch(typeof value){case"string":case"number":case"boolean":return!0}return null==value}module.exports=isPrimitive},function(module,exports,__webpack_require__){function set(obj,prop,val){var parts=/^(.+)\.(.+)$/.exec(prop);parts?namespace(obj,parts[1])[parts[2]]=val:obj[prop]=val}var namespace=__webpack_require__(28);module.exports=set},function(module,exports,__webpack_require__){function namespace(obj,path){return path?(forEach(path.split("."),function(key){obj[key]||(obj[key]={}),obj=obj[key]}),obj):obj}var forEach=__webpack_require__(5);module.exports=namespace},function(module,exports){!function(global){function detectObjectObserve(){function callback(recs){records=recs}if("function"!=typeof Object.observe||"function"!=typeof Array.observe)return!1;var records=[],test={},arr=[];return Object.observe(test,callback),Array.observe(arr,callback),test.id=1,test.id=2,delete test.id,arr.push(1,2),arr.length=0,Object.deliverChangeRecords(callback),5!==records.length?!1:"add"!=records[0].type||"update"!=records[1].type||"delete"!=records[2].type||"splice"!=records[3].type||"splice"!=records[4].type?!1:(Object.unobserve(test,callback),Array.unobserve(arr,callback),!0)}function dirtyCheck(observer){for(var cycles=0;MAX_DIRTY_CHECK_CYCLES>cycles&&observer.check_();)cycles++;return testingExposeCycleCount&&(global.dirtyCheckCycleCount=cycles),cycles>0}function objectIsEmpty(object){for(var prop in object)return!1;return!0}function diffIsEmpty(diff){return objectIsEmpty(diff.added)&&objectIsEmpty(diff.removed)&&objectIsEmpty(diff.changed)}function isBlacklisted(prop,bl){if(!bl||!bl.length)return!1;for(var matches,i=0;i<bl.length;i++)if("[object RegExp]"===Object.prototype.toString.call(bl[i])&&bl[i].test(prop)||bl[i]===prop)return matches=prop;return!!matches}function diffObjectFromOldObject(object,oldObject,equals,bl){var added={},removed={},changed={};for(var prop in oldObject){var newValue=object[prop];isBlacklisted(prop,bl)||void 0!==newValue&&(equals?equals(newValue,oldObject[prop]):newValue===oldObject[prop])||(prop in object?(equals?equals(newValue,oldObject[prop]):newValue===oldObject[prop])||(changed[prop]=newValue):removed[prop]=void 0)}for(var prop in object)prop in oldObject||isBlacklisted(prop,bl)||(added[prop]=object[prop]);return Array.isArray(object)&&object.length!==oldObject.length&&(changed.length=object.length),{added:added,removed:removed,changed:changed}}function runEOMTasks(){if(!eomTasks.length)return!1;for(var i=0;i<eomTasks.length;i++)eomTasks[i]();return eomTasks.length=0,!0}function newObservedObject(){function callback(records){observer&&observer.state_===OPENED&&!discardRecords&&observer.check_(records)}var observer,object,discardRecords=!1,first=!0;return{open:function(obs){if(observer)throw Error("ObservedObject in use");first||Object.deliverChangeRecords(callback),observer=obs,first=!1},observe:function(obj,arrayObserve){object=obj,arrayObserve?Array.observe(object,callback):Object.observe(object,callback)},deliver:function(discard){discardRecords=discard,Object.deliverChangeRecords(callback),discardRecords=!1},close:function(){observer=void 0,Object.unobserve(object,callback),observedObjectCache.push(this)}}}function getObservedObject(observer,object,arrayObserve){var dir=observedObjectCache.pop()||newObservedObject();return dir.open(observer),dir.observe(object,arrayObserve),dir}function Observer(){this.state_=UNOPENED,this.callback_=void 0,this.target_=void 0,this.directObserver_=void 0,this.value_=void 0,this.id_=nextObserverId++}function addToAll(observer){Observer._allObserversCount++,collectObservers&&allObservers.push(observer)}function removeFromAll(observer){Observer._allObserversCount--}function ObjectObserver(object){Observer.call(this),this.value_=object,this.oldObject_=void 0}function diffObjectFromChangeRecords(object,changeRecords,oldValues){for(var added={},removed={},i=0;i<changeRecords.length;i++){var record=changeRecords[i];expectedRecordTypes[record.type]?(record.name in oldValues||(oldValues[record.name]=record.oldValue),"update"!=record.type&&("add"!=record.type?record.name in added?(delete added[record.name],delete oldValues[record.name]):removed[record.name]=!0:record.name in removed?delete removed[record.name]:added[record.name]=!0)):(console.error("Unknown changeRecord type: "+record.type),console.error(record))}for(var prop in added)added[prop]=object[prop];for(var prop in removed)removed[prop]=void 0;var changed={};for(var prop in oldValues)if(!(prop in added||prop in removed)){var newValue=object[prop];oldValues[prop]!==newValue&&(changed[prop]=newValue)}return{added:added,removed:removed,changed:changed}}var testingExposeCycleCount=global.testingExposeCycleCount,hasObserve=detectObjectObserve(),createObject="__proto__"in{}?function(obj){return obj}:function(obj){var proto=obj.__proto__;if(!proto)return obj;var newObject=Object.create(proto);return Object.getOwnPropertyNames(obj).forEach(function(name){Object.defineProperty(newObject,name,Object.getOwnPropertyDescriptor(obj,name))}),newObject},MAX_DIRTY_CHECK_CYCLES=1e3,eomTasks=[],runEOM=hasObserve?function(){return function(fn){return Promise.resolve().then(fn)}}():function(){return function(fn){eomTasks.push(fn)}}(),observedObjectCache=[],UNOPENED=0,OPENED=1,CLOSED=2,nextObserverId=1;Observer.prototype={open:function(callback,target){if(this.state_!=UNOPENED)throw Error("Observer has already been opened.");return addToAll(this),this.callback_=callback,this.target_=target,this.connect_(),this.state_=OPENED,this.value_},close:function(){this.state_==OPENED&&(removeFromAll(this),this.disconnect_(),this.value_=void 0,this.callback_=void 0,this.target_=void 0,this.state_=CLOSED)},deliver:function(){this.state_==OPENED&&dirtyCheck(this)},report_:function(changes){try{this.callback_.apply(this.target_,changes)}catch(ex){Observer._errorThrownDuringCallback=!0,console.error("Exception caught during observer callback: "+(ex.stack||ex))}},discardChanges:function(){return this.check_(void 0,!0),this.value_}};var allObservers,collectObservers=!hasObserve;Observer._allObserversCount=0,collectObservers&&(allObservers=[]);var runningMicrotaskCheckpoint=!1;global.Platform=global.Platform||{},global.Platform.performMicrotaskCheckpoint=function(){if(!runningMicrotaskCheckpoint&&collectObservers){runningMicrotaskCheckpoint=!0;var anyChanged,toCheck,cycles=0;do{cycles++,toCheck=allObservers,allObservers=[],anyChanged=!1;for(var i=0;i<toCheck.length;i++){var observer=toCheck[i];observer.state_==OPENED&&(observer.check_()&&(anyChanged=!0),allObservers.push(observer))}runEOMTasks()&&(anyChanged=!0)}while(MAX_DIRTY_CHECK_CYCLES>cycles&&anyChanged);testingExposeCycleCount&&(global.dirtyCheckCycleCount=cycles),runningMicrotaskCheckpoint=!1}},collectObservers&&(global.Platform.clearObservers=function(){allObservers=[]}),ObjectObserver.prototype=createObject({__proto__:Observer.prototype,arrayObserve:!1,connect_:function(callback,target){hasObserve?this.directObserver_=getObservedObject(this,this.value_,this.arrayObserve):this.oldObject_=this.copyObject(this.value_)},copyObject:function(object){var copy=Array.isArray(object)?[]:{};for(var prop in object)copy[prop]=object[prop];return Array.isArray(object)&&(copy.length=object.length),copy},check_:function(changeRecords,skipChanges){var diff,oldValues;if(hasObserve){if(!changeRecords)return!1;oldValues={},diff=diffObjectFromChangeRecords(this.value_,changeRecords,oldValues)}else oldValues=this.oldObject_,diff=diffObjectFromOldObject(this.value_,this.oldObject_);return diffIsEmpty(diff)?!1:(hasObserve||(this.oldObject_=this.copyObject(this.value_)),this.report_([diff.added||{},diff.removed||{},diff.changed||{},function(property){return oldValues[property]}]),!0)},disconnect_:function(){hasObserve?(this.directObserver_.close(),this.directObserver_=void 0):this.oldObject_=void 0},deliver:function(){this.state_==OPENED&&(hasObserve?this.directObserver_.deliver(!1):dirtyCheck(this))},discardChanges:function(){return this.directObserver_?this.directObserver_.deliver(!0):this.oldObject_=this.copyObject(this.value_),this.value_}});var observerSentinel={},expectedRecordTypes={add:!0,update:!0,"delete":!0};global.Observer=Observer,global.isBlacklisted=isBlacklisted,global.Observer.runEOM_=runEOM,global.Observer.observerSentinel_=observerSentinel,global.Observer.hasObjectObserve=hasObserve,global.diffObjectFromOldObject=diffObjectFromOldObject,global.ObjectObserver=ObjectObserver}(exports)},function(module,exports,__webpack_require__){function guid(){return randHex(8)+"-"+randHex(4)+"-4"+randHex(3)+"-"+choice(8,9,"a","b")+randHex(3)+"-"+randHex(12)}var randHex=__webpack_require__(31),choice=__webpack_require__(32);module.exports=guid},function(module,exports,__webpack_require__){function randHex(size){size=size&&size>0?size:6;for(var str="";size--;)str+=choice(_chars);return str}var choice=__webpack_require__(32),_chars="0123456789abcdef".split("");module.exports=randHex},function(module,exports,__webpack_require__){function choice(items){var target=1===arguments.length&&isArray(items)?items:arguments;return target[randInt(0,target.length-1)]}var randInt=__webpack_require__(33),isArray=__webpack_require__(38);module.exports=choice},function(module,exports,__webpack_require__){function randInt(min,max){return min=null==min?MIN_INT:~~min,max=null==max?MAX_INT:~~max,Math.round(rand(min-.5,max+.499999999999))}var MIN_INT=__webpack_require__(34),MAX_INT=__webpack_require__(35),rand=__webpack_require__(36);module.exports=randInt},function(module,exports){module.exports=-2147483648},function(module,exports){module.exports=2147483647},function(module,exports,__webpack_require__){function rand(min,max){return min=null==min?MIN_INT:min,max=null==max?MAX_INT:max,min+(max-min)*random()}var random=__webpack_require__(37),MIN_INT=__webpack_require__(34),MAX_INT=__webpack_require__(35);module.exports=rand},function(module,exports){function random(){return random.get()}random.get=Math.random,module.exports=random},function(module,exports,__webpack_require__){var isKind=__webpack_require__(39),isArray=Array.isArray||function(val){return isKind(val,"Array")};module.exports=isArray},function(module,exports,__webpack_require__){function isKind(val,kind){return kindOf(val)===kind}var kindOf=__webpack_require__(40);module.exports=isKind},function(module,exports){function kindOf(val){return null===val?"Null":val===UNDEF?"Undefined":_rKind.exec(_toString.call(val))[1]}var UNDEF,_rKind=/^\[object (.*)\]$/,_toString=Object.prototype.toString;module.exports=kindOf},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function diffIsEmpty(diff){return!(_utils2["default"].isEmpty(diff.added)&&_utils2["default"].isEmpty(diff.removed)&&_utils2["default"].isEmpty(diff.changed))}function check(fnName,resourceName,id,options){var _this=this,definition=_this.definitions[resourceName];if(options=options||{},id=_utils2["default"].resolveId(definition,id),!definition)throw new NER(resourceName);if(!_utils2["default"]._sn(id))throw _utils2["default"]._snErr("id");return id=id===fakeId?void 0:id,options=_utils2["default"]._(definition,options),options.logFn(fnName,id,options),{_this:_this,definition:definition,_resourceName:resourceName,_id:id,_options:options}}Object.defineProperty(exports,"__esModule",{value:!0});var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol?"symbol":typeof obj},_utils=__webpack_require__(2),_utils2=_interopRequireDefault(_utils),_errors=__webpack_require__(3),_errors2=_interopRequireDefault(_errors),NER=_errors2["default"].NER,IA=_errors2["default"].IA,R=_errors2["default"].R,fakeId="DS_"+(new Date).getTime();exports["default"]={changes:function(resourceName,id,options){var _check$call=check.call(this,"changes",resourceName,id,options),_this=_check$call._this,definition=_check$call.definition,_resourceName=_check$call._resourceName,_id=_check$call._id,_options=_check$call._options,item=definition.get(_id);if(item){var _ret=function(){var observer=_this.store[_resourceName].observers[_id];observer&&"function"==typeof observer&&observer.deliver();var ignoredChanges=_options.ignoredChanges||[];_utils2["default"].forEach(definition.relationFields,function(field){_utils2["default"].contains(ignoredChanges,field)||ignoredChanges.push(field)});var diff=_utils2["default"].diffObjectFromOldObject(item,_this.store[_resourceName].previousAttributes[_id],_utils2["default"].equals,ignoredChanges);return _utils2["default"].forOwn(diff,function(changeset,name){var toKeep=[];_utils2["default"].forOwn(changeset,function(value,field){_utils2["default"].isFunction(value)||toKeep.push(field)}),diff[name]=_utils2["default"].pick(diff[name],toKeep)}),_utils2["default"].forEach(definition.relationFields,function(field){delete diff.added[field],delete diff.removed[field],delete diff.changed[field]}),{v:diff}}();if("object"===("undefined"==typeof _ret?"undefined":_typeof(_ret)))return _ret.v}},changeHistory:function(resourceName,id){var _check$call2=check.call(this,"changeHistory",resourceName,id||fakeId),_this=_check$call2._this,definition=_check$call2.definition,_resourceName=_check$call2._resourceName,_id=_check$call2._id,resource=_this.store[_resourceName];if(definition.keepChangeHistory){if(!_resourceName)return resource.changeHistory;var item=definition.get(_id);if(item)return resource.changeHistories[_id]}else definition.errorFn("changeHistory is disabled for this resource!")},commit:function(resourceName,id){var _check$call3=check.call(this,"commit",resourceName,id),_this=_check$call3._this,definition=_check$call3.definition,_resourceName=_check$call3._resourceName,_id=_check$call3._id,resource=_this.store[_resourceName],item=_this.store[_resourceName].index[_id];return item&&(resource.previousAttributes[_id]=_utils2["default"].copy(item,null,null,null,definition.relationFields)),resource.changeHistories[_id].length&&(_utils2["default"].forEach(resource.changeHistories[_id],function(changeRecord){_utils2["default"].remove(resource.changeHistory,changeRecord)}),resource.changeHistories[_id].splice(0,resource.changeHistories[_id].length)),item},compute:function(resourceName,instance){var _this=this,definition=_this.definitions[resourceName];if(instance=_utils2["default"].resolveItem(_this.store[resourceName],instance),!definition)throw new NER(resourceName);if(!instance)throw new R("Item not in the store!");if(!_utils2["default"]._o(instance)&&!_utils2["default"]._sn(instance))throw new IA('"instance" must be an object, string or number!');return definition.logFn("compute",instance),_utils2["default"].forOwn(definition.computed,function(fn,field){_utils2["default"].compute.call(instance,fn,field)}),instance},createInstance:function(resourceName,attrs,options){var definition=this.definitions[resourceName],item=void 0;if(attrs=attrs||{},!definition)throw new NER(resourceName);if(attrs&&!_utils2["default"].isObject(attrs))throw new IA('"attrs" must be an object!');options=_utils2["default"]._(definition,options);var relationList=definition.relationList||[];relationList.length&&_utils2["default"].forEach(relationList,function(def){var relationData=_utils2["default"].get(attrs,def.localField);relationData&&(_utils2["default"].isArray(relationData)?!function(){var array=[],Resource=definition.getResource(def.relation),_options=options.orig();_utils2["default"].forEach(relationData,function(relationDataItem){array.push(Resource.createInstance(relationDataItem,_options))}),_utils2["default"].set(attrs,def.localField,array)}():_utils2["default"].isObject(relationData)&&_utils2["default"].set(attrs,def.localField,definition.getResource(def.relation).createInstance(relationData,options.orig())))}),options.logFn("createInstance",attrs,options),options.beforeCreateInstance(options,attrs);var Constructor=definition[definition["class"]];return item=new Constructor,definition.instanceEvents&&_utils2["default"].Events(item),options.defaultValues&&_utils2["default"].deepMixIn(item,_utils2["default"].copy(options.defaultValues)),_utils2["default"].deepMixIn(item,attrs),definition.computed&&definition.compute(item),options.afterCreateInstance(options,item),item},createCollection:function(resourceName,arr,params,options){var _this=this,definition=_this.definitions[resourceName];if(arr=arr||[],params=params||{},!definition)throw new NER(resourceName);if(arr&&!_utils2["default"].isArray(arr))throw new IA('"arr" must be an array!');return options=_utils2["default"]._(definition,options),options.logFn("createCollection",arr,options),options.beforeCreateCollection(options,arr),Object.defineProperties(arr,{fetch:{value:function(params,options){var __this=this;return __this.params=params||__this.params,definition.findAll(__this.params,options).then(function(data){return data===__this?__this:(data.unshift(__this.length),data.unshift(0),__this.splice.apply(__this,data),data.shift(),data.shift(),data.$$injected&&(_this.store[resourceName].queryData[_utils2["default"].toJson(__this.params)]=__this,__this.$$injected=!0),__this)})}},params:{value:params,writable:!0},resourceName:{value:resourceName}}),options.afterCreateCollection(options,arr),arr},defineResource:__webpack_require__(42),digest:function(){this.observe.Platform.performMicrotaskCheckpoint()},eject:__webpack_require__(43),ejectAll:__webpack_require__(44),filter:__webpack_require__(45),get:function(resourceName,id){var _check$call4=check.call(this,"get",resourceName,id),_this=_check$call4._this,_resourceName=_check$call4._resourceName,_id=_check$call4._id;return _this.store[_resourceName].index[_id]},getAll:function(resourceName,ids){var _this=this,definition=_this.definitions[resourceName],resource=_this.store[resourceName],collection=[];if(!definition)throw new NER(resourceName);if(ids&&!_utils2["default"]._a(ids))throw _utils2["default"]._aErr("ids");if(definition.logFn("getAll",ids),_utils2["default"]._a(ids))for(var length=ids.length,i=0;length>i;i++)resource.index[ids[i]]&&collection.push(resource.index[ids[i]]);else collection=resource.collection.slice();return collection},hasChanges:function(resourceName,id){var _check$call5=check.call(this,"hasChanges",resourceName,id),definition=_check$call5.definition,_id=_check$call5._id;return definition.get(_id)?diffIsEmpty(definition.changes(_id)):!1},inject:__webpack_require__(46),isNew:function(resourceName,id){var _check$call6=check.call(this,"isNew",resourceName,id||fakeId),_this=_check$call6._this,_resourceName=_check$call6._resourceName,_id=_check$call6._id,resource=_this.store[_resourceName];return!!resource.temporaryItems[_id]},lastModified:function(resourceName,id){var _check$call7=check.call(this,"lastModified",resourceName,id||fakeId),_this=_check$call7._this,_resourceName=_check$call7._resourceName,_id=_check$call7._id,resource=_this.store[_resourceName];return _id?(_id in resource.modified||(resource.modified[_id]=0),resource.modified[_id]):resource.collectionModified},lastSaved:function(resourceName,id){var _check$call8=check.call(this,"lastSaved",resourceName,id||fakeId),_this=_check$call8._this,_resourceName=_check$call8._resourceName,_id=_check$call8._id,resource=_this.store[_resourceName];return _id in resource.saved||(resource.saved[_id]=0),resource.saved[_id]},previous:function(resourceName,id){var _check$call9=check.call(this,"previous",resourceName,id),_this=_check$call9._this,_resourceName=_check$call9._resourceName,_id=_check$call9._id,resource=_this.store[_resourceName];return resource.previousAttributes[_id]?_utils2["default"].copy(resource.previousAttributes[_id]):void 0},revert:function(resourceName,id,options){var _check$call10=check.call(this,"revert",resourceName,id,options),_this=_check$call10._this,definition=_check$call10.definition,_resourceName=_check$call10._resourceName,_id=_check$call10._id,_options=_check$call10._options,preserve=_options.preserve||[],injectObj={};if(0===preserve.length)injectObj=_this.previous(_resourceName,_id);else{var _ret3=function(){var instance=definition.get(id),previousInstance=_this.previous(_resourceName,_id);return instance?void _utils2["default"].forOwn(instance,function(value,key){_utils2["default"].contains(preserve,key)?injectObj[key]=instance[key]:injectObj[key]=previousInstance[key]}):{v:void 0}}();if("object"===("undefined"==typeof _ret3?"undefined":_typeof(_ret3)))return _ret3.v}return definition.inject(injectObj,{onConflict:"replace"})}}},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol?"symbol":typeof obj},_utils=__webpack_require__(2),_utils2=_interopRequireDefault(_utils),_errors=__webpack_require__(3),_errors2=_interopRequireDefault(_errors),instanceMethods=["compute","eject","refresh","save","update","destroy","loadRelations","changeHistory","changes","commit","hasChanges","isNew","lastModified","lastSaved","previous","revert"];module.exports=function(definition){function Resource(options){this.defaultValues={},this.methods={},this.computed={},this.scopes={},this.actions={},_utils2["default"].deepMixIn(this,options);var parent=_this.defaults;definition["extends"]&&definitions[definition["extends"]]&&(parent=definitions[definition["extends"]]),_utils2["default"].fillIn(this.defaultValues,parent.defaultValues),_utils2["default"].fillIn(this.methods,parent.methods),_utils2["default"].fillIn(this.computed,parent.computed),_utils2["default"].fillIn(this.scopes,parent.scopes),_utils2["default"].fillIn(this.actions,parent.actions),this.endpoint="endpoint"in options?options.endpoint:this.name}var _this=this,definitions=_this.definitions;if(_utils2["default"]._s(definition)&&(definition={name:definition.replace(/\s/gi,"")}),!_utils2["default"]._o(definition))throw _utils2["default"]._oErr("definition");if(!_utils2["default"]._s(definition.name))throw new _errors2["default"].IA('"name" must be a string!');if(definitions[definition.name])throw new _errors2["default"].R(definition.name+" is already registered!");try{var def,_class,_ret=function(){if(definition["extends"]&&definitions[definition["extends"]]?Resource.prototype=definitions[definition["extends"]]:Resource.prototype=_this.defaults,definitions[definition.name]=new Resource(definition),def=definitions[definition.name],def.getResource=function(resourceName){return _this.definitions[resourceName]},def.logFn("Preparing resource."),!_utils2["default"]._s(def.idAttribute))throw new _errors2["default"].IA('"idAttribute" must be a string!');def.relations&&(def.relationList=[],def.relationFields=[],_utils2["default"].forOwn(def.relations,function(relatedModels,type){_utils2["default"].forOwn(relatedModels,function(defs,relationName){_utils2["default"]._a(defs)||(relatedModels[relationName]=[defs]),_utils2["default"].forEach(relatedModels[relationName],function(d){d.type=type,d.relation=relationName,d.name=def.name,def.relationList.push(d),d.localField&&def.relationFields.push(d.localField)})})}),def.relations.belongsTo&&(def.parents={},_utils2["default"].forOwn(def.relations.belongsTo,function(relatedModel,modelName){_utils2["default"].forEach(relatedModel,function(relation){relation.parent&&(def.parent=modelName,def.parentKey=relation.localKey,def.parentField=relation.localField,def.parents[modelName]={key:def.parentKey,field:def.parentField})})})),"function"==typeof Object.freeze&&(Object.freeze(def.relations),Object.freeze(def.relationList))),_class=def["class"]=_utils2["default"].pascalCase(def.name);try{"function"==typeof def.useClass?(def.csp?def[_class]=function(){def.useClass.call(this)}:def[_class]=new Function("def","return function "+_class+"() { def.useClass.call(this); }")(def),def[_class].prototype=function(proto){function Ctor(){}return Ctor.prototype=proto,new Ctor}(def.useClass.prototype)):def.csp?def[_class]=function(){}:def[_class]=new Function("return function "+_class+"() {}")()}catch(e){def[_class]=function(){}}_utils2["default"].forOwn(def.methods,function(fn,m){def[_class].prototype[m]=fn}),def[_class].prototype.set=function(key,value){var _this2=this;return _utils2["default"].set(this,key,value),def.compute(this),def.instanceEvents&&setTimeout(function(){_this2.emit("DS.change",def,_this2)},0),def.handleChange(this),this},def[_class].prototype.get=function(key){return _utils2["default"].get(this,key)},_utils2["default"].applyRelationGettersToTarget(_this,def,def[_class].prototype);var parentOmit=null;def.hasOwnProperty("omit")?parentOmit=_this.defaults.omit:(parentOmit=def.omit,def.omit=[]),def.omit=def.omit.concat(parentOmit||[]),_utils2["default"].forOwn(def.computed,function(fn,field){if(_utils2["default"].isFunction(fn)&&(def.computed[field]=[fn],fn=def.computed[field]),def.methods&&field in def.methods&&def.errorFn('Computed property "'+field+'" conflicts with previously defined prototype method!'),def.omit.push(field),
_utils2["default"].isArray(fn)){var deps;if(1===fn.length){var match=fn[0].toString().match(/function.*?\(([\s\S]*?)\)/);deps=match[1].split(","),deps=_utils2["default"].filter(deps,function(x){return x}),def.computed[field]=deps.concat(fn),fn=def.computed[field],deps.length&&def.errorFn("Use the computed property array syntax for compatibility with minified code!")}deps=fn.slice(0,fn.length-1),_utils2["default"].forEach(deps,function(val,index){deps[index]=val.trim()}),fn.deps=_utils2["default"].filter(deps,function(dep){return!!dep})}else _utils2["default"].isObject(fn)&&Object.defineProperty(def[_class].prototype,field,fn)}),_utils2["default"].forEach(instanceMethods,function(name){def[_class].prototype["DS"+_utils2["default"].pascalCase(name)]=function(){for(var _len=arguments.length,args=Array(_len),_key=0;_len>_key;_key++)args[_key]=arguments[_key];return args.unshift(this[def.idAttribute]||this),args.unshift(def.name),_this[name].apply(_this,args)}}),def[_class].prototype.DSCreate=function(){for(var _len2=arguments.length,args=Array(_len2),_key2=0;_len2>_key2;_key2++)args[_key2]=arguments[_key2];return args.unshift(this),args.unshift(def.name),_this.create.apply(_this,args)},_this.store[def.name]={collection:[],expiresHeap:new _utils2["default"].BinaryHeap(function(x){return x.expires},function(x,y){return x.item===y}),completedQueries:{},queryData:{},pendingQueries:{},index:{},modified:{},saved:{},previousAttributes:{},observers:{},changeHistories:{},changeHistory:[],collectionModified:0,temporaryItems:{}};var resource=_this.store[def.name];def.reapInterval&&setInterval(function(){return def.reap()},def.reapInterval);var fns=["registerAdapter","getAdapterName","getAdapter","is","!clear"];for(var key in _this)"function"==typeof _this[key]&&fns.push(key);_utils2["default"].forEach(fns,function(key){var k=key;"!"!==k[0]&&(_this[k].shorthand!==!1?(def[k]=function(){for(var _len3=arguments.length,args=Array(_len3),_key3=0;_len3>_key3;_key3++)args[_key3]=arguments[_key3];return args.unshift(def.name),_this[k].apply(_this,args)},def[k].before=function(fn){var orig=def[k];def[k]=function(){for(var _len4=arguments.length,args=Array(_len4),_key4=0;_len4>_key4;_key4++)args[_key4]=arguments[_key4];return orig.apply(def,fn.apply(def,args)||args)}}):def[k]=function(){for(var _len5=arguments.length,args=Array(_len5),_key5=0;_len5>_key5;_key5++)args[_key5]=arguments[_key5];return _this[k].apply(_this,args)})}),def.beforeValidate=_utils2["default"].promisify(def.beforeValidate),def.validate=_utils2["default"].promisify(def.validate),def.afterValidate=_utils2["default"].promisify(def.afterValidate),def.beforeCreate=_utils2["default"].promisify(def.beforeCreate),def.afterCreate=_utils2["default"].promisify(def.afterCreate),def.afterFind=_utils2["default"].promisify(def.afterFind),def.afterFindAll=_utils2["default"].promisify(def.afterFindAll),def.afterLoadRelations=_utils2["default"].promisify(def.afterLoadRelations),def.beforeUpdate=_utils2["default"].promisify(def.beforeUpdate),def.afterUpdate=_utils2["default"].promisify(def.afterUpdate),def.beforeDestroy=_utils2["default"].promisify(def.beforeDestroy),def.afterDestroy=_utils2["default"].promisify(def.afterDestroy);var defaultAdapter=void 0;return def.hasOwnProperty("defaultAdapter")&&(defaultAdapter=def.defaultAdapter),_utils2["default"].forOwn(def.actions,function(action,name){if(def[name]&&!def.actions[name])throw new Error('Cannot override existing method "'+name+'"!');action.request=action.request||function(config){return config},action.response=action.response||function(response){return response},action.responseError=action.responseError||function(err){return _utils2["default"].Promise.reject(err)},def[name]=function(id,options){_utils2["default"]._o(id)&&(options=id),options=options||{};var adapter=def.getAdapter(action.adapter||defaultAdapter||"http"),config=_utils2["default"].deepMixIn({},action);if(!options.hasOwnProperty("endpoint")&&config.endpoint&&(options.endpoint=config.endpoint),"function"==typeof options.getEndpoint)config.url=options.getEndpoint(def,options);else{var _args=[options.basePath||def.basePath||adapter.defaults.basePath,adapter.getEndpoint(def,_utils2["default"]._sn(id)?id:null,options)];_utils2["default"]._sn(id)&&_args.push(id),_args.push(action.pathname||name),config.url=_utils2["default"].makePath.apply(null,_args)}return config.method=config.method||"GET",config.resourceName=def.name,_utils2["default"].deepMixIn(config,options),new _utils2["default"].Promise(function(resolve){return resolve(config)}).then(options.request||action.request).then(function(config){return adapter.HTTP(config)}).then(function(data){return data&&data.config&&(data.config.resourceName=def.name),data}).then(options.response||action.response,options.responseError||action.responseError)}}),_utils2["default"].Events(def),def.handleChange=function(data){resource.collectionModified=_utils2["default"].updateTimestamp(resource.collectionModified),def.notify&&setTimeout(function(){def.emit("DS.change",def,data)},0)},def.logFn("Done preparing resource."),{v:def}}();if("object"===("undefined"==typeof _ret?"undefined":_typeof(_ret)))return _ret.v}catch(err){throw _this.defaults.errorFn(err),delete definitions[definition.name],delete _this.store[definition.name],err}}},function(module,exports){"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol?"symbol":typeof obj};module.exports=function(resourceName,id,options){var _this=this,DSUtils=_this.utils,definition=_this.definitions[resourceName],resource=_this.store[resourceName],item=void 0,found=!1;if(id=DSUtils.resolveId(definition,id),!definition)throw new _this.errors.NER(resourceName);if(!DSUtils._sn(id))throw DSUtils._snErr("id");options=DSUtils._(definition,options),options.logFn("eject",id,options);for(var i=0;i<resource.collection.length;i++)if(resource.collection[i][definition.idAttribute]==id){item=resource.collection[i],resource.expiresHeap.remove(item),found=!0;break}if(found){var _ret=function(){definition.beforeEject(options,item),options.notify&&definition.emit("DS.beforeEject",definition,item);var toRemove=[];return DSUtils.forOwn(resource.queryData,function(items,queryHash){items.$$injected&&DSUtils.remove(items,item),!items.length&&options.clearEmptyQueries&&toRemove.push(queryHash)}),DSUtils.forEach(resource.changeHistories[id],function(changeRecord){DSUtils.remove(resource.changeHistory,changeRecord)}),DSUtils.forEach(toRemove,function(queryHash){delete resource.completedQueries[queryHash],delete resource.queryData[queryHash]}),resource.observers[id]&&"function"==typeof resource.observers[id].close&&resource.observers[id].close(),delete resource.observers[id],delete resource.index[id],delete resource.previousAttributes[id],delete resource.completedQueries[id],delete resource.pendingQueries[id],delete resource.changeHistories[id],delete resource.modified[id],delete resource.saved[id],definition.instanceEvents&&item.off&&item.off(),resource.collection.splice(i,1),definition.handleChange(item),definition.afterEject(options,item),options.notify&&definition.emit("DS.afterEject",definition,item),{v:item}}();if("object"===("undefined"==typeof _ret?"undefined":_typeof(_ret)))return _ret.v}}},function(module,exports){"use strict";module.exports=function(resourceName,params,options){var _this=this,DSUtils=_this.utils,definition=_this.definitions[resourceName];if(params=params||{},!definition)throw new _this.errors.NER(resourceName);if(!DSUtils._o(params))throw DSUtils._oErr("params");options=DSUtils._(definition,options),definition.logFn("ejectAll",params,options),DSUtils.applyScope(definition,params,options);var resource=_this.store[resourceName],queryHash=DSUtils.toJson(params),items=definition.filter(params);return DSUtils.isEmpty(params)?resource.completedQueries={}:delete resource.completedQueries[queryHash],DSUtils.forEach(items,function(item){item&&item[definition.idAttribute]&&definition.eject(item[definition.idAttribute],options)}),definition.handleChange(items),items}},function(module,exports){"use strict";module.exports=function(resourceName,params,options){var _this=this,DSUtils=_this.utils,definition=_this.definitions[resourceName];if(!definition)throw new _this.errors.NER(resourceName);if(params&&!DSUtils._o(params))throw DSUtils._oErr("params");return params=params||{},options=DSUtils._(definition,options),options.logFn("filter",params,options),DSUtils.applyScope(definition,params,options),definition.defaultFilter.call(_this,_this.store[resourceName].collection,resourceName,params,options)}},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function makeObserverHandler(definition,resource){var DS=this,name=definition.name;return function(added,removed,changed,oldValueFn,firstTime){var target=this,item=void 0,innerId=oldValueFn&&oldValueFn(definition.idAttribute)?oldValueFn(definition.idAttribute):target[definition.idAttribute];if(_utils2["default"].forEach(definition.relationFields,function(field){delete added[field],delete removed[field],delete changed[field]}),(!_utils2["default"].isEmpty(added)||!_utils2["default"].isEmpty(removed)||!_utils2["default"].isEmpty(changed)||firstTime)&&(item=DS.get(name,innerId),resource.modified[innerId]=_utils2["default"].updateTimestamp(resource.modified[innerId]),item&&definition.instanceEvents&&setTimeout(function(){item.emit("DS.change",definition,item)},0),definition.handleChange(item),definition.keepChangeHistory)){var changeRecord={resourceName:name,target:item,added:added,removed:removed,changed:changed,timestamp:resource.modified[innerId]};resource.changeHistories[innerId].push(changeRecord),resource.changeHistory.push(changeRecord)}definition.computed&&(item=item||DS.get(name,innerId),_utils2["default"].forOwn(definition.computed,function(fn,field){if(!_utils2["default"]._o(fn)){var compute=!1;_utils2["default"].forEach(fn.deps,function(dep){(dep in added||dep in removed||dep in changed||!(field in item))&&(compute=!0)}),compute=compute||!fn.deps.length,compute&&_utils2["default"].compute.call(item,fn,field)}})),definition.idAttribute in changed&&definition.errorFn('Doh! You just changed the primary key of an object! Your data for the "'+name+'" resource is now in an undefined (probably broken) state.')}}function _inject(definition,resource,attrs,options){var _this=this,injected=void 0;if(_utils2["default"]._a(attrs)){injected=[];for(var i=0;i<attrs.length;i++)injected.push(_inject.call(_this,definition,resource,attrs[i],options))}else{var c=definition.computed,idA=definition.idAttribute;if(c&&c[idA]?!function(){var args=[];_utils2["default"].forEach(c[idA].deps,function(dep){args.push(attrs[dep])}),attrs[idA]=c[idA][c[idA].length-1].apply(attrs,args)}():options.temporary&&(attrs[idA]=_utils2["default"].guid()),!(idA in attrs)){var error=new _errors2["default"].R(definition.name+'.inject: "attrs" must contain the property specified by "idAttribute"!');throw options.errorFn(error),error}try{!function(){_utils2["default"].forEach(definition.relationList,function(def){var relationName=def.relation,relationDef=_this.definitions[relationName],toInject=attrs[def.localField];if("function"==typeof def.inject)def.inject(definition,def,attrs);else if(toInject&&def.inject!==!1){if(!relationDef)throw new _errors2["default"].R(definition.name+" relation is defined but the resource is not!");if(_utils2["default"]._a(toInject))!function(){var items=[];_utils2["default"].forEach(toInject,function(toInjectItem){if(toInjectItem!==_this.store[relationName].index[toInjectItem[relationDef.idAttribute]])try{var injectedItem=relationDef.inject(toInjectItem,options.orig());def.foreignKey&&_utils2["default"].set(injectedItem,def.foreignKey,attrs[definition.idAttribute]),items.push(injectedItem)}catch(err){options.errorFn(err,"Failed to inject "+def.type+' relation: "'+relationName+'"!')}})}();else if(toInject!==_this.store[relationName].index[toInject[relationDef.idAttribute]])try{var _injected=relationDef.inject(attrs[def.localField],options.orig());def.foreignKey&&_utils2["default"].set(_injected,def.foreignKey,attrs[definition.idAttribute]),def.localKey&&_utils2["default"].set(attrs,def.localKey,_utils2["default"].get(_injected,relationDef.idAttribute))}catch(err){options.errorFn(err,"Failed to inject "+def.type+' relation: "'+relationName+'"!')}}});var id=attrs[idA],item=definition.get(id),initialLastModified=item?resource.modified[id]:0;if(item)"merge"===options.onConflict?_utils2["default"].deepMixIn(item,attrs):"replace"===options.onConflict&&(_utils2["default"].forOwn(item,function(v,k){k!==definition.idAttribute&&(attrs.hasOwnProperty(k)||delete item[k])}),_utils2["default"].forOwn(attrs,function(v,k){k!==definition.idAttribute&&(item[k]=v)})),definition.resetHistoryOnInject&&_this.commit(definition.name,id),resource.observers[id]&&"function"==typeof resource.observers[id]&&resource.observers[id].deliver();else{item=attrs instanceof definition[definition["class"]]?attrs:new definition[definition["class"]],definition.instanceEvents&&"function"!=typeof item.emit&&_utils2["default"].Events(item),_utils2["default"].forEach(definition.relationList,function(def){("boolean"==typeof def.link?def.link:!!definition.linkRelations)&&delete attrs[def.localField]}),_utils2["default"].deepMixIn(item,attrs),resource.collection.push(item),resource.changeHistories[id]=[];var _react=makeObserverHandler.call(_this,definition,resource);definition.watchChanges&&(resource.observers[id]=new _this.observe.ObjectObserver(item),resource.observers[id].open(_react,item)),resource.index[id]=item,_react.call(item,{},{},{},null,!0),resource.previousAttributes[id]=_utils2["default"].copy(item,null,null,null,definition.relationFields),options.temporary&&(resource.temporaryItems[id]=!0)}resource.modified[id]=initialLastModified&&resource.modified[id]===initialLastModified?_utils2["default"].updateTimestamp(resource.modified[id]):resource.modified[id],resource.expiresHeap.remove(item);var timestamp=(new Date).getTime();resource.expiresHeap.push({item:item,timestamp:timestamp,expires:definition.maxAge?timestamp+definition.maxAge:Number.MAX_VALUE}),injected=item}()}catch(err){options.errorFn(err,attrs)}}return injected}var _utils=__webpack_require__(2),_utils2=_interopRequireDefault(_utils),_errors=__webpack_require__(3),_errors2=_interopRequireDefault(_errors);module.exports=function(resourceName,attrs,options){var _this=this,definition=_this.definitions[resourceName],resource=_this.store[resourceName],injected=void 0;if(!definition)throw new _errors2["default"].NER(resourceName);if(!_utils2["default"]._o(attrs)&&!_utils2["default"]._a(attrs))throw new _errors2["default"].IA(resourceName+'.inject: "attrs" must be an object or an array!');return options=_utils2["default"]._(definition,options),options.logFn("inject",attrs,options),options.beforeInject(options,attrs),options.notify&&definition.emit("DS.beforeInject",definition,attrs),injected=_inject.call(_this,definition,resource,attrs,options),definition.handleChange(injected),options.afterInject(options,injected),options.notify&&definition.emit("DS.afterInject",definition,injected),injected}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]={create:__webpack_require__(48),destroy:__webpack_require__(49),destroyAll:__webpack_require__(50),find:__webpack_require__(51),findAll:__webpack_require__(52),loadRelations:__webpack_require__(53),reap:__webpack_require__(54),refresh:function(resourceName,id,options){var _this=this,DSUtils=_this.utils;return new DSUtils.Promise(function(resolve,reject){var definition=_this.definitions[resourceName];id=DSUtils.resolveId(_this.definitions[resourceName],id),definition?DSUtils._sn(id)?(options=DSUtils._(definition,options),options.bypassCache=!0,options.logFn("refresh",id,options),resolve(_this.get(resourceName,id))):reject(DSUtils._snErr("id")):reject(new _this.errors.NER(resourceName))}).then(function(item){return item?_this.find(resourceName,id,options):item})["catch"](_this.errorFn("refresh",resourceName,id,options))},refreshAll:function(resourceName,params,options){var _this=this,DSUtils=_this.utils,definition=_this.definitions[resourceName];return params=params||{},new DSUtils.Promise(function(resolve,reject){definition?DSUtils._o(params)?(options=DSUtils._(definition,options),options.bypassCache=!0,options.logFn("refreshAll",params,options),resolve(_this.filter(resourceName,params,options))):reject(DSUtils._oErr("params")):reject(new _this.errors.NER(resourceName))}).then(function(existing){return options.bypassCache=!0,_this.findAll(resourceName,params,options).then(function(found){return DSUtils.forEach(existing,function(item){-1===found.indexOf(item)&&definition.eject(item)}),found})})["catch"](_this.errorFn("refreshAll",resourceName,params,options))},save:__webpack_require__(55),update:__webpack_require__(56),updateAll:__webpack_require__(57)}},function(module,exports){"use strict";module.exports=function(resourceName,attrs,options){var _this=this,DSUtils=_this.utils,definition=_this.definitions[resourceName],resource=_this.store[resourceName],adapter=void 0;options=options||{},attrs=attrs||{};var rejectionError=void 0;if(definition)if(DSUtils._o(attrs)){if(options=DSUtils._(definition,options),options.upsert&&DSUtils._sn(attrs[definition.idAttribute])&&!resource.temporaryItems[attrs[definition.idAttribute]])return _this.update(resourceName,attrs[definition.idAttribute],attrs,options);options.logFn("create",attrs,options)}else rejectionError=DSUtils._oErr("attrs");else rejectionError=new _this.errors.NER(resourceName);return new DSUtils.Promise(function(resolve,reject){rejectionError?reject(rejectionError):resolve(attrs)}).then(function(attrs){return options.beforeValidate.call(attrs,options,attrs)}).then(function(attrs){return options.validate.call(attrs,options,attrs)}).then(function(attrs){return options.afterValidate.call(attrs,options,attrs)}).then(function(attrs){return options.beforeCreate.call(attrs,options,attrs)}).then(function(attrs){return options.notify&&definition.emit("DS.beforeCreate",definition,attrs),adapter=_this.getAdapterName(options),_this.adapters[adapter].create(definition,DSUtils.omit(attrs,options.omit),options)}).then(function(attrs){return options.afterCreate.call(attrs,options,attrs)}).then(function(attrs){if(options.notify&&definition.emit("DS.afterCreate",definition,attrs),options.cacheResponse){var created=_this.inject(definition.name,attrs,options.orig()),id=created[definition.idAttribute],_resource=_this.store[resourceName];return _resource.completedQueries[id]=(new Date).getTime(),_resource.saved[id]=DSUtils.updateTimestamp(_resource.saved[id]),created}return _this.createInstance(resourceName,attrs,options)}).then(function(item){return DSUtils.respond(item,{adapter:adapter},options)})["catch"](_this.errorFn("create",resourceName,attrs,options))}},function(module,exports){"use strict";module.exports=function(resourceName,id,options){var _this=this,DSUtils=_this.utils,definition=_this.definitions[resourceName],item=void 0,adapter=void 0;return new DSUtils.Promise(function(resolve,reject){id=DSUtils.resolveId(definition,id),definition?DSUtils._sn(id)?(item=definition.get(id)||{id:id},options=DSUtils._(definition,options),options.logFn("destroy",id,options),resolve(item)):reject(DSUtils._snErr("id")):reject(new _this.errors.NER(resourceName))}).then(function(attrs){return options.beforeDestroy.call(attrs,options,attrs)}).then(function(attrs){return options.notify&&definition.emit("DS.beforeDestroy",definition,attrs),options.eagerEject&&definition.eject(id),adapter=definition.getAdapter(options),adapter.destroy(definition,id,options)}).then(function(){return options.afterDestroy.call(item,options,item)}).then(function(item){return options.notify&&definition.emit("DS.afterDestroy",definition,item),definition.eject(id),DSUtils.respond(id,{adapter:adapter},options)})["catch"](function(err){return options&&options.eagerEject&&item&&definition.inject(item,{notify:!1}),_this.errorFn("destroy",resourceName,id,options)(err)})}},function(module,exports){"use strict";module.exports=function(resourceName,params,options){var _this=this,DSUtils=_this.utils,definition=_this.definitions[resourceName],ejected=void 0,toEject=void 0,adapter=void 0;return params=params||{},new DSUtils.Promise(function(resolve,reject){definition?DSUtils._o(params)?(options=DSUtils._(definition,options),options.logFn("destroyAll",params,options),DSUtils.applyScope(definition,params,options),resolve()):reject(DSUtils._oErr("attrs")):reject(new _this.errors.NER(resourceName))}).then(function(){return toEject=definition.defaultFilter.call(_this,resourceName,params),options.beforeDestroy(options,toEject)}).then(function(){return options.notify&&definition.emit("DS.beforeDestroy",definition,toEject),options.eagerEject&&(ejected=definition.ejectAll(params)),adapter=definition.getAdapterName(options),_this.adapters[adapter].destroyAll(definition,params,options)}).then(function(){return options.afterDestroy(options,toEject)}).then(function(){return options.notify&&definition.emit("DS.afterDestroy",definition,toEject),ejected||definition.ejectAll(params)}).then(function(items){return DSUtils.respond(items,{adapter:adapter},options)})["catch"](function(err){return options&&options.eagerEject&&ejected&&definition.inject(ejected,{notify:!1}),_this.errorFn("destroyAll",resourceName,params,options)(err)})}},function(module,exports){"use strict";module.exports=function(resourceName,id,options){var _this=this,DSUtils=_this.utils,definition=_this.definitions[resourceName],resource=_this.store[resourceName],adapter=void 0;return new DSUtils.Promise(function(resolve,reject){if(definition)if(DSUtils._sn(id)){options=DSUtils._(definition,options),options.logFn("find",id,options),options.params&&(options.params=DSUtils.copy(options.params)),(options.bypassCache||!options.cacheResponse)&&delete resource.completedQueries[id];var expired=options.maxAge&&id in resource.completedQueries&&resource.completedQueries[id]+options.maxAge<(new Date).getTime();options.findStrictCache&&!(id in resource.completedQueries)||!definition.get(id)||options.bypassCache||expired?(delete resource.completedQueries[id],resolve()):resolve(definition.get(id))}else reject(DSUtils._snErr("id"));else reject(new _this.errors.NER(resourceName))}).then(function(item){if(item)return item;if(!(id in resource.pendingQueries)){var promise=void 0,strategy=options.findStrategy||options.strategy;if("fallback"===strategy){var makeFallbackCall=function makeFallbackCall(index){return adapter=definition.getAdapterName((options.findFallbackAdapters||options.fallbackAdapters)[index]),_this.adapters[adapter].find(definition,id,options)["catch"](function(err){return index++,index<options.fallbackAdapters.length?makeFallbackCall(index):DSUtils.Promise.reject(err)})};promise=makeFallbackCall(0)}else adapter=definition.getAdapterName(options),promise=_this.adapters[adapter].find(definition,id,options);resource.pendingQueries[id]=promise.then(function(data){return options.afterFind.call(data,options,data)}).then(function(data){if(delete resource.pendingQueries[id],options.cacheResponse){var injected=definition.inject(data,options.orig());return resource.completedQueries[id]=(new Date).getTime(),resource.saved[id]=DSUtils.updateTimestamp(resource.saved[id]),injected}return definition.createInstance(data,options.orig())})}return resource.pendingQueries[id]}).then(function(item){return DSUtils.respond(item,{adapter:adapter},options)})["catch"](function(err){return resource&&delete resource.pendingQueries[id],_this.errorFn("find",resourceName,id,options)(err)})}},function(module,exports){"use strict";function processResults(data,resourceName,queryHash,options){var _this=this,DSUtils=_this.utils,definition=_this.definitions[resourceName],resource=_this.store[resourceName],idAttribute=definition.idAttribute,date=(new Date).getTime();data=data||[],delete resource.pendingQueries[queryHash],resource.completedQueries[queryHash]=date;var injected=definition.inject(data,options.orig());return DSUtils._a(injected)?DSUtils.forEach(injected,function(item){if(item){var id=item[idAttribute];id&&(resource.completedQueries[id]=date,resource.saved[id]=DSUtils.updateTimestamp(resource.saved[id]))}}):(options.errorFn("response is expected to be an array!"),resource.completedQueries[injected[idAttribute]]=date),injected}module.exports=function(resourceName,params,options){var _this=this,DSUtils=_this.utils,definition=_this.definitions[resourceName],resource=_this.store[resourceName],queryHash=void 0,adapter=void 0;return new DSUtils.Promise(function(resolve,reject){if(params=params||{},_this.definitions[resourceName])if(DSUtils._o(params)){options=DSUtils._(definition,options),queryHash=DSUtils.toJson(params),options.logFn("findAll",params,options),options.params&&(options.params=DSUtils.copy(options.params)),DSUtils.applyScope(definition,params,options),(options.bypassCache||!options.cacheResponse)&&(delete resource.completedQueries[queryHash],delete resource.queryData[queryHash]);var expired=options.maxAge&&queryHash in resource.completedQueries&&resource.completedQueries[queryHash]+options.maxAge<(new Date).getTime();queryHash in resource.completedQueries&&!expired?resolve(options.useFilter?options.localKeys?definition.getAll(options.localKeys,options.orig()):definition.filter(params,options.orig()):resource.queryData[queryHash]):resolve()}else reject(DSUtils._oErr("params"));else reject(new _this.errors.NER(resourceName))}).then(function(items){if(items)return items;if(!(queryHash in resource.pendingQueries)){var promise=void 0,strategy=options.findAllStrategy||options.strategy;if("fallback"===strategy){var makeFallbackCall=function makeFallbackCall(index){return adapter=definition.getAdapterName((options.findAllFallbackAdapters||options.fallbackAdapters)[index]),_this.adapters[adapter].findAll(definition,params,options)["catch"](function(err){return index++,index<options.fallbackAdapters.length?makeFallbackCall(index):DSUtils.Promise.reject(err)})};promise=makeFallbackCall(0)}else adapter=definition.getAdapterName(options),promise=_this.adapters[adapter].findAll(definition,params,options);resource.pendingQueries[queryHash]=promise.then(function(data){return options.afterFindAll.call(data,options,data)}).then(function(data){return delete resource.pendingQueries[queryHash],options.cacheResponse?(resource.queryData[queryHash]=processResults.call(_this,data,resourceName,queryHash,options),resource.queryData[queryHash].$$injected=!0,resource.queryData[queryHash]):(DSUtils.forEach(data,function(item,i){data[i]=definition.createInstance(item,options.orig())}),data)})}return resource.pendingQueries[queryHash]}).then(function(items){return DSUtils.respond(items,{adapter:adapter},options)})["catch"](function(err){return resource&&delete resource.pendingQueries[queryHash],_this.errorFn("findAll",resourceName,params,options)(err)})}},function(module,exports){"use strict";function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}module.exports=function(resourceName,instance,relations,options){var _this=this,DSUtils=_this.utils,DSErrors=_this.errors,definition=_this.definitions[resourceName],_options=void 0;return new DSUtils.Promise(function(resolve,reject){DSUtils._sn(instance)&&(instance=definition.get(instance)),DSUtils._s(relations)&&(relations=[relations]),relations=relations||[],definition?DSUtils._o(instance)?DSUtils._a(relations)?!function(){_options=DSUtils._(definition,options),_options.logFn("loadRelations",instance,relations,_options);var tasks=[];DSUtils.forEach(definition.relationList,function(def){var relationName=def.relation,relationDef=definition.getResource(relationName),__options=DSUtils._(relationDef,options);if(!relations.length||DSUtils.contains(relations,relationName)||DSUtils.contains(relations,def.localField)){var task=void 0,params={};__options.allowSimpleWhere?params[def.foreignKey]=instance[definition.idAttribute]:(params.where={},params.where[def.foreignKey]={"==":instance[definition.idAttribute]});var orig=__options.orig(),defKey=def.localKey?DSUtils.get(instance,def.localKey):null,hasDefKey=!(!defKey&&0!==defKey);if("function"==typeof def.load)task=def.load(definition,def,instance,orig);else if("hasMany"===def.type){if(def.localKeys){delete params[def.foreignKey];var keys=DSUtils.get(instance,def.localKeys)||[];keys=DSUtils._a(keys)?keys:DSUtils.keys(keys),params.where=_defineProperty({},relationDef.idAttribute,{"in":keys}),orig.localKeys=keys}else def.foreignKeys&&(delete params[def.foreignKey],params.where=_defineProperty({},def.foreignKeys,{contains:instance[definition.idAttribute]}));task=relationDef.findAll(params,orig)}else"hasOne"===def.type?def.localKey&&hasDefKey?task=relationDef.find(defKey,orig):def.foreignKey&&(task=relationDef.findAll(params,orig).then(function(hasOnes){return hasOnes.length?hasOnes[0]:null})):hasDefKey&&(task=relationDef.find(defKey,orig));task&&(_options.linkRelations||(task=task.then(function(data){instance[def.localField]=data})),tasks.push(task))}}),resolve(tasks)}():reject(new DSErrors.IA('"relations" must be a string or an array!')):reject(new DSErrors.IA('"instance(id)" must be a string, number or object!')):reject(new DSErrors.NER(resourceName))}).then(function(tasks){return DSUtils.Promise.all(tasks)}).then(function(){return _options.afterLoadRelations.call(instance,_options,instance)})["catch"](_this.errorFn("loadRelations",resourceName,instance,relations,options))}},function(module,exports){"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol?"symbol":typeof obj};module.exports=function(resourceName,options){var _this=this,DSUtils=_this.utils,definition=_this.definitions[resourceName],resource=_this.store[resourceName];return new DSUtils.Promise(function(resolve,reject){if(definition){options=DSUtils._(definition,options),options.hasOwnProperty("notify")||(options.notify=!1),options.logFn("reap",options);for(var items=[],now=(new Date).getTime(),expiredItem=void 0;(expiredItem=resource.expiresHeap.peek())&&expiredItem.expires<now;)items.push(expiredItem.item),delete expiredItem.item,resource.expiresHeap.pop();resolve(items)}else reject(new _this.errors.NER(resourceName))}).then(function(items){if(items.length&&(definition.beforeReap(options,items),options.notify&&definition.emit("DS.beforeReap",definition,items)),"inject"===options.reapAction)!function(){var timestamp=(new Date).getTime();DSUtils.forEach(items,function(item){resource.expiresHeap.push({item:item,timestamp:timestamp,expires:definition.maxAge?timestamp+definition.maxAge:Number.MAX_VALUE})})}();else if("eject"===options.reapAction)DSUtils.forEach(items,function(item){definition.eject(item[definition.idAttribute])});else if("refresh"===options.reapAction){var _ret2=function(){var tasks=[];return DSUtils.forEach(items,function(item){tasks.push(definition.refresh(item[definition.idAttribute]))}),{v:DSUtils.Promise.all(tasks)}}();if("object"===("undefined"==typeof _ret2?"undefined":_typeof(_ret2)))return _ret2.v}return items}).then(function(items){return items.length&&(definition.afterReap(options,items),options.notify&&definition.emit("DS.afterReap",definition,items)),items})["catch"](_this.errorFn("reap",resourceName,options))}},function(module,exports){"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol?"symbol":typeof obj;
};module.exports=function(resourceName,id,options){var _this=this,DSUtils=_this.utils,DSErrors=_this.errors,definition=_this.definitions[resourceName],resource=_this.store[resourceName],item=void 0,noChanges=void 0,adapter=void 0;return new DSUtils.Promise(function(resolve,reject){id=DSUtils.resolveId(definition,id),definition?DSUtils._sn(id)?definition.get(id)?(item=definition.get(id),options=DSUtils._(definition,options),options.logFn("save",id,options),resolve(item)):reject(new DSErrors.R('id "'+id+'" not found in cache!')):reject(DSUtils._snErr("id")):reject(new DSErrors.NER(resourceName))}).then(function(attrs){return options.beforeValidate.call(attrs,options,attrs)}).then(function(attrs){return options.validate.call(attrs,options,attrs)}).then(function(attrs){return options.afterValidate.call(attrs,options,attrs)}).then(function(attrs){return options.beforeUpdate.call(attrs,options,attrs)}).then(function(attrs){if(options.notify&&definition.emit("DS.beforeUpdate",definition,attrs),options.changesOnly){var key,_ret=function(){resource.observers[id]&&"function"==typeof resource.observers[id]&&resource.observers[id].deliver();var toKeep=[],changes=definition.changes(id);for(key in changes.added)toKeep.push(key);for(key in changes.changed)toKeep.push(key);return DSUtils.forEach(options.always,function(property){toKeep.push(property)}),changes=DSUtils.pick(attrs,toKeep),DSUtils.isEmpty(changes)?(options.logFn("save - no changes",id,options),noChanges=!0,{v:attrs}):void(attrs=changes)}();if("object"===("undefined"==typeof _ret?"undefined":_typeof(_ret)))return _ret.v}return adapter=definition.getAdapterName(options),_this.adapters[adapter].update(definition,id,DSUtils.omit(attrs,options.omit),options)}).then(function(data){return options.afterUpdate.call(data,options,data)}).then(function(attrs){if(options.notify&&definition.emit("DS.afterUpdate",definition,attrs),noChanges)return attrs;if(options.cacheResponse){var injected=definition.inject(attrs,options.orig());return resource.saved[id]=DSUtils.updateTimestamp(resource.saved[id]),definition.resetHistoryOnInject||(resource.previousAttributes[id]=DSUtils.copy(injected,null,null,null,definition.relationFields)),injected}return definition.createInstance(attrs,options.orig())}).then(function(item){return DSUtils.respond(item,{adapter:adapter},options)})["catch"](_this.errorFn("save",resourceName,id,options))}},function(module,exports){"use strict";module.exports=function(resourceName,id,attrs,options){var _this=this,DSUtils=_this.utils,DSErrors=_this.errors,definition=_this.definitions[resourceName],adapter=void 0;return new DSUtils.Promise(function(resolve,reject){id=DSUtils.resolveId(definition,id),definition?DSUtils._sn(id)?(options=DSUtils._(definition,options),options.logFn("update",id,attrs,options),resolve(attrs)):reject(DSUtils._snErr("id")):reject(new DSErrors.NER(resourceName))}).then(function(attrs){return options.beforeValidate.call(attrs,options,attrs)}).then(function(attrs){return options.validate.call(attrs,options,attrs)}).then(function(attrs){return options.afterValidate.call(attrs,options,attrs)}).then(function(attrs){return options.beforeUpdate.call(attrs,options,attrs)}).then(function(attrs){return options.notify&&definition.emit("DS.beforeUpdate",definition,attrs),adapter=definition.getAdapterName(options),_this.adapters[adapter].update(definition,id,DSUtils.omit(attrs,options.omit),options)}).then(function(data){return options.afterUpdate.call(data,options,data)}).then(function(attrs){if(options.notify&&definition.emit("DS.afterUpdate",definition,attrs),options.cacheResponse){var injected=definition.inject(attrs,options.orig()),resource=_this.store[resourceName],_id=injected[definition.idAttribute];return resource.saved[_id]=DSUtils.updateTimestamp(resource.saved[_id]),definition.resetHistoryOnInject||(resource.previousAttributes[_id]=DSUtils.copy(injected,null,null,null,definition.relationFields)),injected}return definition.createInstance(attrs,options.orig())}).then(function(item){return DSUtils.respond(item,{adapter:adapter},options)})["catch"](_this.errorFn("update",resourceName,id,attrs,options))}},function(module,exports){"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol?"symbol":typeof obj};module.exports=function(resourceName,attrs,params,options){var _this=this,DSUtils=_this.utils,DSErrors=_this.errors,definition=_this.definitions[resourceName],adapter=void 0;return new DSUtils.Promise(function(resolve,reject){definition?(options=DSUtils._(definition,options),options.logFn("updateAll",attrs,params,options),DSUtils.applyScope(definition,params,options),resolve(attrs)):reject(new DSErrors.NER(resourceName))}).then(function(attrs){return options.beforeValidate.call(attrs,options,attrs)}).then(function(attrs){return options.validate.call(attrs,options,attrs)}).then(function(attrs){return options.afterValidate.call(attrs,options,attrs)}).then(function(attrs){return options.beforeUpdate.call(attrs,options,attrs)}).then(function(attrs){return options.notify&&definition.emit("DS.beforeUpdate",definition,attrs),adapter=definition.getAdapterName(options),_this.adapters[adapter].updateAll(definition,DSUtils.omit(attrs,options.omit),params,options)}).then(function(data){return options.afterUpdate.call(data,options,data)}).then(function(data){options.notify&&definition.emit("DS.afterUpdate",definition,attrs);var origOptions=options.orig();if(options.cacheResponse){var _ret=function(){var injected=definition.inject(data,origOptions),resource=_this.store[resourceName];return DSUtils.forEach(injected,function(i){var id=i[definition.idAttribute];resource.saved[id]=DSUtils.updateTimestamp(resource.saved[id]),definition.resetHistoryOnInject||(resource.previousAttributes[id]=DSUtils.copy(i,null,null,null,definition.relationFields))}),{v:injected}}();if("object"===("undefined"==typeof _ret?"undefined":_typeof(_ret)))return _ret.v}else{var _ret2=function(){var instances=[];return DSUtils.forEach(data,function(item){instances.push(definition.createInstance(item,origOptions))}),{v:instances}}();if("object"===("undefined"==typeof _ret2?"undefined":_typeof(_ret2)))return _ret2.v}}).then(function(items){return DSUtils.respond(items,{adapter:adapter},options)})["catch"](_this.errorFn("updateAll",resourceName,attrs,params,options))}}])});
/*js-data-angular@3.2.1#dist/js-data-angular*/
!function(root,factory){"object"==typeof exports&&"object"==typeof module?module.exports=factory(require("js-data"),require("angular"),function(){try{return require("axios")}catch(e){}}()):"function"==typeof define&&define.amd?define("js-data-angular@3.2.1#dist/js-data-angular",["js-data","angular"],function(__WEBPACK_EXTERNAL_MODULE_1__,__WEBPACK_EXTERNAL_MODULE_4__){return factory(__WEBPACK_EXTERNAL_MODULE_1__,__WEBPACK_EXTERNAL_MODULE_4__,root.axios)}):"object"==typeof exports?exports.jsDataAngularModuleName=factory(require("js-data"),require("angular"),function(){try{return require("axios")}catch(e){}}()):root.jsDataAngularModuleName=factory(root.JSData,root.angular,root.axios)}(this,function(__WEBPACK_EXTERNAL_MODULE_1__,__WEBPACK_EXTERNAL_MODULE_4__,__WEBPACK_EXTERNAL_MODULE_3__){return function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:!1};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.loaded=!0,module.exports}var installedModules={};return __webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.p="",__webpack_require__(0)}([function(module,exports,__webpack_require__){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function registerAdapter(adapter){var Adapter=void 0;try{Adapter=__webpack_require__(5)(adapter.project)}catch(e){}Adapter||(Adapter=window[adapter["class"]]),Adapter&&(adapter.loaded=!0,angular.module("js-data").provider(adapter["class"],function(){var _this=this;_this.defaults={},_this.$get=[function(){return new Adapter(_this.defaults)}]}))}var JSData=__webpack_require__(1),DSHttpAdapter=__webpack_require__(2),angular=__webpack_require__(4),DSUtils=JSData.DSUtils,DSErrors=JSData.DSErrors,get=DSUtils.get,isString=DSUtils.isString,isNumber=DSUtils.isNumber,isObject=DSUtils.isObject,set=DSUtils.set,resolveId=DSUtils.resolveId,adapters=[{project:"js-data-localstorage",name:"localstorage","class":"DSLocalStorageAdapter"},{project:"js-data-localforage",name:"localforage","class":"DSLocalForageAdapter"},{project:"js-data-firebase",name:"firebase","class":"DSFirebaseAdapter"},{project:"js-data-sql",name:"sql","class":"DSSqlAdapter"}],functionsToWrap=["compute","digest","eject","inject"],DSHttpAdapterProvider=function DSHttpAdapterProvider(){_classCallCheck(this,DSHttpAdapterProvider);var defaults={};this.defaults=defaults,this.$get=["$http","DS",function($http,DS){defaults.http=defaults.http||$http;var adapter=new DSHttpAdapter(defaults);return DS.registerAdapter("http",adapter,{"default":!0}),adapter}]},DSProvider=function DSProvider(){function load(){function QPromise(executor){var deferred=$q.defer();try{executor(angular.bind(deferred,deferred.resolve),angular.bind(deferred,deferred.reject))}catch(err){deferred.reject(err)}return deferred.promise}for(var _len=arguments.length,args=Array(_len),_key=0;_len>_key;_key++)args[_key]=arguments[_key];var $rootScope=args[args.length-2],$q=args[args.length-1],store=new JSData.DS(_this.defaults),originals={};if(QPromise.all=$q.all,QPromise.when=$q.when,QPromise.reject=$q.reject,DSUtils.Promise=QPromise,args.length)for(var i=0;i<args.length;i++)for(var j=0;j<adapters.length;j++)if(adapters[j].loaded&&!adapters[j].registered){adapters[j].registered=!0,store.registerAdapter(adapters[j].name,args[i]);break}for(var _loop=function(){var name=functionsToWrap[k];originals[name]=store[name],store[name]=function(){for(var _len2=arguments.length,args=Array(_len2),_key2=0;_len2>_key2;_key2++)args[_key2]=arguments[_key2];return $rootScope.$$phase?originals[name].apply(store,args):$rootScope.$apply(function(){return originals[name].apply(store,args)})}},k=0;k<functionsToWrap.length;k++)_loop();return("function"!=typeof Object.observe||"function"!=typeof Array.observe)&&$rootScope.$watch(function(){return store.observe.Platform.performMicrotaskCheckpoint()}),store}_classCallCheck(this,DSProvider);for(var _this=this,deps=[],i=0;i<adapters.length;i++)adapters[i].loaded&&deps.push(adapters[i]["class"]);_this.defaults={},JSData.DS.prototype.bindAll=function(resourceName,params,scope,expr,cb){var _this=this;if(params=params||{},!_this.definitions[resourceName])throw new DSErrors.NER(resourceName);if(!isObject(params))throw new DSErrors.IA('"params" must be an object!');if(!isObject(scope))throw new DSErrors.IA('"scope" must be an object!');if(!isString(expr))throw new DSErrors.IA('"expr" must be a string!');var idAttribute=_this.definitions[resourceName].idAttribute;try{return scope.$watch(function(){return _this.lastModified(resourceName)},function(){var items=_this.filter(resourceName,params);items&&items.length&&angular.forEach(items,function(item){_this.compute(resourceName,get(item,idAttribute))}),set(scope,expr,items),cb&&cb(null,items)})}catch(err){if(!cb)throw err;cb(err)}},JSData.DS.prototype.bindOne=function(resourceName,id,scope,expr,cb){var _this=this;if(id=resolveId(_this.definitions[resourceName],id),!_this.definitions[resourceName])throw new DSErrors.NER(resourceName);if(!isString(id)&&!isNumber(id))throw new DSErrors.IA('"id" must be a string or a number!');if(!isObject(scope))throw new DSErrors.IA('"scope" must be an object!');if(!isString(expr))throw new DSErrors.IA('"expr" must be a string!');try{return scope.$watch(function(){return _this.lastModified(resourceName,id)},function(){var item=_this.get(resourceName,id);item&&_this.compute(resourceName,id),set(scope,expr,item),cb&&cb(null,item)})}catch(err){if(!cb)throw err;cb(err)}},deps.push("$rootScope"),deps.push("$q"),deps.push(load),_this.$get=deps};angular.module("js-data",["ng"]).value("DSUtils",DSUtils).value("DSErrors",DSErrors).value("DSVersion",JSData.version).provider("DS",DSProvider).provider("DSHttpAdapter",DSHttpAdapterProvider).run(["DS","DSHttpAdapter",function(DS,DSHttpAdapter){DS.registerAdapter("http",DSHttpAdapter,{"default":!0})}]);for(var i=0;i<adapters.length;i++)registerAdapter(adapters[i]);module.exports="js-data";try{module.exports.name="js-data"}catch(e){}},function(module,exports){module.exports=__WEBPACK_EXTERNAL_MODULE_1__},function(module,exports,__webpack_require__){"use strict";function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function isUndefined(value){return void 0===value}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol?"symbol":typeof obj},_createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),JSData=__webpack_require__(1),axios=null;try{axios=__webpack_require__(3)}catch(e){}var DSUtils=JSData.DSUtils,deepMixIn=DSUtils.deepMixIn,removeCircular=DSUtils.removeCircular,copy=DSUtils.copy,makePath=DSUtils.makePath,isString=DSUtils.isString,isNumber=DSUtils.isNumber,Defaults=function(){function Defaults(){_classCallCheck(this,Defaults)}return _createClass(Defaults,[{key:"queryTransform",value:function(resourceConfig,params){return params}},{key:"deserialize",value:function(resourceConfig,data){return data&&"data"in data?data.data:data}},{key:"serialize",value:function(resourceConfig,data){return data}},{key:"log",value:function(){}},{key:"error",value:function(){}}]),Defaults}(),defaultsPrototype=Defaults.prototype;defaultsPrototype.basePath="",defaultsPrototype.forceTrailingSlash="",defaultsPrototype.httpConfig={},defaultsPrototype.verbsUseBasePath=!1;var DSHttpAdapter=function(){function DSHttpAdapter(options){_classCallCheck(this,DSHttpAdapter),options||(options={}),this.defaults=new Defaults,console&&(this.defaults.log=function(a,b){return console["function"==typeof console.info?"info":"log"](a,b)}),console&&(this.defaults.error=function(a,b){return console["function"==typeof console.error?"error":"log"](a,b)}),deepMixIn(this.defaults,options),this.http=options.http||axios}return _createClass(DSHttpAdapter,[{key:"getEndpoint",value:function(resourceConfig,id,options){options||(options={}),options.params=isUndefined(options.params)?{}:options.params;var endpoint=options.hasOwnProperty("endpoint")?options.endpoint:resourceConfig.endpoint,parents=resourceConfig.parents||(resourceConfig.parent?_defineProperty({},resourceConfig.parent,{key:resourceConfig.parentKey,field:resourceConfig.parentField}):{});return DSUtils.forOwn(parents,function(parent,parentName){var _this2=this,item=void 0,parentKey=parent.key,parentField=parent.field,parentDef=resourceConfig.getResource(parentName),parentId=options.params[parentKey];parentId!==!1&&parentKey&&parentDef?(delete options.params[parentKey],DSUtils._sn(id)?item=resourceConfig.get(id):DSUtils._o(id)&&(item=id),item&&(parentId=parentId||item[parentKey]||(item[parentField]?item[parentField][parentDef.idAttribute]:null)),parentId&&!function(){delete options.endpoint;var _options={};DSUtils.forOwn(options,function(value,key){_options[key]=value}),endpoint=DSUtils.makePath(_this2.getEndpoint(parentDef,parentId,DSUtils._(parentDef,_options)),parentId,endpoint)}()):parentId===!1&&delete options.params[parentKey]},this),endpoint}},{key:"getPath",value:function(method,resourceConfig,id,options){var _this=this;if(options||(options={}),isString(options.urlPath))return makePath.apply(DSUtils,[options.basePath||_this.defaults.basePath||resourceConfig.basePath,options.urlPath]);var args=[options.basePath||_this.defaults.basePath||resourceConfig.basePath,this.getEndpoint(resourceConfig,isString(id)||isNumber(id)||"create"===method?id:null,options)];return("find"===method||"update"===method||"destroy"===method)&&args.push(id),makePath.apply(DSUtils,args)}},{key:"HTTP",value:function(config){function logResponse(data,isRejection){if(data=data||{},data instanceof Error)return _this.defaults.error("FAILED: "+(data.message||"Unknown Error"),data),DSUtils.Promise.reject(data);if("object"===("undefined"==typeof data?"undefined":_typeof(data))){var str=start.toUTCString()+" - "+config.method+" "+config.url+" - "+data.status+" "+((new Date).getTime()-start.getTime())+"ms";return data.status>=200&&data.status<300&&!isRejection?(_this.defaults.log&&_this.defaults.log(str,data),data):(_this.defaults.error&&_this.defaults.error("FAILED: "+str,data),DSUtils.Promise.reject(data))}return _this.defaults.error("FAILED",data),DSUtils.Promise.reject(data)}var _this=this,start=new Date,payload=config.data,cache=config.cache,timeout=config.timeout;config=copy(config,null,null,null,["data","cache","timeout"]),config=deepMixIn(config,_this.defaults.httpConfig),config.data=payload,config.cache=cache,config.timeout=timeout,"verbsUseBasePath"in config||(config.verbsUseBasePath=_this.defaults.verbsUseBasePath),!config.urlOverride&&config.verbsUseBasePath&&(config.url=makePath(config.basePath||_this.defaults.basePath,config.url)),_this.defaults.forceTrailingSlash&&"/"!==config.url[config.url.length-1]&&!config.urlOverride&&(config.url+="/"),"object"===_typeof(config.data)&&(config.data=removeCircular(config.data)),config.method=config.method.toUpperCase();var suffix=isUndefined(config.suffix)?_this.defaults.suffix:config.suffix;if(suffix&&config.url.substr(config.url.length-suffix.length)!==suffix&&!config.urlOverride&&(config.url+=suffix),!this.http)throw new Error("You have not configured this adapter with an http library!");return this.http(config).then(logResponse,function(data){return logResponse(data,!0)})}},{key:"GET",value:function(url,config){return config=config||{},config.method=config.method||"get",config.urlOverride=!!config.url,config.url=config.url||url,this.HTTP(config)}},{key:"POST",value:function(url,attrs,config){return config=config||{},config.method=config.method||"post",config.urlOverride=!!config.url,config.url=config.url||url,config.data=config.data||attrs,this.HTTP(config)}},{key:"PUT",value:function(url,attrs,config){return config=config||{},config.method=config.method||"put",config.urlOverride=!!config.url,config.url=config.url||url,config.data=config.data||attrs,this.HTTP(config)}},{key:"DEL",value:function(url,config){return config=config||{},config.method=config.method||"delete",config.urlOverride=!!config.url,config.url=config.url||url,this.HTTP(config)}},{key:"find",value:function(resourceConfig,id,options){var _this=this;return options||(options={}),options.suffix=isUndefined(options.suffix)?resourceConfig.suffix:options.suffix,options.params=isUndefined(options.params)?{}:copy(options.params),options.params=_this.defaults.queryTransform(resourceConfig,options.params),_this.GET(_this.getPath("find",resourceConfig,id,options),options).then(function(data){var item=(options.deserialize?options.deserialize:_this.defaults.deserialize)(resourceConfig,data);return item?item:DSUtils.Promise.reject(new Error("Not Found!"))})}},{key:"findAll",value:function(resourceConfig,params,options){var _this=this;return options||(options={}),options.suffix=isUndefined(options.suffix)?resourceConfig.suffix:options.suffix,options.params=isUndefined(options.params)?{}:copy(options.params),params&&(params=_this.defaults.queryTransform(resourceConfig,params),deepMixIn(options.params,params)),_this.GET(_this.getPath("findAll",resourceConfig,params,options),options).then(function(data){return(options.deserialize?options.deserialize:_this.defaults.deserialize)(resourceConfig,data)})}},{key:"create",value:function(resourceConfig,attrs,options){var _this=this;return options||(options={}),options.suffix=isUndefined(options.suffix)?resourceConfig.suffix:options.suffix,options.params=isUndefined(options.params)?{}:copy(options.params),options.params=_this.defaults.queryTransform(resourceConfig,options.params),_this.POST(_this.getPath("create",resourceConfig,attrs,options),options.serialize?options.serialize(resourceConfig,attrs):_this.defaults.serialize(resourceConfig,attrs),options).then(function(data){return(options.deserialize?options.deserialize:_this.defaults.deserialize)(resourceConfig,data)})}},{key:"update",value:function(resourceConfig,id,attrs,options){var _this=this;return options||(options={}),options.suffix=isUndefined(options.suffix)?resourceConfig.suffix:options.suffix,options.params=isUndefined(options.params)?{}:copy(options.params),options.params=_this.defaults.queryTransform(resourceConfig,options.params),_this.PUT(_this.getPath("update",resourceConfig,id,options),options.serialize?options.serialize(resourceConfig,attrs):_this.defaults.serialize(resourceConfig,attrs),options).then(function(data){return(options.deserialize?options.deserialize:_this.defaults.deserialize)(resourceConfig,data)})}},{key:"updateAll",value:function(resourceConfig,attrs,params,options){var _this=this;return options||(options={}),options.suffix=isUndefined(options.suffix)?resourceConfig.suffix:options.suffix,options.params=isUndefined(options.params)?{}:copy(options.params),params&&(params=_this.defaults.queryTransform(resourceConfig,params),deepMixIn(options.params,params)),this.PUT(_this.getPath("updateAll",resourceConfig,attrs,options),options.serialize?options.serialize(resourceConfig,attrs):_this.defaults.serialize(resourceConfig,attrs),options).then(function(data){return(options.deserialize?options.deserialize:_this.defaults.deserialize)(resourceConfig,data)})}},{key:"destroy",value:function(resourceConfig,id,options){var _this=this;return options||(options={}),options.suffix=isUndefined(options.suffix)?resourceConfig.suffix:options.suffix,options.params=isUndefined(options.params)?{}:copy(options.params),options.params=_this.defaults.queryTransform(resourceConfig,options.params),_this.DEL(_this.getPath("destroy",resourceConfig,id,options),options).then(function(data){return(options.deserialize?options.deserialize:_this.defaults.deserialize)(resourceConfig,data)})}},{key:"destroyAll",value:function(resourceConfig,params,options){var _this=this;return options||(options={}),options.suffix=isUndefined(options.suffix)?resourceConfig.suffix:options.suffix,options.params=isUndefined(options.params)?{}:copy(options.params),params&&(params=_this.defaults.queryTransform(resourceConfig,params),deepMixIn(options.params,params)),this.DEL(_this.getPath("destroyAll",resourceConfig,params,options),options).then(function(data){return(options.deserialize?options.deserialize:_this.defaults.deserialize)(resourceConfig,data)})}}]),DSHttpAdapter}();DSHttpAdapter.version={full:"3.2.1",major:parseInt("3",10),minor:parseInt("2",10),patch:parseInt("1",10),alpha:"false",beta:"false"},module.exports=DSHttpAdapter},function(module,exports){if("undefined"==typeof __WEBPACK_EXTERNAL_MODULE_3__){var e=new Error('Cannot find module "axios"');throw e.code="MODULE_NOT_FOUND",e}module.exports=__WEBPACK_EXTERNAL_MODULE_3__},function(module,exports){module.exports=__WEBPACK_EXTERNAL_MODULE_4__},function(module,exports,__webpack_require__){function webpackContext(req){return __webpack_require__(webpackContextResolve(req))}function webpackContextResolve(req){return map[req]||function(){throw new Error("Cannot find module '"+req+"'.")}()}var map={};webpackContext.keys=function(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=5}])});
/*app/domain/presets/tcga/domain.presets.tcga.module*/
define("app/domain/presets/tcga/domain.presets.tcga.module",["mui","./model/TcgaPreset","js-data","js-data-angular"],function(ng,TcgaPreset){var module=ng.module("mui.domain.presets.tcga",arguments,arguments);return module.config(function(DSProvider,DSHttpAdapterProvider){ng.extend(DSHttpAdapterProvider.defaults,{basePath:"/",httpConfig:{params:{format:"json"}}})}),module});
/*app/domain/presets/domain.presets.module*/
define("app/domain/presets/domain.presets.module",["mui","./tcga/domain.presets.tcga.module","js-data","js-data-angular"],function(ng,presets){var module=ng.module("mui.domain.presets",arguments,arguments);return module});
/*mev-bs-modal@0.0.1#src/view/modal/BsModal.tpl.html!system-text@0.1.0#text*/
define("mev-bs-modal@0.0.1#src/view/modal/BsModal.tpl.html!system-text@0.1.0#text",function(require,exports,module){module.exports='<div id="{{bindid.replace(\'#\', \'\')}}" class="modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">\n	<div class="modal-dialog">\n		<div class="modal-content">\n			<div class="modal-header">\n				<button ng-if="!hideClose" type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>\n				<div id="myModalLabel"><h3>{{header}}</h3></div>\n			</div>\n			<div class="modal-body">\n				<foo ng-transclude></foo>\n			</div>\n		</div>\n	</div>\n</div>'});
/*mev-bs-modal@0.0.1#src/view/modal/BsModalDirective*/
"use strict";define("mev-bs-modal@0.0.1#src/view/modal/BsModalDirective",["mui","./BsModal.tpl.html"],function(ng,template){function directive($rootScope){return{restrict:"E",scope:{bindid:"@",header:"@",test:"@",func:"&",headerHtml:"=",hideClose:"@"},transclude:!0,template:template,compile:function(tElem,tAttrs){return{post:function(scope,elem,attrs,ctrl){var rootElement=ng.element("body > ui-view:first-child");0===rootElement.length&&(rootElement=ng.element("body > ng-view:first-child")),rootElement.length>1&&(rootElement=rootElement[0]);var exists=rootElement.children("[bindid='"+scope.bindid+"']");exists.length>0&&(exists.html("").remove(),console.debug("BSMODAL remove",attrs.bindid,rootElement.children("[bindid='"+scope.bindid+"']").length)),console.debug("BSMODAL appaned",attrs.bindid),rootElement.append(elem);var elemLabel=elem.find("#myModalLabel");scope.headerHtml&&elemLabel.html(scope.headerHtml)}}}}}return directive.$inject=["$rootScope"],directive.$name="mevBsModalDirective",directive});
/*mev-bs-modal@0.0.1#src/view/trigger/BsModalTriggerDirective*/
"use strict";define("mev-bs-modal@0.0.1#src/view/trigger/BsModalTriggerDirective",["mui"],function(ng){function directive(){return{restrict:"A",transclude:!0,template:"<ng-transclude></ng-transclude>",scope:{bsModalTrigger:"@mevBsModalTrigger"},link:function(scope,elm,attrs){elm.attr("data-toggle","modal").attr("role","button").attr("data-target",scope.bsModalTrigger)}}}return directive.$inject=[],directive.$name="mevBsModalTriggerDirective",directive});
/*mev-bs-modal@0.0.1#src/mev-bs-modal*/
"use strict";define("mev-bs-modal@0.0.1#src/mev-bs-modal",["mui","./view/modal/BsModalDirective","./view/trigger/BsModalTriggerDirective"],function(ng){return ng.module("mevBsModal",arguments,arguments)});
/*pouchdb*/
define("pouchdb",["module","@loader"],function(module,loader){loader.get("@@global-helpers").prepareGlobal(module.id,[]);var define=loader.global.define,require=loader.global.require,source='!function(f){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=f();else if("function"==typeof define&&define.amd)define([],f);else{var g;g="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,g.PouchDB=f()}}(function(){var define;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module \'"+o+"\'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(_dereq_,module,exports){function EventEmitter(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function isFunction(arg){return"function"==typeof arg}function isNumber(arg){return"number"==typeof arg}function isObject(arg){return"object"==typeof arg&&null!==arg}function isUndefined(arg){return void 0===arg}module.exports=EventEmitter,EventEmitter.EventEmitter=EventEmitter,EventEmitter.prototype._events=void 0,EventEmitter.prototype._maxListeners=void 0,EventEmitter.defaultMaxListeners=10,EventEmitter.prototype.setMaxListeners=function(n){if(!isNumber(n)||0>n||isNaN(n))throw TypeError("n must be a positive number");return this._maxListeners=n,this},EventEmitter.prototype.emit=function(type){var er,handler,len,args,i,listeners;if(this._events||(this._events={}),"error"===type&&(!this._events.error||isObject(this._events.error)&&!this._events.error.length)){if(er=arguments[1],er instanceof Error)throw er;var err=new Error(\'Uncaught, unspecified "error" event. (\'+er+")");throw err.context=er,err}if(handler=this._events[type],isUndefined(handler))return!1;if(isFunction(handler))switch(arguments.length){case 1:handler.call(this);break;case 2:handler.call(this,arguments[1]);break;case 3:handler.call(this,arguments[1],arguments[2]);break;default:args=Array.prototype.slice.call(arguments,1),handler.apply(this,args)}else if(isObject(handler))for(args=Array.prototype.slice.call(arguments,1),listeners=handler.slice(),len=listeners.length,i=0;len>i;i++)listeners[i].apply(this,args);return!0},EventEmitter.prototype.addListener=function(type,listener){var m;if(!isFunction(listener))throw TypeError("listener must be a function");return this._events||(this._events={}),this._events.newListener&&this.emit("newListener",type,isFunction(listener.listener)?listener.listener:listener),this._events[type]?isObject(this._events[type])?this._events[type].push(listener):this._events[type]=[this._events[type],listener]:this._events[type]=listener,isObject(this._events[type])&&!this._events[type].warned&&(m=isUndefined(this._maxListeners)?EventEmitter.defaultMaxListeners:this._maxListeners,m&&m>0&&this._events[type].length>m&&(this._events[type].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[type].length),"function"==typeof console.trace&&console.trace())),this},EventEmitter.prototype.on=EventEmitter.prototype.addListener,EventEmitter.prototype.once=function(type,listener){function g(){this.removeListener(type,g),fired||(fired=!0,listener.apply(this,arguments))}if(!isFunction(listener))throw TypeError("listener must be a function");var fired=!1;return g.listener=listener,this.on(type,g),this},EventEmitter.prototype.removeListener=function(type,listener){var list,position,length,i;if(!isFunction(listener))throw TypeError("listener must be a function");if(!this._events||!this._events[type])return this;if(list=this._events[type],length=list.length,position=-1,list===listener||isFunction(list.listener)&&list.listener===listener)delete this._events[type],this._events.removeListener&&this.emit("removeListener",type,listener);else if(isObject(list)){for(i=length;i-->0;)if(list[i]===listener||list[i].listener&&list[i].listener===listener){position=i;break}if(0>position)return this;1===list.length?(list.length=0,delete this._events[type]):list.splice(position,1),this._events.removeListener&&this.emit("removeListener",type,listener)}return this},EventEmitter.prototype.removeAllListeners=function(type){var key,listeners;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[type]&&delete this._events[type],this;if(0===arguments.length){for(key in this._events)"removeListener"!==key&&this.removeAllListeners(key);return this.removeAllListeners("removeListener"),this._events={},this}if(listeners=this._events[type],isFunction(listeners))this.removeListener(type,listeners);else if(listeners)for(;listeners.length;)this.removeListener(type,listeners[listeners.length-1]);return delete this._events[type],this},EventEmitter.prototype.listeners=function(type){var ret;return ret=this._events&&this._events[type]?isFunction(this._events[type])?[this._events[type]]:this._events[type].slice():[]},EventEmitter.prototype.listenerCount=function(type){if(this._events){var evlistener=this._events[type];if(isFunction(evlistener))return 1;if(evlistener)return evlistener.length}return 0},EventEmitter.listenerCount=function(emitter,type){return emitter.listenerCount(type)}},{}],2:[function(_dereq_,module,exports){function cleanUpNextTick(){draining&&currentQueue&&(draining=!1,currentQueue.length?queue=currentQueue.concat(queue):queueIndex=-1,queue.length&&drainQueue())}function drainQueue(){if(!draining){var timeout=cachedSetTimeout(cleanUpNextTick);draining=!0;for(var len=queue.length;len;){for(currentQueue=queue,queue=[];++queueIndex<len;)currentQueue&&currentQueue[queueIndex].run();queueIndex=-1,len=queue.length}currentQueue=null,draining=!1,cachedClearTimeout(timeout)}}function Item(fun,array){this.fun=fun,this.array=array}function noop(){}var cachedSetTimeout,cachedClearTimeout,process=module.exports={};!function(){try{cachedSetTimeout=setTimeout}catch(e){cachedSetTimeout=function(){throw new Error("setTimeout is not defined")}}try{cachedClearTimeout=clearTimeout}catch(e){cachedClearTimeout=function(){throw new Error("clearTimeout is not defined")}}}();var currentQueue,queue=[],draining=!1,queueIndex=-1;process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1)for(var i=1;i<arguments.length;i++)args[i-1]=arguments[i];queue.push(new Item(fun,args)),1!==queue.length||draining||cachedSetTimeout(drainQueue,0)},Item.prototype.run=function(){this.fun.apply(null,this.array)},process.title="browser",process.browser=!0,process.env={},process.argv=[],process.version="",process.versions={},process.on=noop,process.addListener=noop,process.once=noop,process.off=noop,process.removeListener=noop,process.removeAllListeners=noop,process.emit=noop,process.binding=function(name){throw new Error("process.binding is not supported")},process.cwd=function(){return"/"},process.chdir=function(dir){throw new Error("process.chdir is not supported")},process.umask=function(){return 0}},{}],3:[function(_dereq_,module,exports){(function(process,global){"use strict";function _interopDefault(ex){return ex&&"object"==typeof ex&&"default"in ex?ex["default"]:ex}function isBinaryObject(object){return object instanceof ArrayBuffer||"undefined"!=typeof Blob&&object instanceof Blob}function cloneArrayBuffer(buff){if("function"==typeof buff.slice)return buff.slice(0);var target=new ArrayBuffer(buff.byteLength),targetArray=new Uint8Array(target),sourceArray=new Uint8Array(buff);return targetArray.set(sourceArray),target}function cloneBinaryObject(object){if(object instanceof ArrayBuffer)return cloneArrayBuffer(object);var size=object.size,type=object.type;return"function"==typeof object.slice?object.slice(0,size,type):object.webkitSlice(0,size,type)}function isPlainObject(value){var proto=Object.getPrototypeOf(value);if(null===proto)return!0;var Ctor=proto.constructor;return"function"==typeof Ctor&&Ctor instanceof Ctor&&funcToString.call(Ctor)==objectCtorString}function clone(object){var newObject,i,len;if(!object||"object"!=typeof object)return object;if(Array.isArray(object)){for(newObject=[],i=0,len=object.length;len>i;i++)newObject[i]=clone(object[i]);return newObject}if(object instanceof Date)return object.toISOString();if(isBinaryObject(object))return cloneBinaryObject(object);if(!isPlainObject(object))return object;newObject={};for(i in object)if(Object.prototype.hasOwnProperty.call(object,i)){var value=clone(object[i]);"undefined"!=typeof value&&(newObject[i]=value)}return newObject}function once(fun){var called=!1;return getArguments(function(args){if(called)throw new Error("once called more than once");called=!0,fun.apply(this,args)})}function toPromise(func){return getArguments(function(args){args=clone(args);var usedCB,self=this,tempCB="function"==typeof args[args.length-1]?args.pop():!1;tempCB&&(usedCB=function(err,resp){process.nextTick(function(){tempCB(err,resp)})});var promise=new PouchPromise(function(fulfill,reject){var resp;try{var callback=once(function(err,mesg){err?reject(err):fulfill(mesg)});args.push(callback),resp=func.apply(self,args),resp&&"function"==typeof resp.then&&fulfill(resp)}catch(e){reject(e)}});return usedCB&&promise.then(function(result){usedCB(null,result)},usedCB),promise})}function adapterFun(name,callback){function logApiCall(self,name,args){if(log.enabled){for(var logArgs=[self._db_name,name],i=0;i<args.length-1;i++)logArgs.push(args[i]);log.apply(null,logArgs);var origCallback=args[args.length-1];args[args.length-1]=function(err,res){var responseArgs=[self._db_name,name];responseArgs=responseArgs.concat(err?["error",err]:["success",res]),log.apply(null,responseArgs),origCallback(err,res)}}}return toPromise(getArguments(function(args){if(this._closed)return PouchPromise.reject(new Error("database is closed"));if(this._destroyed)return PouchPromise.reject(new Error("database is destroyed"));var self=this;return logApiCall(self,name,args),this.taskqueue.isReady?callback.apply(this,args):new PouchPromise(function(fulfill,reject){self.taskqueue.addTask(function(failed){failed?reject(failed):fulfill(self[name].apply(self,args))})})}))}function pick(obj,arr){for(var res={},i=0,len=arr.length;len>i;i++){var prop=arr[i];prop in obj&&(res[prop]=obj[prop])}return res}function identityFunction(x){return x}function formatResultForOpenRevsGet(result){return[{ok:result}]}function bulkGet(db,opts,callback){function collapseResultsAndFinish(){var results=[];perDocResults.forEach(function(res){res.docs.forEach(function(info){results.push({id:res.id,docs:[info]})})}),callback(null,{results:results})}function checkDone(){++numDone===numDocs&&collapseResultsAndFinish()}function gotResult(docIndex,id,docs){perDocResults[docIndex]={id:id,docs:docs},checkDone()}function nextBatch(){if(!(i>=allRequests.length)){var upTo=Math.min(i+MAX_NUM_CONCURRENT_REQUESTS,allRequests.length),batch=allRequests.slice(i,upTo);processBatch(batch,i),i+=batch.length}}function processBatch(batch,offset){batch.forEach(function(docId,j){var docIdx=offset+j,docRequests=requestsById[docId],docOpts=pick(docRequests[0],["atts_since","attachments"]);docOpts.open_revs=docRequests.map(function(request){return request.rev}),docOpts.open_revs=docOpts.open_revs.filter(identityFunction);var formatResult=identityFunction;0===docOpts.open_revs.length&&(delete docOpts.open_revs,formatResult=formatResultForOpenRevsGet),["revs","attachments","binary","ajax"].forEach(function(param){param in opts&&(docOpts[param]=opts[param])}),db.get(docId,docOpts,function(err,res){var result;result=err?[{error:err}]:formatResult(res),gotResult(docIdx,docId,result),nextBatch()})})}var requests=opts.docs,requestsById={};requests.forEach(function(request){request.id in requestsById?requestsById[request.id].push(request):requestsById[request.id]=[request]});var numDocs=Object.keys(requestsById).length,numDone=0,perDocResults=new Array(numDocs),allRequests=Object.keys(requestsById),i=0;nextBatch()}function isChromeApp(){return"undefined"!=typeof chrome&&"undefined"!=typeof chrome.storage&&"undefined"!=typeof chrome.storage.local}function hasLocalStorage(){return hasLocal}function attachBrowserEvents(self){isChromeApp()?chrome.storage.onChanged.addListener(function(e){null!=e.db_name&&self.emit(e.dbName.newValue)}):hasLocalStorage()&&("undefined"!=typeof addEventListener?addEventListener("storage",function(e){self.emit(e.key)}):window.attachEvent("storage",function(e){self.emit(e.key)}))}function Changes$1(){events.EventEmitter.call(this),this._listeners={},attachBrowserEvents(this)}function guardedConsole(method){if("undefined"!==console&&method in console){var args=Array.prototype.slice.call(arguments,1);console[method].apply(console,args)}}function randomNumber(min,max){var maxTimeout=6e5;min=parseInt(min,10)||0,max=parseInt(max,10),max!==max||min>=max?max=(min||1)<<1:max+=1,max>maxTimeout&&(min=maxTimeout>>1,max=maxTimeout);var ratio=Math.random(),range=max-min;return~~(range*ratio+min)}function defaultBackOff(min){var max=0;return min||(max=2e3),randomNumber(min,max)}function explainError(status,str){guardedConsole("info","The above "+status+" is totally normal. "+str)}function PouchError(opts){Error.call(this,opts.reason),this.status=opts.status,this.name=opts.error,this.message=opts.reason,this.error=!0}function createError(error,reason){function CustomPouchError(reason){for(var p in error)"function"!=typeof error[p]&&(this[p]=error[p]);void 0!==reason&&(this.reason=reason)}return CustomPouchError.prototype=PouchError.prototype,new CustomPouchError(reason)}function generateErrorFromResponse(err){if("object"!=typeof err){var data=err;err=UNKNOWN_ERROR,err.data=data}return"error"in err&&"conflict"===err.error&&(err.name="conflict",err.status=409),"name"in err||(err.name=err.error||"unknown"),"status"in err||(err.status=500),"message"in err||(err.message=err.message||err.reason),err}function tryFilter(filter,doc,req){try{return!filter(doc,req)}catch(err){var msg="Filter function threw: "+err.toString();return createError(BAD_REQUEST,msg)}}function filterChange(opts){var req={},hasFilter=opts.filter&&"function"==typeof opts.filter;return req.query=opts.query_params,function(change){change.doc||(change.doc={});var filterReturn=hasFilter&&tryFilter(opts.filter,change.doc,req);if("object"==typeof filterReturn)return filterReturn;if(filterReturn)return!1;if(opts.include_docs){if(!opts.attachments)for(var att in change.doc._attachments)change.doc._attachments.hasOwnProperty(att)&&(change.doc._attachments[att].stub=!0)}else delete change.doc;return!0}}function flatten(arrs){for(var res=[],i=0,len=arrs.length;len>i;i++)res=res.concat(arrs[i]);return res}function invalidIdError(id){var err;if(id?"string"!=typeof id?err=createError(INVALID_ID):/^_/.test(id)&&!/^_(design|local)/.test(id)&&(err=createError(RESERVED_ID)):err=createError(MISSING_ID),err)throw err}function listenerCount(ee,type){return"listenerCount"in ee?ee.listenerCount(type):events.EventEmitter.listenerCount(ee,type)}function parseDesignDocFunctionName(s){if(!s)return null;var parts=s.split("/");return 2===parts.length?parts:1===parts.length?[s,s]:null}function normalizeDesignDocFunctionName(s){var normalized=parseDesignDocFunctionName(s);return normalized?normalized.join("/"):null}function parseUri(str){for(var m=parser.exec(str),uri={},i=14;i--;){var key=keys[i],value=m[i]||"",encoded=-1!==["user","password"].indexOf(key);uri[key]=encoded?decodeURIComponent(value):value}return uri[qName]={},uri[keys[12]].replace(qParser,function($0,$1,$2){$1&&(uri[qName][$1]=$2)}),uri}function upsert(db,docId,diffFun){return new PouchPromise(function(fulfill,reject){db.get(docId,function(err,doc){if(err){if(404!==err.status)return reject(err);doc={}}var docRev=doc._rev,newDoc=diffFun(doc);return newDoc?(newDoc._id=docId,newDoc._rev=docRev,void fulfill(tryAndPut(db,newDoc,diffFun))):fulfill({updated:!1,rev:docRev})})})}function tryAndPut(db,doc,diffFun){return db.put(doc).then(function(res){return{updated:!0,rev:res.rev}},function(err){if(409!==err.status)throw err;return upsert(db,doc._id,diffFun)})}function getValue(radix){return 0|Math.random()*radix}function uuid(len,radix){radix=radix||chars.length;var out="",i=-1;if(len){for(;++i<len;)out+=chars[getValue(radix)];return out}for(;++i<36;)switch(i){case 8:case 13:case 18:case 23:out+="-";break;case 19:out+=chars[3&getValue(16)|8];break;default:out+=chars[getValue(16)]}return out}function winningRev(metadata){for(var winningId,winningPos,winningDeleted,node,toVisit=metadata.rev_tree.slice();node=toVisit.pop();){var tree=node.ids,branches=tree[2],pos=node.pos;if(branches.length)for(var i=0,len=branches.length;len>i;i++)toVisit.push({pos:pos+1,ids:branches[i]});else{var deleted=!!tree[1].deleted,id=tree[0];(!winningId||(winningDeleted!==deleted?winningDeleted:winningPos!==pos?pos>winningPos:id>winningId))&&(winningId=id,winningPos=pos,winningDeleted=deleted)}}return winningPos+"-"+winningId}function traverseRevTree(revs,callback){for(var node,toVisit=revs.slice();node=toVisit.pop();)for(var pos=node.pos,tree=node.ids,branches=tree[2],newCtx=callback(0===branches.length,pos,tree[0],node.ctx,tree[1]),i=0,len=branches.length;len>i;i++)toVisit.push({pos:pos+1,ids:branches[i],ctx:newCtx})}function sortByPos(a,b){return a.pos-b.pos}function collectLeaves(revs){var leaves=[];traverseRevTree(revs,function(isLeaf,pos,id,acc,opts){isLeaf&&leaves.push({rev:pos+"-"+id,pos:pos,opts:opts})}),leaves.sort(sortByPos).reverse();for(var i=0,len=leaves.length;len>i;i++)delete leaves[i].pos;return leaves}function collectConflicts(metadata){for(var win=winningRev(metadata),leaves=collectLeaves(metadata.rev_tree),conflicts=[],i=0,len=leaves.length;len>i;i++){var leaf=leaves[i];leaf.rev===win||leaf.opts.deleted||conflicts.push(leaf.rev)}return conflicts}function compactTree(metadata){var revs=[];return traverseRevTree(metadata.rev_tree,function(isLeaf,pos,revHash,ctx,opts){"available"!==opts.status||isLeaf||(revs.push(pos+"-"+revHash),opts.status="missing")}),revs}function rootToLeaf(revs){for(var node,paths=[],toVisit=revs.slice();node=toVisit.pop();){var pos=node.pos,tree=node.ids,id=tree[0],opts=tree[1],branches=tree[2],isLeaf=0===branches.length,history=node.history?node.history.slice():[];history.push({id:id,opts:opts}),isLeaf&&paths.push({pos:pos+1-history.length,ids:history});for(var i=0,len=branches.length;len>i;i++)toVisit.push({pos:pos+1,ids:branches[i],history:history})}return paths.reverse()}function sortByPos$1(a,b){return a.pos-b.pos}function binarySearch(arr,item,comparator){for(var mid,low=0,high=arr.length;high>low;)mid=low+high>>>1,comparator(arr[mid],item)<0?low=mid+1:high=mid;return low}function insertSorted(arr,item,comparator){var idx=binarySearch(arr,item,comparator);arr.splice(idx,0,item)}function pathToTree(path,numStemmed){for(var root,leaf,i=numStemmed,len=path.length;len>i;i++){var node=path[i],currentLeaf=[node.id,node.opts,[]];leaf?(leaf[2].push(currentLeaf),leaf=currentLeaf):root=leaf=currentLeaf}return root}function compareTree(a,b){return a[0]<b[0]?-1:1}function mergeTree(in_tree1,in_tree2){for(var queue=[{tree1:in_tree1,tree2:in_tree2}],conflicts=!1;queue.length>0;){var item=queue.pop(),tree1=item.tree1,tree2=item.tree2;(tree1[1].status||tree2[1].status)&&(tree1[1].status="available"===tree1[1].status||"available"===tree2[1].status?"available":"missing");for(var i=0;i<tree2[2].length;i++)if(tree1[2][0]){for(var merged=!1,j=0;j<tree1[2].length;j++)tree1[2][j][0]===tree2[2][i][0]&&(queue.push({tree1:tree1[2][j],tree2:tree2[2][i]}),merged=!0);merged||(conflicts="new_branch",insertSorted(tree1[2],tree2[2][i],compareTree))}else conflicts="new_leaf",tree1[2][0]=tree2[2][i]}return{conflicts:conflicts,tree:in_tree1}}function doMerge(tree,path,dontExpand){var res,restree=[],conflicts=!1,merged=!1;if(!tree.length)return{tree:[path],conflicts:"new_leaf"};for(var i=0,len=tree.length;len>i;i++){var branch=tree[i];if(branch.pos===path.pos&&branch.ids[0]===path.ids[0])res=mergeTree(branch.ids,path.ids),restree.push({pos:branch.pos,ids:res.tree}),conflicts=conflicts||res.conflicts,merged=!0;else if(dontExpand!==!0){var t1=branch.pos<path.pos?branch:path,t2=branch.pos<path.pos?path:branch,diff=t2.pos-t1.pos,candidateParents=[],trees=[];for(trees.push({ids:t1.ids,diff:diff,parent:null,parentIdx:null});trees.length>0;){var item=trees.pop();if(0!==item.diff)for(var elements=item.ids[2],j=0,elementsLen=elements.length;elementsLen>j;j++)trees.push({ids:elements[j],diff:item.diff-1,parent:item.ids,parentIdx:j});else item.ids[0]===t2.ids[0]&&candidateParents.push(item)}var el=candidateParents[0];el?(res=mergeTree(el.ids,t2.ids),el.parent[2][el.parentIdx]=res.tree,restree.push({pos:t1.pos,ids:t1.ids}),conflicts=conflicts||res.conflicts,merged=!0):restree.push(branch)}else restree.push(branch)}return merged||restree.push(path),restree.sort(sortByPos$1),{tree:restree,conflicts:conflicts||"internal_node"}}function stem(tree,depth){for(var result,paths=rootToLeaf(tree),maybeStem={},i=0,len=paths.length;len>i;i++){for(var path=paths[i],stemmed=path.ids,numStemmed=Math.max(0,stemmed.length-depth),stemmedNode={pos:path.pos+numStemmed,ids:pathToTree(stemmed,numStemmed)},s=0;numStemmed>s;s++){var rev=path.pos+s+"-"+stemmed[s].id;maybeStem[rev]=!0}result=result?doMerge(result,stemmedNode,!0).tree:[stemmedNode]}return traverseRevTree(result,function(isLeaf,pos,revHash){delete maybeStem[pos+"-"+revHash]}),{tree:result,revs:Object.keys(maybeStem)}}function merge(tree,path,depth){var newTree=doMerge(tree,path),stemmed=stem(newTree.tree,depth);return{tree:stemmed.tree,stemmedRevs:stemmed.revs,conflicts:newTree.conflicts}}function revExists(revs,rev){for(var node,toVisit=revs.slice(),splitRev=rev.split("-"),targetPos=parseInt(splitRev[0],10),targetId=splitRev[1];node=toVisit.pop();){if(node.pos===targetPos&&node.ids[0]===targetId)return!0;for(var branches=node.ids[2],i=0,len=branches.length;len>i;i++)toVisit.push({pos:node.pos+1,ids:branches[i]})}return!1}function getTrees(node){return node.ids}function isDeleted(metadata,rev){rev||(rev=winningRev(metadata));for(var tree,id=rev.substring(rev.indexOf("-")+1),toVisit=metadata.rev_tree.map(getTrees);tree=toVisit.pop();){if(tree[0]===id)return!!tree[1].deleted;toVisit=toVisit.concat(tree[2])}}function isLocalId(id){return/^_local/.test(id)}function evalFilter(input){return scopedEval("return "+input+";",{})}function evalView(input){return new Function("doc",["var emitted = false;","var emit = function (a, b) {","  emitted = true;","};","var view = "+input+";","view(doc);","if (emitted) {","  return true;","}"].join("\\n"))}function tryCatchInChangeListener(self,change){try{self.emit("change",change)}catch(e){guardedConsole("error",\'Error in .on("change", function):\',e)}}function Changes(db,opts,callback){function onDestroy(){self.cancel()}events.EventEmitter.call(this);var self=this;this.db=db,opts=opts?clone(opts):{};var complete=opts.complete=once(function(err,resp){err?listenerCount(self,"error")>0&&self.emit("error",err):self.emit("complete",resp),self.removeAllListeners(),db.removeListener("destroyed",onDestroy)});callback&&(self.on("complete",function(resp){callback(null,resp)}),self.on("error",callback)),db.once("destroyed",onDestroy),opts.onChange=function(change){opts.isCancelled||(tryCatchInChangeListener(self,change),self.startSeq&&self.startSeq<=change.seq&&(self.startSeq=!1))};var promise=new PouchPromise(function(fulfill,reject){opts.complete=function(err,res){err?reject(err):fulfill(res)}});self.once("cancel",function(){db.removeListener("destroyed",onDestroy),opts.complete(null,{status:"cancelled"})}),this.then=promise.then.bind(promise),this["catch"]=promise["catch"].bind(promise),this.then(function(result){complete(null,result)},complete),db.taskqueue.isReady?self.doChanges(opts):db.taskqueue.addTask(function(){self.isCancelled?self.emit("cancel"):self.doChanges(opts)})}function processChange(doc,metadata,opts){var changeList=[{rev:doc._rev}];"all_docs"===opts.style&&(changeList=collectLeaves(metadata.rev_tree).map(function(x){return{rev:x.rev}}));var change={id:metadata.id,changes:changeList,doc:doc};return isDeleted(metadata,doc._rev)&&(change.deleted=!0),opts.conflicts&&(change.doc._conflicts=collectConflicts(metadata),change.doc._conflicts.length||delete change.doc._conflicts),change}function compare(left,right){return right>left?-1:left>right?1:0}function arrayFirst(arr,callback){for(var i=0;i<arr.length;i++)if(callback(arr[i],i)===!0)return arr[i]}function yankError(callback){return function(err,results){err||results[0]&&results[0].error?callback(err||results[0]):callback(null,results.length?results[0]:results)}}function cleanDocs(docs){for(var i=0;i<docs.length;i++){var doc=docs[i];if(doc._deleted)delete doc._attachments;else if(doc._attachments)for(var atts=Object.keys(doc._attachments),j=0;j<atts.length;j++){var att=atts[j];doc._attachments[att]=pick(doc._attachments[att],["data","digest","content_type","length","revpos","stub"])}}}function compareByIdThenRev(a,b){var idCompare=compare(a._id,b._id);if(0!==idCompare)return idCompare;var aStart=a._revisions?a._revisions.start:0,bStart=b._revisions?b._revisions.start:0;return compare(aStart,bStart)}function computeHeight(revs){var height={},edges=[];return traverseRevTree(revs,function(isLeaf,pos,id,prnt){var rev=pos+"-"+id;return isLeaf&&(height[rev]=0),void 0!==prnt&&edges.push({from:prnt,to:rev}),rev}),edges.reverse(),edges.forEach(function(edge){void 0===height[edge.from]?height[edge.from]=1+height[edge.to]:height[edge.from]=Math.min(height[edge.from],1+height[edge.to])}),height}function allDocsKeysQuery(api,opts,callback){var keys="limit"in opts?opts.keys.slice(opts.skip,opts.limit+opts.skip):opts.skip>0?opts.keys.slice(opts.skip):opts.keys;if(opts.descending&&keys.reverse(),!keys.length)return api._allDocs({limit:0},callback);var finalResults={offset:opts.skip};return PouchPromise.all(keys.map(function(key){var subOpts=jsExtend.extend({key:key,deleted:"ok"},opts);return["limit","skip","keys"].forEach(function(optKey){delete subOpts[optKey]}),new PouchPromise(function(resolve,reject){api._allDocs(subOpts,function(err,res){return err?reject(err):(finalResults.total_rows=res.total_rows,void resolve(res.rows[0]||{key:key,error:"not_found"}))})})})).then(function(results){return finalResults.rows=results,finalResults})}function doNextCompaction(self){var task=self._compactionQueue[0],opts=task.opts,callback=task.callback;self.get("_local/compaction")["catch"](function(){return!1}).then(function(doc){doc&&doc.last_seq&&(opts.last_seq=doc.last_seq),self._compact(opts,function(err,res){err?callback(err):callback(null,res),process.nextTick(function(){self._compactionQueue.shift(),self._compactionQueue.length&&doNextCompaction(self)})})})}function attachmentNameError(name){return"_"===name.charAt(0)?name+"is not a valid attachment name, attachment names cannot start with \'_\'":!1}function AbstractPouchDB(){events.EventEmitter.call(this)}function TaskQueue(){this.isReady=!1,this.failed=!1,this.queue=[]}function defaultCallback(err){err&&global.debug&&guardedConsole("error",err)}function prepareForDestruction(self,opts){function onDestroyed(){ctor.emit("destroyed",name)}function onConstructorDestroyed(){self.removeListener("destroyed",onDestroyed),self.emit("destroyed",self)}var name=opts.originalName,ctor=self.constructor,destructionListeners=ctor._destructionListeners;self.once("destroyed",onDestroyed),destructionListeners.has(name)||destructionListeners.set(name,[]),destructionListeners.get(name).push(onConstructorDestroyed)}function PouchDB(name,opts,callback){if(!(this instanceof PouchDB))return new PouchDB(name,opts,callback);var self=this;if(("function"==typeof opts||"undefined"==typeof opts)&&(callback=opts,opts={}),name&&"object"==typeof name&&(opts=name,name=void 0),"undefined"==typeof callback)callback=defaultCallback;else{var oldCallback=callback;callback=function(){return guardedConsole("warn","Using a callback for new PouchDB()is deprecated."),oldCallback.apply(null,arguments)}}name=name||opts.name,opts=clone(opts),delete opts.name,this.__opts=opts;var oldCB=callback;self.auto_compaction=opts.auto_compaction,self.prefix=PouchDB.prefix,AbstractPouchDB.call(self),self.taskqueue=new TaskQueue;var promise=new PouchPromise(function(fulfill,reject){callback=function(err,resp){return err?reject(err):(delete resp.then,void fulfill(resp))},opts=clone(opts);var backend,error;return function(){try{if("string"!=typeof name)throw error=new Error("Missing/invalid DB name"),error.code=400,error;var prefixedName=(opts.prefix||"")+name;if(backend=PouchDB.parseAdapter(prefixedName,opts),opts.originalName=name,opts.name=backend.name,opts.adapter=opts.adapter||backend.adapter,self._adapter=opts.adapter,debug("pouchdb:adapter")("Picked adapter: "+opts.adapter),self._db_name=name,!PouchDB.adapters[opts.adapter])throw error=new Error("Adapter is missing"),error.code=404,error;if(!PouchDB.adapters[opts.adapter].valid())throw error=new Error("Invalid Adapter"),error.code=404,error}catch(err){self.taskqueue.fail(err)}}(),error?reject(error):(self.adapter=opts.adapter,self.replicate={},self.replicate.from=function(url,opts,callback){return self.constructor.replicate(url,self,opts,callback)},self.replicate.to=function(url,opts,callback){return self.constructor.replicate(self,url,opts,callback)},self.sync=function(dbName,opts,callback){return self.constructor.sync(self,dbName,opts,callback)},self.replicate.sync=self.sync,void PouchDB.adapters[opts.adapter].call(self,opts,function(err){return err?(self.taskqueue.fail(err),void callback(err)):(prepareForDestruction(self,opts),self.emit("created",self),PouchDB.emit("created",opts.originalName),self.taskqueue.ready(self),void callback(null,self))}))});promise.then(function(resp){oldCB(null,resp)},oldCB),self.then=promise.then.bind(promise),self["catch"]=promise["catch"].bind(promise)}function setUpEventEmitter(Pouch){Object.keys(events.EventEmitter.prototype).forEach(function(key){"function"==typeof events.EventEmitter.prototype[key]&&(Pouch[key]=eventEmitter[key].bind(eventEmitter))});var destructListeners=Pouch._destructionListeners=new pouchdbCollections.Map;Pouch.on("destroyed",function(name){destructListeners.get(name).forEach(function(callback){callback()}),destructListeners["delete"](name)})}function toObject(array){return array.reduce(function(obj,item){return obj[item]=!0,obj},{})}function parseRevisionInfo(rev){if(!/^\\d+\\-./.test(rev))return createError(INVALID_REV);var idx=rev.indexOf("-"),left=rev.substring(0,idx),right=rev.substring(idx+1);return{prefix:parseInt(left,10),id:right}}function makeRevTreeFromRevisions(revisions,opts){for(var pos=revisions.start-revisions.ids.length+1,revisionIds=revisions.ids,ids=[revisionIds[0],opts,[]],i=1,len=revisionIds.length;len>i;i++)ids=[revisionIds[i],{status:"missing"},[ids]];return[{pos:pos,ids:ids}]}function parseDoc(doc,newEdits){var nRevNum,newRevId,revInfo,opts={status:"available"};if(doc._deleted&&(opts.deleted=!0),newEdits)if(doc._id||(doc._id=uuid()),newRevId=uuid(32,16).toLowerCase(),doc._rev){if(revInfo=parseRevisionInfo(doc._rev),revInfo.error)return revInfo;doc._rev_tree=[{pos:revInfo.prefix,ids:[revInfo.id,{status:"missing"},[[newRevId,opts,[]]]]}],nRevNum=revInfo.prefix+1}else doc._rev_tree=[{pos:1,ids:[newRevId,opts,[]]}],nRevNum=1;else if(doc._revisions&&(doc._rev_tree=makeRevTreeFromRevisions(doc._revisions,opts),nRevNum=doc._revisions.start,newRevId=doc._revisions.ids[0]),!doc._rev_tree){if(revInfo=parseRevisionInfo(doc._rev),revInfo.error)return revInfo;nRevNum=revInfo.prefix,newRevId=revInfo.id,doc._rev_tree=[{pos:nRevNum,ids:[newRevId,opts,[]]}]}invalidIdError(doc._id),doc._rev=nRevNum+"-"+newRevId;var result={metadata:{},data:{}};for(var key in doc)if(Object.prototype.hasOwnProperty.call(doc,key)){var specialKey="_"===key[0];if(specialKey&&!reservedWords[key]){\nvar error=createError(DOC_VALIDATION,key);throw error.message=DOC_VALIDATION.message+": "+key,error}specialKey&&!dataWords[key]?result.metadata[key.slice(1)]=doc[key]:result.data[key]=doc[key]}return result}function createBlob(parts,properties){parts=parts||[],properties=properties||{};try{return new Blob(parts,properties)}catch(e){if("TypeError"!==e.name)throw e;for(var Builder="undefined"!=typeof BlobBuilder?BlobBuilder:"undefined"!=typeof MSBlobBuilder?MSBlobBuilder:"undefined"!=typeof MozBlobBuilder?MozBlobBuilder:WebKitBlobBuilder,builder=new Builder,i=0;i<parts.length;i+=1)builder.append(parts[i]);return builder.getBlob(properties.type)}}function binaryStringToArrayBuffer(bin){for(var length=bin.length,buf=new ArrayBuffer(length),arr=new Uint8Array(buf),i=0;length>i;i++)arr[i]=bin.charCodeAt(i);return buf}function binStringToBluffer(binString,type){return createBlob([binaryStringToArrayBuffer(binString)],{type:type})}function b64ToBluffer(b64,type){return binStringToBluffer(atob$1(b64),type)}function arrayBufferToBinaryString(buffer){for(var binary="",bytes=new Uint8Array(buffer),length=bytes.byteLength,i=0;length>i;i++)binary+=String.fromCharCode(bytes[i]);return binary}function readAsBinaryString(blob,callback){if("undefined"==typeof FileReader)return callback(arrayBufferToBinaryString((new FileReaderSync).readAsArrayBuffer(blob)));var reader=new FileReader,hasBinaryString="function"==typeof reader.readAsBinaryString;reader.onloadend=function(e){var result=e.target.result||"";return hasBinaryString?callback(result):void callback(arrayBufferToBinaryString(result))},hasBinaryString?reader.readAsBinaryString(blob):reader.readAsArrayBuffer(blob)}function blobToBinaryString(blobOrBuffer,callback){readAsBinaryString(blobOrBuffer,function(bin){callback(bin)})}function blobToBase64(blobOrBuffer,callback){blobToBinaryString(blobOrBuffer,function(base64){callback(btoa$1(base64))})}function readAsArrayBuffer(blob,callback){if("undefined"==typeof FileReader)return callback((new FileReaderSync).readAsArrayBuffer(blob));var reader=new FileReader;reader.onloadend=function(e){var result=e.target.result||new ArrayBuffer(0);callback(result)},reader.readAsArrayBuffer(blob)}function rawToBase64(raw){return btoa$1(raw)}function sliceBlob(blob,start,end){return blob.webkitSlice?blob.webkitSlice(start,end):blob.slice(start,end)}function appendBlob(buffer,blob,start,end,callback){(start>0||end<blob.size)&&(blob=sliceBlob(blob,start,end)),readAsArrayBuffer(blob,function(arrayBuffer){buffer.append(arrayBuffer),callback()})}function appendString(buffer,string,start,end,callback){(start>0||end<string.length)&&(string=string.substring(start,end)),buffer.appendBinary(string),callback()}function binaryMd5(data,callback){function next(){setImmediateShim(loadNextChunk)}function done(){var raw=buffer.end(!0),base64=rawToBase64(raw);callback(base64),buffer.destroy()}function loadNextChunk(){var start=currentChunk*chunkSize,end=start+chunkSize;currentChunk++,chunks>currentChunk?append(buffer,data,start,end,next):append(buffer,data,start,end,done)}var inputIsString="string"==typeof data,len=inputIsString?data.length:data.size,chunkSize=Math.min(MD5_CHUNK_SIZE,len),chunks=Math.ceil(len/chunkSize),currentChunk=0,buffer=inputIsString?new Md5:new Md5.ArrayBuffer,append=inputIsString?appendString:appendBlob;loadNextChunk()}function stringMd5(string){return Md5.hash(string)}function parseBase64(data){try{return atob$1(data)}catch(e){var err=createError(BAD_ARG,"Attachment is not a valid base64 string");return{error:err}}}function preprocessString(att,blobType,callback){var asBinary=parseBase64(att.data);return asBinary.error?callback(asBinary.error):(att.length=asBinary.length,"blob"===blobType?att.data=binStringToBluffer(asBinary,att.content_type):"base64"===blobType?att.data=btoa$1(asBinary):att.data=asBinary,void binaryMd5(asBinary,function(result){att.digest="md5-"+result,callback()}))}function preprocessBlob(att,blobType,callback){binaryMd5(att.data,function(md5){att.digest="md5-"+md5,att.length=att.data.size||att.data.length||0,"binary"===blobType?blobToBinaryString(att.data,function(binString){att.data=binString,callback()}):"base64"===blobType?blobToBase64(att.data,function(b64){att.data=b64,callback()}):callback()})}function preprocessAttachment(att,blobType,callback){return att.stub?callback():void("string"==typeof att.data?preprocessString(att,blobType,callback):preprocessBlob(att,blobType,callback))}function preprocessAttachments(docInfos,blobType,callback){function done(){docv++,docInfos.length===docv&&(overallErr?callback(overallErr):callback())}if(!docInfos.length)return callback();var overallErr,docv=0;docInfos.forEach(function(docInfo){function processedAttachment(err){overallErr=err,recv++,recv===attachments.length&&done()}var attachments=docInfo.data&&docInfo.data._attachments?Object.keys(docInfo.data._attachments):[],recv=0;if(!attachments.length)return done();for(var key in docInfo.data._attachments)docInfo.data._attachments.hasOwnProperty(key)&&preprocessAttachment(docInfo.data._attachments[key],blobType,processedAttachment)})}function updateDoc(revLimit,prev,docInfo,results,i,cb,writeDoc,newEdits){if(revExists(prev.rev_tree,docInfo.metadata.rev))return results[i]=docInfo,cb();var previousWinningRev=prev.winningRev||winningRev(prev),previouslyDeleted="deleted"in prev?prev.deleted:isDeleted(prev,previousWinningRev),deleted="deleted"in docInfo.metadata?docInfo.metadata.deleted:isDeleted(docInfo.metadata),isRoot=/^1-/.test(docInfo.metadata.rev);if(previouslyDeleted&&!deleted&&newEdits&&isRoot){var newDoc=docInfo.data;newDoc._rev=previousWinningRev,newDoc._id=docInfo.metadata.id,docInfo=parseDoc(newDoc,newEdits)}var merged=merge(prev.rev_tree,docInfo.metadata.rev_tree[0],revLimit),inConflict=newEdits&&(previouslyDeleted&&deleted||!previouslyDeleted&&"new_leaf"!==merged.conflicts||previouslyDeleted&&!deleted&&"new_branch"===merged.conflicts);if(inConflict){var err=createError(REV_CONFLICT);return results[i]=err,cb()}var newRev=docInfo.metadata.rev;docInfo.metadata.rev_tree=merged.tree,docInfo.stemmedRevs=merged.stemmedRevs||[],prev.rev_map&&(docInfo.metadata.rev_map=prev.rev_map);var newRevIsDeleted,winningRev$$=winningRev(docInfo.metadata),winningRevIsDeleted=isDeleted(docInfo.metadata,winningRev$$),delta=previouslyDeleted===winningRevIsDeleted?0:winningRevIsDeleted>previouslyDeleted?-1:1;newRevIsDeleted=newRev===winningRev$$?winningRevIsDeleted:isDeleted(docInfo.metadata,newRev),writeDoc(docInfo,winningRev$$,winningRevIsDeleted,newRevIsDeleted,!0,delta,i,cb)}function rootIsMissing(docInfo){return"missing"===docInfo.metadata.rev_tree[0].ids[1].status}function processDocs(revLimit,docInfos,api,fetchedDocs,tx,results,writeDoc,opts,overallCallback){function insertDoc(docInfo,resultsIdx,callback){var winningRev$$=winningRev(docInfo.metadata),deleted=isDeleted(docInfo.metadata,winningRev$$);if("was_delete"in opts&&deleted)return results[resultsIdx]=createError(MISSING_DOC,"deleted"),callback();var inConflict=newEdits&&rootIsMissing(docInfo);if(inConflict){var err=createError(REV_CONFLICT);return results[resultsIdx]=err,callback()}var delta=deleted?0:1;writeDoc(docInfo,winningRev$$,deleted,deleted,!1,delta,resultsIdx,callback)}function checkAllDocsDone(){++docsDone===docsToDo&&overallCallback&&overallCallback()}revLimit=revLimit||1e3;var newEdits=opts.new_edits,idsToDocs=new pouchdbCollections.Map,docsDone=0,docsToDo=docInfos.length;docInfos.forEach(function(currentDoc,resultsIdx){if(currentDoc._id&&isLocalId(currentDoc._id)){var fun=currentDoc._deleted?"_removeLocal":"_putLocal";return void api[fun](currentDoc,{ctx:tx},function(err,res){results[resultsIdx]=err||res,checkAllDocsDone()})}var id=currentDoc.metadata.id;idsToDocs.has(id)?(docsToDo--,idsToDocs.get(id).push([currentDoc,resultsIdx])):idsToDocs.set(id,[[currentDoc,resultsIdx]])}),idsToDocs.forEach(function(docs,id){function docWritten(){++numDone<docs.length?nextDoc():checkAllDocsDone()}function nextDoc(){var value=docs[numDone],currentDoc=value[0],resultsIdx=value[1];if(fetchedDocs.has(id))updateDoc(revLimit,fetchedDocs.get(id),currentDoc,results,resultsIdx,docWritten,writeDoc,newEdits);else{var merged=merge([],currentDoc.metadata.rev_tree[0],revLimit);currentDoc.metadata.rev_tree=merged.tree,currentDoc.stemmedRevs=merged.stemmedRevs||[],insertDoc(currentDoc,resultsIdx,docWritten)}}var numDone=0;nextDoc()})}function slowJsonParse(str){try{return JSON.parse(str)}catch(e){return vuvuzela.parse(str)}}function safeJsonParse(str){return str.length<5e4?JSON.parse(str):slowJsonParse(str)}function safeJsonStringify(json){try{return JSON.stringify(json)}catch(e){return vuvuzela.stringify(json)}}function tryCode(fun,that,args,PouchDB){try{fun.apply(that,args)}catch(err){PouchDB.emit("error",err)}}function applyNext(PouchDB){if(!taskQueue.running&&taskQueue.queue.length){taskQueue.running=!0;var item=taskQueue.queue.shift();item.action(function(err,res){tryCode(item.callback,this,[err,res],PouchDB),taskQueue.running=!1,process.nextTick(function(){applyNext(PouchDB)})})}}function idbError(callback){return function(evt){var message="unknown_error";evt.target&&evt.target.error&&(message=evt.target.error.name||evt.target.error.message),callback(createError(IDB_ERROR,message,evt.type))}}function encodeMetadata(metadata,winningRev,deleted){return{data:safeJsonStringify(metadata),winningRev:winningRev,deletedOrLocal:deleted?"1":"0",seq:metadata.seq,id:metadata.id}}function decodeMetadata(storedObject){if(!storedObject)return null;var metadata=safeJsonParse(storedObject.data);return metadata.winningRev=storedObject.winningRev,metadata.deleted="1"===storedObject.deletedOrLocal,metadata.seq=storedObject.seq,metadata}function decodeDoc(doc){if(!doc)return doc;var idx=doc._doc_id_rev.lastIndexOf(":");return doc._id=doc._doc_id_rev.substring(0,idx-1),doc._rev=doc._doc_id_rev.substring(idx+1),delete doc._doc_id_rev,doc}function readBlobData(body,type,asBlob,callback){asBlob?callback(body?"string"!=typeof body?body:b64ToBluffer(body,type):createBlob([""],{type:type})):body?"string"!=typeof body?readAsBinaryString(body,function(binary){callback(btoa$1(binary))}):callback(body):callback("")}function fetchAttachmentsIfNecessary(doc,opts,txn,cb){function checkDone(){++numDone===attachments.length&&cb&&cb()}function fetchAttachment(doc,att){var attObj=doc._attachments[att],digest=attObj.digest,req=txn.objectStore(ATTACH_STORE).get(digest);req.onsuccess=function(e){attObj.body=e.target.result.body,checkDone()}}var attachments=Object.keys(doc._attachments||{});if(!attachments.length)return cb&&cb();var numDone=0;attachments.forEach(function(att){opts.attachments&&opts.include_docs?fetchAttachment(doc,att):(doc._attachments[att].stub=!0,checkDone())})}function postProcessAttachments(results,asBlob){return PouchPromise.all(results.map(function(row){if(row.doc&&row.doc._attachments){var attNames=Object.keys(row.doc._attachments);return PouchPromise.all(attNames.map(function(att){var attObj=row.doc._attachments[att];if("body"in attObj){var body=attObj.body,type=attObj.content_type;return new PouchPromise(function(resolve){readBlobData(body,type,asBlob,function(data){row.doc._attachments[att]=jsExtend.extend(pick(attObj,["digest","content_type"]),{data:data}),resolve()})})}}))}}))}function compactRevs(revs,docId,txn){function checkDone(){count--,count||deleteOrphanedAttachments()}function deleteOrphanedAttachments(){possiblyOrphanedDigests.length&&possiblyOrphanedDigests.forEach(function(digest){var countReq=attAndSeqStore.index("digestSeq").count(IDBKeyRange.bound(digest+"::",digest+"::￿",!1,!1));countReq.onsuccess=function(e){var count=e.target.result;count||attStore["delete"](digest)}})}var possiblyOrphanedDigests=[],seqStore=txn.objectStore(BY_SEQ_STORE),attStore=txn.objectStore(ATTACH_STORE),attAndSeqStore=txn.objectStore(ATTACH_AND_SEQ_STORE),count=revs.length;revs.forEach(function(rev){var index=seqStore.index("_doc_id_rev"),key=docId+"::"+rev;index.getKey(key).onsuccess=function(e){var seq=e.target.result;if("number"!=typeof seq)return checkDone();seqStore["delete"](seq);var cursor=attAndSeqStore.index("seq").openCursor(IDBKeyRange.only(seq));cursor.onsuccess=function(event){var cursor=event.target.result;if(cursor){var digest=cursor.value.digestSeq.split("::")[0];possiblyOrphanedDigests.push(digest),attAndSeqStore["delete"](cursor.primaryKey),cursor["continue"]()}else checkDone()}}})}function openTransactionSafely(idb,stores,mode){try{return{txn:idb.transaction(stores,mode)}}catch(err){return{error:err}}}function idbBulkDocs(dbOpts,req,opts,api,idb,idbChanges,callback){function startTransaction(){var stores=[DOC_STORE,BY_SEQ_STORE,ATTACH_STORE,LOCAL_STORE,ATTACH_AND_SEQ_STORE],txnResult=openTransactionSafely(idb,stores,"readwrite");return txnResult.error?callback(txnResult.error):(txn=txnResult.txn,txn.onabort=idbError(callback),txn.ontimeout=idbError(callback),txn.oncomplete=complete,docStore=txn.objectStore(DOC_STORE),bySeqStore=txn.objectStore(BY_SEQ_STORE),attachStore=txn.objectStore(ATTACH_STORE),attachAndSeqStore=txn.objectStore(ATTACH_AND_SEQ_STORE),void verifyAttachments(function(err){return err?(preconditionErrored=!0,callback(err)):void fetchExistingDocs()}))}function idbProcessDocs(){processDocs(dbOpts.revs_limit,docInfos,api,fetchedDocs,txn,results,writeDoc,opts)}function fetchExistingDocs(){function checkDone(){++numFetched===docInfos.length&&idbProcessDocs()}function readMetadata(event){var metadata=decodeMetadata(event.target.result);metadata&&fetchedDocs.set(metadata.id,metadata),checkDone()}if(docInfos.length)for(var numFetched=0,i=0,len=docInfos.length;len>i;i++){var docInfo=docInfos[i];if(docInfo._id&&isLocalId(docInfo._id))checkDone();else{var req=docStore.get(docInfo.metadata.id);req.onsuccess=readMetadata}}}function complete(){preconditionErrored||(idbChanges.notify(api._meta.name),api._meta.docCount+=docCountDelta,callback(null,results))}function verifyAttachment(digest,callback){var req=attachStore.get(digest);req.onsuccess=function(e){if(e.target.result)callback();else{var err=createError(MISSING_STUB,"unknown stub attachment with digest "+digest);err.status=412,callback(err)}}}function verifyAttachments(finish){function checkDone(){++numDone===digests.length&&finish(err)}var digests=[];if(docInfos.forEach(function(docInfo){docInfo.data&&docInfo.data._attachments&&Object.keys(docInfo.data._attachments).forEach(function(filename){var att=docInfo.data._attachments[filename];att.stub&&digests.push(att.digest)})}),!digests.length)return finish();var err,numDone=0;digests.forEach(function(digest){verifyAttachment(digest,function(attErr){attErr&&!err&&(err=attErr),checkDone()})})}function writeDoc(docInfo,winningRev,winningRevIsDeleted,newRevIsDeleted,isUpdate,delta,resultsIdx,callback){docCountDelta+=delta,docInfo.metadata.winningRev=winningRev,docInfo.metadata.deleted=winningRevIsDeleted;var doc=docInfo.data;doc._id=docInfo.metadata.id,doc._rev=docInfo.metadata.rev,newRevIsDeleted&&(doc._deleted=!0);var hasAttachments=doc._attachments&&Object.keys(doc._attachments).length;return hasAttachments?writeAttachments(docInfo,winningRev,winningRevIsDeleted,isUpdate,resultsIdx,callback):void finishDoc(docInfo,winningRev,winningRevIsDeleted,isUpdate,resultsIdx,callback)}function finishDoc(docInfo,winningRev,winningRevIsDeleted,isUpdate,resultsIdx,callback){function afterPutDoc(e){var revsToDelete=docInfo.stemmedRevs||[];isUpdate&&api.auto_compaction&&(revsToDelete=revsToDelete.concat(compactTree(docInfo.metadata))),revsToDelete&&revsToDelete.length&&compactRevs(revsToDelete,docInfo.metadata.id,txn),metadata.seq=e.target.result,delete metadata.rev;var metadataToStore=encodeMetadata(metadata,winningRev,winningRevIsDeleted),metaDataReq=docStore.put(metadataToStore);metaDataReq.onsuccess=afterPutMetadata}function afterPutDocError(e){e.preventDefault(),e.stopPropagation();var index=bySeqStore.index("_doc_id_rev"),getKeyReq=index.getKey(doc._doc_id_rev);getKeyReq.onsuccess=function(e){var putReq=bySeqStore.put(doc,e.target.result);putReq.onsuccess=afterPutDoc}}function afterPutMetadata(){results[resultsIdx]={ok:!0,id:metadata.id,rev:winningRev},fetchedDocs.set(docInfo.metadata.id,docInfo.metadata),insertAttachmentMappings(docInfo,metadata.seq,callback)}var doc=docInfo.data,metadata=docInfo.metadata;doc._doc_id_rev=metadata.id+"::"+metadata.rev,delete doc._id,delete doc._rev;var putReq=bySeqStore.put(doc);putReq.onsuccess=afterPutDoc,putReq.onerror=afterPutDocError}function writeAttachments(docInfo,winningRev,winningRevIsDeleted,isUpdate,resultsIdx,callback){function collectResults(){numDone===attachments.length&&finishDoc(docInfo,winningRev,winningRevIsDeleted,isUpdate,resultsIdx,callback)}function attachmentSaved(){numDone++,collectResults()}var doc=docInfo.data,numDone=0,attachments=Object.keys(doc._attachments);attachments.forEach(function(key){var att=docInfo.data._attachments[key];if(att.stub)numDone++,collectResults();else{var data=att.data;delete att.data,att.revpos=parseInt(winningRev,10);var digest=att.digest;saveAttachment(digest,data,attachmentSaved)}})}function insertAttachmentMappings(docInfo,seq,callback){function checkDone(){++attsAdded===attsToAdd.length&&callback()}function add(att){var digest=docInfo.data._attachments[att].digest,req=attachAndSeqStore.put({seq:seq,digestSeq:digest+"::"+seq});req.onsuccess=checkDone,req.onerror=function(e){e.preventDefault(),e.stopPropagation(),checkDone()}}var attsAdded=0,attsToAdd=Object.keys(docInfo.data._attachments||{});if(!attsToAdd.length)return callback();for(var i=0;i<attsToAdd.length;i++)add(attsToAdd[i])}function saveAttachment(digest,data,callback){var getKeyReq=attachStore.count(digest);getKeyReq.onsuccess=function(e){var count=e.target.result;if(count)return callback();var newAtt={digest:digest,body:data},putReq=attachStore.put(newAtt);putReq.onsuccess=callback}}for(var txn,docStore,bySeqStore,attachStore,attachAndSeqStore,docInfoError,docInfos=req.docs,docCountDelta=0,i=0,len=docInfos.length;len>i;i++){var doc=docInfos[i];doc._id&&isLocalId(doc._id)||(doc=docInfos[i]=parseDoc(doc,opts.new_edits),doc.error&&!docInfoError&&(docInfoError=doc))}if(docInfoError)return callback(docInfoError);var results=new Array(docInfos.length),fetchedDocs=new pouchdbCollections.Map,preconditionErrored=!1,blobType=api._meta.blobSupport?"blob":"base64";preprocessAttachments(docInfos,blobType,function(err){return err?callback(err):void startTransaction()})}function createKeyRange(start,end,inclusiveEnd,key,descending){try{if(start&&end)return descending?IDBKeyRange.bound(end,start,!inclusiveEnd,!1):IDBKeyRange.bound(start,end,!1,!inclusiveEnd);if(start)return descending?IDBKeyRange.upperBound(start):IDBKeyRange.lowerBound(start);if(end)return descending?IDBKeyRange.lowerBound(end,!inclusiveEnd):IDBKeyRange.upperBound(end,!inclusiveEnd);if(key)return IDBKeyRange.only(key)}catch(e){return{error:e}}return null}function handleKeyRangeError(api,opts,err,callback){return"DataError"===err.name&&0===err.code?callback(null,{total_rows:api._meta.docCount,offset:opts.skip,rows:[]}):void callback(createError(IDB_ERROR,err.name,err.message))}function idbAllDocs(opts,api,idb,callback){function allDocsQuery(opts,callback){function fetchDocAsynchronously(metadata,row,winningRev){var key=metadata.id+"::"+winningRev;docIdRevIndex.get(key).onsuccess=function(e){row.doc=decodeDoc(e.target.result),opts.conflicts&&(row.doc._conflicts=collectConflicts(metadata)),fetchAttachmentsIfNecessary(row.doc,opts,txn)}}function allDocsInner(cursor,winningRev,metadata){var row={id:metadata.id,key:metadata.id,value:{rev:winningRev}},deleted=metadata.deleted;if("ok"===opts.deleted)results.push(row),deleted?(row.value.deleted=!0,row.doc=null):opts.include_docs&&fetchDocAsynchronously(metadata,row,winningRev);else if(!deleted&&skip--<=0&&(results.push(row),opts.include_docs&&fetchDocAsynchronously(metadata,row,winningRev),0===--limit))return;cursor["continue"]()}function onGetCursor(e){docCount=api._meta.docCount;var cursor=e.target.result;if(cursor){var metadata=decodeMetadata(cursor.value),winningRev=metadata.winningRev;allDocsInner(cursor,winningRev,metadata)}}function onResultsReady(){callback(null,{total_rows:docCount,offset:opts.skip,rows:results})}function onTxnComplete(){opts.attachments?postProcessAttachments(results,opts.binary).then(onResultsReady):onResultsReady()}var start="startkey"in opts?opts.startkey:!1,end="endkey"in opts?opts.endkey:!1,key="key"in opts?opts.key:!1,skip=opts.skip||0,limit="number"==typeof opts.limit?opts.limit:-1,inclusiveEnd=opts.inclusive_end!==!1,descending="descending"in opts&&opts.descending?"prev":null,keyRange=createKeyRange(start,end,inclusiveEnd,key,descending);if(keyRange&&keyRange.error)return handleKeyRangeError(api,opts,keyRange.error,callback);var stores=[DOC_STORE,BY_SEQ_STORE];opts.attachments&&stores.push(ATTACH_STORE);var txnResult=openTransactionSafely(idb,stores,"readonly");if(txnResult.error)return callback(txnResult.error);var txn=txnResult.txn,docStore=txn.objectStore(DOC_STORE),seqStore=txn.objectStore(BY_SEQ_STORE),cursor=descending?docStore.openCursor(keyRange,descending):docStore.openCursor(keyRange),docIdRevIndex=seqStore.index("_doc_id_rev"),results=[],docCount=0;txn.oncomplete=onTxnComplete,cursor.onsuccess=onGetCursor}function allDocs(opts,callback){return 0===opts.limit?callback(null,{total_rows:api._meta.docCount,offset:opts.skip,rows:[]}):void allDocsQuery(opts,callback)}allDocs(opts,callback)}function checkBlobSupport(txn){return new PouchPromise(function(resolve){var blob=createBlob([""]);txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob,"key"),txn.onabort=function(e){e.preventDefault(),e.stopPropagation(),resolve(!1)},txn.oncomplete=function(){var matchedChrome=navigator.userAgent.match(/Chrome\\/(\\d+)/),matchedEdge=navigator.userAgent.match(/Edge\\//);resolve(matchedEdge||!matchedChrome||parseInt(matchedChrome[1],10)>=43)}})["catch"](function(){return!1})}function IdbPouch(opts,callback){var api=this;taskQueue.queue.push({action:function(thisCallback){init(api,opts,thisCallback)},callback:callback}),applyNext(api.constructor)}function init(api,opts,callback){function createSchema(db){var docStore=db.createObjectStore(DOC_STORE,{keyPath:"id"});db.createObjectStore(BY_SEQ_STORE,{autoIncrement:!0}).createIndex("_doc_id_rev","_doc_id_rev",{unique:!0}),db.createObjectStore(ATTACH_STORE,{keyPath:"digest"}),db.createObjectStore(META_STORE,{keyPath:"id",autoIncrement:!1}),db.createObjectStore(DETECT_BLOB_SUPPORT_STORE),docStore.createIndex("deletedOrLocal","deletedOrLocal",{unique:!1}),db.createObjectStore(LOCAL_STORE,{keyPath:"_id"});var attAndSeqStore=db.createObjectStore(ATTACH_AND_SEQ_STORE,{autoIncrement:!0});attAndSeqStore.createIndex("seq","seq"),attAndSeqStore.createIndex("digestSeq","digestSeq",{unique:!0})}function addDeletedOrLocalIndex(txn,callback){var docStore=txn.objectStore(DOC_STORE);docStore.createIndex("deletedOrLocal","deletedOrLocal",{unique:!1}),docStore.openCursor().onsuccess=function(event){var cursor=event.target.result;if(cursor){var metadata=cursor.value,deleted=isDeleted(metadata);metadata.deletedOrLocal=deleted?"1":"0",docStore.put(metadata),cursor["continue"]()}else callback()}}function createLocalStoreSchema(db){db.createObjectStore(LOCAL_STORE,{keyPath:"_id"}).createIndex("_doc_id_rev","_doc_id_rev",{unique:!0})}function migrateLocalStore(txn,cb){var localStore=txn.objectStore(LOCAL_STORE),docStore=txn.objectStore(DOC_STORE),seqStore=txn.objectStore(BY_SEQ_STORE),cursor=docStore.openCursor();cursor.onsuccess=function(event){var cursor=event.target.result;if(cursor){var metadata=cursor.value,docId=metadata.id,local=isLocalId(docId),rev=winningRev(metadata);if(local){var docIdRev=docId+"::"+rev,start=docId+"::",end=docId+"::~",index=seqStore.index("_doc_id_rev"),range=IDBKeyRange.bound(start,end,!1,!1),seqCursor=index.openCursor(range);seqCursor.onsuccess=function(e){if(seqCursor=e.target.result){var data=seqCursor.value;data._doc_id_rev===docIdRev&&localStore.put(data),seqStore["delete"](seqCursor.primaryKey),seqCursor["continue"]()}else docStore["delete"](cursor.primaryKey),cursor["continue"]()}}else cursor["continue"]()}else cb&&cb()}}function addAttachAndSeqStore(db){var attAndSeqStore=db.createObjectStore(ATTACH_AND_SEQ_STORE,{autoIncrement:!0});attAndSeqStore.createIndex("seq","seq"),attAndSeqStore.createIndex("digestSeq","digestSeq",{unique:!0})}function migrateAttsAndSeqs(txn,callback){var seqStore=txn.objectStore(BY_SEQ_STORE),attStore=txn.objectStore(ATTACH_STORE),attAndSeqStore=txn.objectStore(ATTACH_AND_SEQ_STORE),req=attStore.count();req.onsuccess=function(e){var count=e.target.result;return count?void(seqStore.openCursor().onsuccess=function(e){var cursor=e.target.result;if(!cursor)return callback();for(var doc=cursor.value,seq=cursor.primaryKey,atts=Object.keys(doc._attachments||{}),digestMap={},j=0;j<atts.length;j++){var att=doc._attachments[atts[j]];digestMap[att.digest]=!0}var digests=Object.keys(digestMap);for(j=0;j<digests.length;j++){var digest=digests[j];attAndSeqStore.put({seq:seq,digestSeq:digest+"::"+seq})}cursor["continue"]()}):callback()}}function migrateMetadata(txn){function decodeMetadataCompat(storedObject){return storedObject.data?decodeMetadata(storedObject):(storedObject.deleted="1"===storedObject.deletedOrLocal,storedObject)}var bySeqStore=txn.objectStore(BY_SEQ_STORE),docStore=txn.objectStore(DOC_STORE),cursor=docStore.openCursor();cursor.onsuccess=function(e){function fetchMetadataSeq(){var start=metadata.id+"::",end=metadata.id+"::￿",req=bySeqStore.index("_doc_id_rev").openCursor(IDBKeyRange.bound(start,end)),metadataSeq=0;req.onsuccess=function(e){var cursor=e.target.result;if(!cursor)return metadata.seq=metadataSeq,onGetMetadataSeq();var seq=cursor.primaryKey;seq>metadataSeq&&(metadataSeq=seq),cursor["continue"]()}}function onGetMetadataSeq(){var metadataToStore=encodeMetadata(metadata,metadata.winningRev,metadata.deleted),req=docStore.put(metadataToStore);req.onsuccess=function(){cursor["continue"]()}}var cursor=e.target.result;if(cursor){var metadata=decodeMetadataCompat(cursor.value);return metadata.winningRev=metadata.winningRev||winningRev(metadata),metadata.seq?onGetMetadataSeq():void fetchMetadataSeq()}}}var dbName=opts.name,idb=null;api._meta=null,api.type=function(){return"idb"},api._id=toPromise(function(callback){callback(null,api._meta.instanceId)}),api._bulkDocs=function(req,reqOpts,callback){idbBulkDocs(opts,req,reqOpts,api,idb,idbChanges,callback)},api._get=function(id,opts,callback){function finish(){callback(err,{doc:doc,metadata:metadata,ctx:txn})}var doc,metadata,err,txn=opts.ctx;if(!txn){var txnResult=openTransactionSafely(idb,[DOC_STORE,BY_SEQ_STORE,ATTACH_STORE],"readonly");if(txnResult.error)return callback(txnResult.error);txn=txnResult.txn}txn.objectStore(DOC_STORE).get(id).onsuccess=function(e){if(metadata=decodeMetadata(e.target.result),!metadata)return err=createError(MISSING_DOC,"missing"),finish();if(isDeleted(metadata)&&!opts.rev)return err=createError(MISSING_DOC,"deleted"),finish();var objectStore=txn.objectStore(BY_SEQ_STORE),rev=opts.rev||metadata.winningRev,key=metadata.id+"::"+rev;objectStore.index("_doc_id_rev").get(key).onsuccess=function(e){return doc=e.target.result,doc&&(doc=decodeDoc(doc)),doc?void finish():(err=createError(MISSING_DOC,"missing"),finish())}}},api._getAttachment=function(docId,attachId,attachment,opts,callback){var txn;if(opts.ctx)txn=opts.ctx;else{var txnResult=openTransactionSafely(idb,[DOC_STORE,BY_SEQ_STORE,ATTACH_STORE],"readonly");if(txnResult.error)return callback(txnResult.error);txn=txnResult.txn}var digest=attachment.digest,type=attachment.content_type;txn.objectStore(ATTACH_STORE).get(digest).onsuccess=function(e){var body=e.target.result.body;readBlobData(body,type,opts.binary,function(blobData){callback(null,blobData)})}},api._info=function(callback){if(null===idb||!cachedDBs.has(dbName)){var error=new Error("db isn\'t open");return error.id="idbNull",callback(error)}var updateSeq,docCount,txnResult=openTransactionSafely(idb,[BY_SEQ_STORE],"readonly");if(txnResult.error)return callback(txnResult.error);var txn=txnResult.txn,cursor=txn.objectStore(BY_SEQ_STORE).openCursor(null,"prev");cursor.onsuccess=function(event){var cursor=event.target.result;updateSeq=cursor?cursor.key:0,docCount=api._meta.docCount},txn.oncomplete=function(){callback(null,{doc_count:docCount,update_seq:updateSeq,idb_attachment_format:api._meta.blobSupport?"binary":"base64"})}},api._allDocs=function(opts,callback){idbAllDocs(opts,api,idb,callback)},api._changes=function(opts){function onGetCursor(cursor){function onGetMetadata(){return metadata.seq!==seq?cursor["continue"]():(lastSeq=seq,metadata.winningRev===doc._rev?onGetWinningDoc(doc):void fetchWinningDoc())}function fetchWinningDoc(){var docIdRev=doc._id+"::"+metadata.winningRev,req=docIdRevIndex.get(docIdRev);req.onsuccess=function(e){onGetWinningDoc(decodeDoc(e.target.result))}}function onGetWinningDoc(winningDoc){var change=opts.processChange(winningDoc,metadata,opts);change.seq=metadata.seq;var filtered=filter(change);return"object"==typeof filtered?opts.complete(filtered):(filtered&&(numResults++,returnDocs&&results.push(change),opts.attachments&&opts.include_docs?fetchAttachmentsIfNecessary(winningDoc,opts,txn,function(){postProcessAttachments([change],opts.binary).then(function(){opts.onChange(change)})}):opts.onChange(change)),void(numResults!==limit&&cursor["continue"]()))}var doc=decodeDoc(cursor.value),seq=cursor.key;if(docIds&&!docIds.has(doc._id))return cursor["continue"]();var metadata;return(metadata=docIdsToMetadata.get(doc._id))?onGetMetadata():void(docStore.get(doc._id).onsuccess=function(event){metadata=decodeMetadata(event.target.result),docIdsToMetadata.set(doc._id,metadata),onGetMetadata()})}function onsuccess(event){var cursor=event.target.result;cursor&&onGetCursor(cursor)}function fetchChanges(){var objectStores=[DOC_STORE,BY_SEQ_STORE];opts.attachments&&objectStores.push(ATTACH_STORE);var txnResult=openTransactionSafely(idb,objectStores,"readonly");if(txnResult.error)return opts.complete(txnResult.error);txn=txnResult.txn,txn.onabort=idbError(opts.complete),txn.oncomplete=onTxnComplete,bySeqStore=txn.objectStore(BY_SEQ_STORE),docStore=txn.objectStore(DOC_STORE),docIdRevIndex=bySeqStore.index("_doc_id_rev");var req;req=opts.descending?bySeqStore.openCursor(null,"prev"):bySeqStore.openCursor(IDBKeyRange.lowerBound(opts.since,!0)),req.onsuccess=onsuccess}function onTxnComplete(){function finish(){opts.complete(null,{results:results,last_seq:lastSeq})}!opts.continuous&&opts.attachments?postProcessAttachments(results).then(finish):finish()}if(opts=clone(opts),opts.continuous){var id=dbName+":"+uuid();return idbChanges.addListener(dbName,id,api,opts),idbChanges.notify(dbName),{cancel:function(){idbChanges.removeListener(dbName,id)}}}var docIds=opts.doc_ids&&new pouchdbCollections.Set(opts.doc_ids);opts.since=opts.since||0;var lastSeq=opts.since,limit="limit"in opts?opts.limit:-1;0===limit&&(limit=1);var returnDocs;returnDocs="return_docs"in opts?opts.return_docs:"returnDocs"in opts?opts.returnDocs:!0;var txn,bySeqStore,docStore,docIdRevIndex,results=[],numResults=0,filter=filterChange(opts),docIdsToMetadata=new pouchdbCollections.Map;fetchChanges()},api._close=function(callback){return null===idb?callback(createError(NOT_OPEN)):(idb.close(),cachedDBs["delete"](dbName),idb=null,void callback())},api._getRevisionTree=function(docId,callback){var txnResult=openTransactionSafely(idb,[DOC_STORE],"readonly");if(txnResult.error)return callback(txnResult.error);var txn=txnResult.txn,req=txn.objectStore(DOC_STORE).get(docId);req.onsuccess=function(event){var doc=decodeMetadata(event.target.result);doc?callback(null,doc.rev_tree):callback(createError(MISSING_DOC))}},api._doCompaction=function(docId,revs,callback){var stores=[DOC_STORE,BY_SEQ_STORE,ATTACH_STORE,ATTACH_AND_SEQ_STORE],txnResult=openTransactionSafely(idb,stores,"readwrite");\nif(txnResult.error)return callback(txnResult.error);var txn=txnResult.txn,docStore=txn.objectStore(DOC_STORE);docStore.get(docId).onsuccess=function(event){var metadata=decodeMetadata(event.target.result);traverseRevTree(metadata.rev_tree,function(isLeaf,pos,revHash,ctx,opts){var rev=pos+"-"+revHash;-1!==revs.indexOf(rev)&&(opts.status="missing")}),compactRevs(revs,docId,txn);var winningRev=metadata.winningRev,deleted=metadata.deleted;txn.objectStore(DOC_STORE).put(encodeMetadata(metadata,winningRev,deleted))},txn.onabort=idbError(callback),txn.oncomplete=function(){callback()}},api._getLocal=function(id,callback){var txnResult=openTransactionSafely(idb,[LOCAL_STORE],"readonly");if(txnResult.error)return callback(txnResult.error);var tx=txnResult.txn,req=tx.objectStore(LOCAL_STORE).get(id);req.onerror=idbError(callback),req.onsuccess=function(e){var doc=e.target.result;doc?(delete doc._doc_id_rev,callback(null,doc)):callback(createError(MISSING_DOC))}},api._putLocal=function(doc,opts,callback){"function"==typeof opts&&(callback=opts,opts={}),delete doc._revisions;var oldRev=doc._rev,id=doc._id;oldRev?doc._rev="0-"+(parseInt(oldRev.split("-")[1],10)+1):doc._rev="0-1";var ret,tx=opts.ctx;if(!tx){var txnResult=openTransactionSafely(idb,[LOCAL_STORE],"readwrite");if(txnResult.error)return callback(txnResult.error);tx=txnResult.txn,tx.onerror=idbError(callback),tx.oncomplete=function(){ret&&callback(null,ret)}}var req,oStore=tx.objectStore(LOCAL_STORE);oldRev?(req=oStore.get(id),req.onsuccess=function(e){var oldDoc=e.target.result;if(oldDoc&&oldDoc._rev===oldRev){var req=oStore.put(doc);req.onsuccess=function(){ret={ok:!0,id:doc._id,rev:doc._rev},opts.ctx&&callback(null,ret)}}else callback(createError(REV_CONFLICT))}):(req=oStore.add(doc),req.onerror=function(e){callback(createError(REV_CONFLICT)),e.preventDefault(),e.stopPropagation()},req.onsuccess=function(){ret={ok:!0,id:doc._id,rev:doc._rev},opts.ctx&&callback(null,ret)})},api._removeLocal=function(doc,opts,callback){"function"==typeof opts&&(callback=opts,opts={});var tx=opts.ctx;if(!tx){var txnResult=openTransactionSafely(idb,[LOCAL_STORE],"readwrite");if(txnResult.error)return callback(txnResult.error);tx=txnResult.txn,tx.oncomplete=function(){ret&&callback(null,ret)}}var ret,id=doc._id,oStore=tx.objectStore(LOCAL_STORE),req=oStore.get(id);req.onerror=idbError(callback),req.onsuccess=function(e){var oldDoc=e.target.result;oldDoc&&oldDoc._rev===doc._rev?(oStore["delete"](id),ret={ok:!0,id:id,rev:"0-0"},opts.ctx&&callback(null,ret)):callback(createError(MISSING_DOC))}},api._destroy=function(opts,callback){idbChanges.removeAllListeners(dbName);var openReq=openReqList.get(dbName);openReq&&openReq.result&&(openReq.result.close(),cachedDBs["delete"](dbName));var req=indexedDB.deleteDatabase(dbName);req.onsuccess=function(){openReqList["delete"](dbName),hasLocalStorage()&&dbName in localStorage&&delete localStorage[dbName],callback(null,{ok:!0})},req.onerror=idbError(callback)};var cached=cachedDBs.get(dbName);if(cached)return idb=cached.idb,api._meta=cached.global,void process.nextTick(function(){callback(null,api)});var req;req=opts.storage?tryStorageOption(dbName,opts.storage):indexedDB.open(dbName,ADAPTER_VERSION),openReqList.set(dbName,req),req.onupgradeneeded=function(e){function next(){var migration=migrations[i-1];i++,migration&&migration(txn,next)}var db=e.target.result;if(e.oldVersion<1)return createSchema(db);var txn=e.currentTarget.transaction;e.oldVersion<3&&createLocalStoreSchema(db),e.oldVersion<4&&addAttachAndSeqStore(db);var migrations=[addDeletedOrLocalIndex,migrateLocalStore,migrateAttsAndSeqs,migrateMetadata],i=e.oldVersion;next()},req.onsuccess=function(e){idb=e.target.result,idb.onversionchange=function(){idb.close(),cachedDBs["delete"](dbName)},idb.onabort=function(e){guardedConsole("error","Database has a global failure",e.target.error),idb.close(),cachedDBs["delete"](dbName)};var txn=idb.transaction([META_STORE,DETECT_BLOB_SUPPORT_STORE,DOC_STORE],"readwrite"),req=txn.objectStore(META_STORE).get(META_STORE),blobSupport=null,docCount=null,instanceId=null;req.onsuccess=function(e){var checkSetupComplete=function(){null!==blobSupport&&null!==docCount&&null!==instanceId&&(api._meta={name:dbName,instanceId:instanceId,blobSupport:blobSupport,docCount:docCount},cachedDBs.set(dbName,{idb:idb,global:api._meta}),callback(null,api))},meta=e.target.result||{id:META_STORE};dbName+"_id"in meta?(instanceId=meta[dbName+"_id"],checkSetupComplete()):(instanceId=uuid(),meta[dbName+"_id"]=instanceId,txn.objectStore(META_STORE).put(meta).onsuccess=function(){checkSetupComplete()}),blobSupportPromise||(blobSupportPromise=checkBlobSupport(txn)),blobSupportPromise.then(function(val){blobSupport=val,checkSetupComplete()});var index=txn.objectStore(DOC_STORE).index("deletedOrLocal");index.count(IDBKeyRange.only("0")).onsuccess=function(e){docCount=e.target.result,checkSetupComplete()}}},req.onerror=function(){var msg="Failed to open indexedDB, are you in private browsing mode?";guardedConsole("error",msg),callback(createError(IDB_ERROR,msg))}}function tryStorageOption(dbName,storage){try{return indexedDB.open(dbName,{version:ADAPTER_VERSION,storage:storage})}catch(err){return indexedDB.open(dbName,ADAPTER_VERSION)}}function IDBPouch(PouchDB){PouchDB.adapter("idb",IdbPouch,!0)}function decodeUtf8(str){return decodeURIComponent(escape(str))}function hexToInt(charCode){return 65>charCode?charCode-48:charCode-55}function parseHexUtf8(str,start,end){for(var result="";end>start;)result+=String.fromCharCode(hexToInt(str.charCodeAt(start++))<<4|hexToInt(str.charCodeAt(start++)));return result}function parseHexUtf16(str,start,end){for(var result="";end>start;)result+=String.fromCharCode(hexToInt(str.charCodeAt(start+2))<<12|hexToInt(str.charCodeAt(start+3))<<8|hexToInt(str.charCodeAt(start))<<4|hexToInt(str.charCodeAt(start+1))),start+=4;return result}function parseHexString(str,encoding){return"UTF-8"===encoding?decodeUtf8(parseHexUtf8(str,0,str.length)):parseHexUtf16(str,0,str.length)}function quote(str){return"\'"+str+"\'"}function escapeBlob(str){return str.replace(/\\u0002/g,"").replace(/\\u0001/g,"").replace(/\\u0000/g,"")}function unescapeBlob(str){return str.replace(/\\u0001\\u0001/g,"\\x00").replace(/\\u0001\\u0002/g,"").replace(/\\u0002\\u0002/g,"")}function stringifyDoc(doc){return delete doc._id,delete doc._rev,JSON.stringify(doc)}function unstringifyDoc(doc,id,rev){return doc=JSON.parse(doc),doc._id=id,doc._rev=rev,doc}function qMarks(num){for(var s="(";num--;)s+="?",num&&(s+=",");return s+")"}function select(selector,table,joiner,where,orderBy){return"SELECT "+selector+" FROM "+("string"==typeof table?table:table.join(" JOIN "))+(joiner?" ON "+joiner:"")+(where?" WHERE "+("string"==typeof where?where:where.join(" AND ")):"")+(orderBy?" ORDER BY "+orderBy:"")}function compactRevs$1(revs,docId,tx){function checkDone(){++numDone===revs.length&&deleteOrphans()}function deleteOrphans(){if(seqs.length){var sql="SELECT DISTINCT digest AS digest FROM "+ATTACH_AND_SEQ_STORE$1+" WHERE seq IN "+qMarks(seqs.length);tx.executeSql(sql,seqs,function(tx,res){for(var digestsToCheck=[],i=0;i<res.rows.length;i++)digestsToCheck.push(res.rows.item(i).digest);if(digestsToCheck.length){var sql="DELETE FROM "+ATTACH_AND_SEQ_STORE$1+" WHERE seq IN ("+seqs.map(function(){return"?"}).join(",")+")";tx.executeSql(sql,seqs,function(tx){var sql="SELECT digest FROM "+ATTACH_AND_SEQ_STORE$1+" WHERE digest IN ("+digestsToCheck.map(function(){return"?"}).join(",")+")";tx.executeSql(sql,digestsToCheck,function(tx,res){for(var nonOrphanedDigests=new pouchdbCollections.Set,i=0;i<res.rows.length;i++)nonOrphanedDigests.add(res.rows.item(i).digest);digestsToCheck.forEach(function(digest){nonOrphanedDigests.has(digest)||(tx.executeSql("DELETE FROM "+ATTACH_AND_SEQ_STORE$1+" WHERE digest=?",[digest]),tx.executeSql("DELETE FROM "+ATTACH_STORE$1+" WHERE digest=?",[digest]))})})})}})}}if(revs.length){var numDone=0,seqs=[];revs.forEach(function(rev){var sql="SELECT seq FROM "+BY_SEQ_STORE$1+" WHERE doc_id=? AND rev=?";tx.executeSql(sql,[docId,rev],function(tx,res){if(!res.rows.length)return checkDone();var seq=res.rows.item(0).seq;seqs.push(seq),tx.executeSql("DELETE FROM "+BY_SEQ_STORE$1+" WHERE seq=?",[seq],checkDone)})})}}function websqlError(callback){return function(event){guardedConsole("error","WebSQL threw an error",event);var errorNameMatch=event&&event.constructor.toString().match(/function ([^\\(]+)/),errorName=errorNameMatch&&errorNameMatch[1]||event.type,errorReason=event.target||event.message;callback(createError(WSQ_ERROR,errorReason,errorName))}}function getSize(opts){if("size"in opts)return 1e6*opts.size;var isAndroid="undefined"!=typeof navigator&&/Android/.test(navigator.userAgent);return isAndroid?5e6:1}function websqlBulkDocs(dbOpts,req,opts,api,db,websqlChanges,callback){function complete(){return preconditionErrored?callback(preconditionErrored):(websqlChanges.notify(api._name),api._docCount=-1,void callback(null,results))}function verifyAttachment(digest,callback){var sql="SELECT count(*) as cnt FROM "+ATTACH_STORE$1+" WHERE digest=?";tx.executeSql(sql,[digest],function(tx,result){if(0===result.rows.item(0).cnt){var err=createError(MISSING_STUB,"unknown stub attachment with digest "+digest);callback(err)}else callback()})}function verifyAttachments(finish){function checkDone(){++numDone===digests.length&&finish(err)}var digests=[];if(docInfos.forEach(function(docInfo){docInfo.data&&docInfo.data._attachments&&Object.keys(docInfo.data._attachments).forEach(function(filename){var att=docInfo.data._attachments[filename];att.stub&&digests.push(att.digest)})}),!digests.length)return finish();var err,numDone=0;digests.forEach(function(digest){verifyAttachment(digest,function(attErr){attErr&&!err&&(err=attErr),checkDone()})})}function writeDoc(docInfo,winningRev,winningRevIsDeleted,newRevIsDeleted,isUpdate,delta,resultsIdx,callback){function finish(){function insertAttachmentMappings(seq,callback){function checkDone(){return++attsAdded===attsToAdd.length&&callback(),!1}function add(att){var sql="INSERT INTO "+ATTACH_AND_SEQ_STORE$1+" (digest, seq) VALUES (?,?)",sqlArgs=[data._attachments[att].digest,seq];tx.executeSql(sql,sqlArgs,checkDone,checkDone)}var attsAdded=0,attsToAdd=Object.keys(data._attachments||{});if(!attsToAdd.length)return callback();for(var i=0;i<attsToAdd.length;i++)add(attsToAdd[i])}var data=docInfo.data,deletedInt=newRevIsDeleted?1:0,id=data._id,rev=data._rev,json=stringifyDoc(data),sql="INSERT INTO "+BY_SEQ_STORE$1+" (doc_id, rev, json, deleted) VALUES (?, ?, ?, ?);",sqlArgs=[id,rev,json,deletedInt];tx.executeSql(sql,sqlArgs,function(tx,result){var seq=result.insertId;insertAttachmentMappings(seq,function(){dataWritten(tx,seq)})},function(){var fetchSql=select("seq",BY_SEQ_STORE$1,null,"doc_id=? AND rev=?");return tx.executeSql(fetchSql,[id,rev],function(tx,res){var seq=res.rows.item(0).seq,sql="UPDATE "+BY_SEQ_STORE$1+" SET json=?, deleted=? WHERE doc_id=? AND rev=?;",sqlArgs=[json,deletedInt,id,rev];tx.executeSql(sql,sqlArgs,function(tx){insertAttachmentMappings(seq,function(){dataWritten(tx,seq)})})}),!1})}function collectResults(attachmentErr){err||(attachmentErr?(err=attachmentErr,callback(err)):recv===attachments.length&&finish())}function attachmentSaved(err){recv++,collectResults(err)}function dataWritten(tx,seq){var id=docInfo.metadata.id,revsToCompact=docInfo.stemmedRevs||[];isUpdate&&api.auto_compaction&&(revsToCompact=compactTree(docInfo.metadata).concat(revsToCompact)),revsToCompact.length&&compactRevs$1(revsToCompact,id,tx),docInfo.metadata.seq=seq,delete docInfo.metadata.rev;var sql=isUpdate?"UPDATE "+DOC_STORE$1+" SET json=?, max_seq=?, winningseq=(SELECT seq FROM "+BY_SEQ_STORE$1+" WHERE doc_id="+DOC_STORE$1+".id AND rev=?) WHERE id=?":"INSERT INTO "+DOC_STORE$1+" (id, winningseq, max_seq, json) VALUES (?,?,?,?);",metadataStr=safeJsonStringify(docInfo.metadata),params=isUpdate?[metadataStr,seq,winningRev,id]:[id,seq,seq,metadataStr];tx.executeSql(sql,params,function(){results[resultsIdx]={ok:!0,id:docInfo.metadata.id,rev:winningRev},fetchedDocs.set(id,docInfo.metadata),callback()})}var err=null,recv=0;docInfo.data._id=docInfo.metadata.id,docInfo.data._rev=docInfo.metadata.rev;var attachments=Object.keys(docInfo.data._attachments||{});newRevIsDeleted&&(docInfo.data._deleted=!0),attachments.forEach(function(key){var att=docInfo.data._attachments[key];if(att.stub)recv++,collectResults();else{var data=att.data;delete att.data,att.revpos=parseInt(winningRev,10);var digest=att.digest;saveAttachment(digest,data,attachmentSaved)}}),attachments.length||finish()}function websqlProcessDocs(){processDocs(dbOpts.revs_limit,docInfos,api,fetchedDocs,tx,results,writeDoc,opts)}function fetchExistingDocs(callback){function checkDone(){++numFetched===docInfos.length&&callback()}if(!docInfos.length)return callback();var numFetched=0;docInfos.forEach(function(docInfo){if(docInfo._id&&isLocalId(docInfo._id))return checkDone();var id=docInfo.metadata.id;tx.executeSql("SELECT json FROM "+DOC_STORE$1+" WHERE id = ?",[id],function(tx,result){if(result.rows.length){var metadata=safeJsonParse(result.rows.item(0).json);fetchedDocs.set(id,metadata)}checkDone()})})}function saveAttachment(digest,data,callback){var sql="SELECT digest FROM "+ATTACH_STORE$1+" WHERE digest=?";tx.executeSql(sql,[digest],function(tx,result){return result.rows.length?callback():(sql="INSERT INTO "+ATTACH_STORE$1+" (digest, body, escaped) VALUES (?,?,1)",void tx.executeSql(sql,[digest,escapeBlob(data)],function(){callback()},function(){return callback(),!1}))})}var newEdits=opts.new_edits,userDocs=req.docs,docInfos=userDocs.map(function(doc){if(doc._id&&isLocalId(doc._id))return doc;var newDoc=parseDoc(doc,newEdits);return newDoc}),docInfoErrors=docInfos.filter(function(docInfo){return docInfo.error});if(docInfoErrors.length)return callback(docInfoErrors[0]);var tx,preconditionErrored,results=new Array(docInfos.length),fetchedDocs=new pouchdbCollections.Map;preprocessAttachments(docInfos,"binary",function(err){return err?callback(err):void db.transaction(function(txn){tx=txn,verifyAttachments(function(err){err?preconditionErrored=err:fetchExistingDocs(websqlProcessDocs)})},websqlError(callback),complete)})}function openDatabaseWithOpts(opts){return opts.websql(opts.name,opts.version,opts.description,opts.size)}function openDBSafely(opts){try{return{db:openDatabaseWithOpts(opts)}}catch(err){return{error:err}}}function openDB(opts){var cachedResult=cachedDatabases.get(opts.name);return cachedResult||(cachedResult=openDBSafely(opts),cachedDatabases.set(opts.name,cachedResult),cachedResult.db&&(cachedResult.db._sqlitePlugin="undefined"!=typeof sqlitePlugin)),cachedResult}function fetchAttachmentsIfNecessary$1(doc,opts,api,txn,cb){function checkDone(){++numDone===attachments.length&&cb&&cb()}function fetchAttachment(doc,att){var attObj=doc._attachments[att],attOpts={binary:opts.binary,ctx:txn};api._getAttachment(doc._id,att,attObj,attOpts,function(_,data){doc._attachments[att]=jsExtend.extend(pick(attObj,["digest","content_type"]),{data:data}),checkDone()})}var attachments=Object.keys(doc._attachments||{});if(!attachments.length)return cb&&cb();var numDone=0;attachments.forEach(function(att){opts.attachments&&opts.include_docs?fetchAttachment(doc,att):(doc._attachments[att].stub=!0,checkDone())})}function WebSqlPouch$1(opts,callback){function dbCreated(){hasLocalStorage()&&(window.localStorage["_pouch__websqldb_"+api._name]=!0),callback(null,api)}function runMigration2(tx,callback){tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL),tx.executeSql("ALTER TABLE "+BY_SEQ_STORE$1+" ADD COLUMN deleted TINYINT(1) DEFAULT 0",[],function(){tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL),tx.executeSql("ALTER TABLE "+DOC_STORE$1+" ADD COLUMN local TINYINT(1) DEFAULT 0",[],function(){tx.executeSql("CREATE INDEX IF NOT EXISTS \'doc-store-local-idx\' ON "+DOC_STORE$1+" (local, id)");var sql="SELECT "+DOC_STORE$1+".winningseq AS seq, "+DOC_STORE$1+".json AS metadata FROM "+BY_SEQ_STORE$1+" JOIN "+DOC_STORE$1+" ON "+BY_SEQ_STORE$1+".seq = "+DOC_STORE$1+".winningseq";tx.executeSql(sql,[],function(tx,result){for(var deleted=[],local=[],i=0;i<result.rows.length;i++){var item=result.rows.item(i),seq=item.seq,metadata=JSON.parse(item.metadata);isDeleted(metadata)&&deleted.push(seq),isLocalId(metadata.id)&&local.push(metadata.id)}tx.executeSql("UPDATE "+DOC_STORE$1+"SET local = 1 WHERE id IN "+qMarks(local.length),local,function(){tx.executeSql("UPDATE "+BY_SEQ_STORE$1+" SET deleted = 1 WHERE seq IN "+qMarks(deleted.length),deleted,callback)})})})})}function runMigration3(tx,callback){var local="CREATE TABLE IF NOT EXISTS "+LOCAL_STORE$1+" (id UNIQUE, rev, json)";tx.executeSql(local,[],function(){var sql="SELECT "+DOC_STORE$1+".id AS id, "+BY_SEQ_STORE$1+".json AS data FROM "+BY_SEQ_STORE$1+" JOIN "+DOC_STORE$1+" ON "+BY_SEQ_STORE$1+".seq = "+DOC_STORE$1+".winningseq WHERE local = 1";tx.executeSql(sql,[],function(tx,res){function doNext(){if(!rows.length)return callback(tx);var row=rows.shift(),rev=JSON.parse(row.data)._rev;tx.executeSql("INSERT INTO "+LOCAL_STORE$1+" (id, rev, json) VALUES (?,?,?)",[row.id,rev,row.data],function(tx){tx.executeSql("DELETE FROM "+DOC_STORE$1+" WHERE id=?",[row.id],function(tx){tx.executeSql("DELETE FROM "+BY_SEQ_STORE$1+" WHERE seq=?",[row.seq],function(){doNext()})})})}for(var rows=[],i=0;i<res.rows.length;i++)rows.push(res.rows.item(i));doNext()})})}function runMigration4(tx,callback){function updateRows(rows){function doNext(){if(!rows.length)return callback(tx);var row=rows.shift(),doc_id_rev=parseHexString(row.hex,encoding),idx=doc_id_rev.lastIndexOf("::"),doc_id=doc_id_rev.substring(0,idx),rev=doc_id_rev.substring(idx+2),sql="UPDATE "+BY_SEQ_STORE$1+" SET doc_id=?, rev=? WHERE doc_id_rev=?";tx.executeSql(sql,[doc_id,rev,doc_id_rev],function(){doNext()})}doNext()}var sql="ALTER TABLE "+BY_SEQ_STORE$1+" ADD COLUMN doc_id";tx.executeSql(sql,[],function(tx){var sql="ALTER TABLE "+BY_SEQ_STORE$1+" ADD COLUMN rev";tx.executeSql(sql,[],function(tx){tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL,[],function(tx){var sql="SELECT hex(doc_id_rev) as hex FROM "+BY_SEQ_STORE$1;tx.executeSql(sql,[],function(tx,res){for(var rows=[],i=0;i<res.rows.length;i++)rows.push(res.rows.item(i));updateRows(rows)})})})})}function runMigration5(tx,callback){function migrateAttsAndSeqs(tx){var sql="SELECT COUNT(*) AS cnt FROM "+ATTACH_STORE$1;tx.executeSql(sql,[],function(tx,res){function nextPage(){var sql=select(SELECT_DOCS+", "+DOC_STORE$1+".id AS id",[DOC_STORE$1,BY_SEQ_STORE$1],DOC_STORE_AND_BY_SEQ_JOINER,null,DOC_STORE$1+".id ");sql+=" LIMIT "+pageSize+" OFFSET "+offset,offset+=pageSize,tx.executeSql(sql,[],function(tx,res){function addDigestSeq(digest,seq){var seqs=digestSeqs[digest]=digestSeqs[digest]||[];-1===seqs.indexOf(seq)&&seqs.push(seq)}if(!res.rows.length)return callback(tx);for(var digestSeqs={},i=0;i<res.rows.length;i++)for(var row=res.rows.item(i),doc=unstringifyDoc(row.data,row.id,row.rev),atts=Object.keys(doc._attachments||{}),j=0;j<atts.length;j++){var att=doc._attachments[atts[j]];addDigestSeq(att.digest,row.seq)}var digestSeqPairs=[];if(Object.keys(digestSeqs).forEach(function(digest){var seqs=digestSeqs[digest];seqs.forEach(function(seq){digestSeqPairs.push([digest,seq])})}),!digestSeqPairs.length)return nextPage();var numDone=0;digestSeqPairs.forEach(function(pair){var sql="INSERT INTO "+ATTACH_AND_SEQ_STORE$1+" (digest, seq) VALUES (?,?)";tx.executeSql(sql,pair,function(){++numDone===digestSeqPairs.length&&nextPage()})})})}var count=res.rows.item(0).cnt;if(!count)return callback(tx);var offset=0,pageSize=10;nextPage()})}var attachAndRev="CREATE TABLE IF NOT EXISTS "+ATTACH_AND_SEQ_STORE$1+" (digest, seq INTEGER)";tx.executeSql(attachAndRev,[],function(tx){tx.executeSql(ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL,[],function(tx){tx.executeSql(ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL,[],migrateAttsAndSeqs)})})}function runMigration6(tx,callback){var sql="ALTER TABLE "+ATTACH_STORE$1+" ADD COLUMN escaped TINYINT(1) DEFAULT 0";tx.executeSql(sql,[],callback)}function runMigration7(tx,callback){var sql="ALTER TABLE "+DOC_STORE$1+" ADD COLUMN max_seq INTEGER";tx.executeSql(sql,[],function(tx){var sql="UPDATE "+DOC_STORE$1+" SET max_seq=(SELECT MAX(seq) FROM "+BY_SEQ_STORE$1+" WHERE doc_id=id)";tx.executeSql(sql,[],function(tx){var sql="CREATE UNIQUE INDEX IF NOT EXISTS \'doc-max-seq-idx\' ON "+DOC_STORE$1+" (max_seq)";tx.executeSql(sql,[],callback)})})}function checkEncoding(tx,cb){tx.executeSql(\'SELECT HEX("a") AS hex\',[],function(tx,res){var hex=res.rows.item(0).hex;encoding=2===hex.length?"UTF-8":"UTF-16",cb()})}function onGetInstanceId(){for(;idRequests.length>0;){var idCallback=idRequests.pop();idCallback(null,instanceId)}}function onGetVersion(tx,dbVersion){if(0===dbVersion){var meta="CREATE TABLE IF NOT EXISTS "+META_STORE$1+" (dbid, db_version INTEGER)",attach="CREATE TABLE IF NOT EXISTS "+ATTACH_STORE$1+" (digest UNIQUE, escaped TINYINT(1), body BLOB)",attachAndRev="CREATE TABLE IF NOT EXISTS "+ATTACH_AND_SEQ_STORE$1+" (digest, seq INTEGER)",doc="CREATE TABLE IF NOT EXISTS "+DOC_STORE$1+" (id unique, json, winningseq, max_seq INTEGER UNIQUE)",seq="CREATE TABLE IF NOT EXISTS "+BY_SEQ_STORE$1+" (seq INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, json, deleted TINYINT(1), doc_id, rev)",local="CREATE TABLE IF NOT EXISTS "+LOCAL_STORE$1+" (id UNIQUE, rev, json)";tx.executeSql(attach),tx.executeSql(local),tx.executeSql(attachAndRev,[],function(){tx.executeSql(ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL),tx.executeSql(ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL)}),tx.executeSql(doc,[],function(){tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL),tx.executeSql(seq,[],function(){tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL),tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL),tx.executeSql(meta,[],function(){var initSeq="INSERT INTO "+META_STORE$1+" (db_version, dbid) VALUES (?,?)";instanceId=uuid();var initSeqArgs=[ADAPTER_VERSION$1,instanceId];tx.executeSql(initSeq,initSeqArgs,function(){onGetInstanceId()})})})})}else{var setupDone=function(){var migrated=ADAPTER_VERSION$1>dbVersion;migrated&&tx.executeSql("UPDATE "+META_STORE$1+" SET db_version = "+ADAPTER_VERSION$1);var sql="SELECT dbid FROM "+META_STORE$1;tx.executeSql(sql,[],function(tx,result){instanceId=result.rows.item(0).dbid,onGetInstanceId()})},tasks=[runMigration2,runMigration3,runMigration4,runMigration5,runMigration6,runMigration7,setupDone],i=dbVersion,nextMigration=function(tx){tasks[i-1](tx,nextMigration),i++};nextMigration(tx)}}function setup(){db.transaction(function(tx){checkEncoding(tx,function(){fetchVersion(tx)})},websqlError(callback),dbCreated)}function fetchVersion(tx){var sql="SELECT sql FROM sqlite_master WHERE tbl_name = "+META_STORE$1;tx.executeSql(sql,[],function(tx,result){result.rows.length?/db_version/.test(result.rows.item(0).sql)?tx.executeSql("SELECT db_version FROM "+META_STORE$1,[],function(tx,result){var dbVersion=result.rows.item(0).db_version;onGetVersion(tx,dbVersion)}):tx.executeSql("ALTER TABLE "+META_STORE$1+" ADD COLUMN db_version INTEGER",[],function(){onGetVersion(tx,1)}):onGetVersion(tx,0)})}function countDocs(tx,callback){if(-1!==api._docCount)return callback(api._docCount);var sql=select("COUNT("+DOC_STORE$1+".id) AS \'num\'",[DOC_STORE$1,BY_SEQ_STORE$1],DOC_STORE_AND_BY_SEQ_JOINER,BY_SEQ_STORE$1+".deleted=0");tx.executeSql(sql,[],function(tx,result){api._docCount=result.rows.item(0).num,callback(api._docCount)})}var encoding,api=this,instanceId=null,size=getSize(opts),idRequests=[];api._docCount=-1,api._name=opts.name;var websqlOpts=jsExtend.extend({},opts,{version:POUCH_VERSION,description:opts.name,size:size}),openDBResult=openDB(websqlOpts);if(openDBResult.error)return websqlError(callback)(openDBResult.error);var db=openDBResult.db;"function"!=typeof db.readTransaction&&(db.readTransaction=db.transaction),setup(),api.type=function(){return"websql"},api._id=toPromise(function(callback){callback(null,instanceId)}),api._info=function(callback){db.readTransaction(function(tx){countDocs(tx,function(docCount){var sql="SELECT MAX(seq) AS seq FROM "+BY_SEQ_STORE$1;tx.executeSql(sql,[],function(tx,res){var updateSeq=res.rows.item(0).seq||0;callback(null,{doc_count:docCount,update_seq:updateSeq,sqlite_plugin:db._sqlitePlugin,websql_encoding:encoding})})})},websqlError(callback))},api._bulkDocs=function(req,reqOpts,callback){websqlBulkDocs(opts,req,reqOpts,api,db,websqlChanges,callback)},api._get=function(id,opts,callback){function finish(){callback(err,{doc:doc,metadata:metadata,ctx:tx})}var doc,metadata,err,tx=opts.ctx;if(!tx)return db.readTransaction(function(txn){api._get(id,jsExtend.extend({ctx:txn},opts),callback)});var sql,sqlArgs;opts.rev?(sql=select(SELECT_DOCS,[DOC_STORE$1,BY_SEQ_STORE$1],DOC_STORE$1+".id="+BY_SEQ_STORE$1+".doc_id",[BY_SEQ_STORE$1+".doc_id=?",BY_SEQ_STORE$1+".rev=?"]),sqlArgs=[id,opts.rev]):(sql=select(SELECT_DOCS,[DOC_STORE$1,BY_SEQ_STORE$1],DOC_STORE_AND_BY_SEQ_JOINER,DOC_STORE$1+".id=?"),sqlArgs=[id]),tx.executeSql(sql,sqlArgs,function(a,results){if(!results.rows.length)return err=createError(MISSING_DOC,"missing"),finish();var item=results.rows.item(0);return metadata=safeJsonParse(item.metadata),item.deleted&&!opts.rev?(err=createError(MISSING_DOC,"deleted"),finish()):(doc=unstringifyDoc(item.data,metadata.id,item.rev),void finish())})},api._allDocs=function(opts,callback){var totalRows,results=[],start="startkey"in opts?opts.startkey:!1,end="endkey"in opts?opts.endkey:!1,key="key"in opts?opts.key:!1,descending="descending"in opts?opts.descending:!1,limit="limit"in opts?opts.limit:-1,offset="skip"in opts?opts.skip:0,inclusiveEnd=opts.inclusive_end!==!1,sqlArgs=[],criteria=[];if(key!==!1)criteria.push(DOC_STORE$1+".id = ?"),sqlArgs.push(key);else if(start!==!1||end!==!1){if(start!==!1&&(criteria.push(DOC_STORE$1+".id "+(descending?"<=":">=")+" ?"),sqlArgs.push(start)),end!==!1){var comparator=descending?">":"<";inclusiveEnd&&(comparator+="="),criteria.push(DOC_STORE$1+".id "+comparator+" ?"),sqlArgs.push(end)}key!==!1&&(criteria.push(DOC_STORE$1+".id = ?"),sqlArgs.push(key))}"ok"!==opts.deleted&&criteria.push(BY_SEQ_STORE$1+".deleted = 0"),db.readTransaction(function(tx){countDocs(tx,function(count){if(totalRows=count,0!==limit){var sql=select(SELECT_DOCS,[DOC_STORE$1,BY_SEQ_STORE$1],DOC_STORE_AND_BY_SEQ_JOINER,criteria,DOC_STORE$1+".id "+(descending?"DESC":"ASC"));sql+=" LIMIT "+limit+" OFFSET "+offset,tx.executeSql(sql,sqlArgs,function(tx,result){for(var i=0,l=result.rows.length;l>i;i++){var item=result.rows.item(i),metadata=safeJsonParse(item.metadata),id=metadata.id,data=unstringifyDoc(item.data,id,item.rev),winningRev=data._rev,doc={id:id,key:id,value:{rev:winningRev}};if(opts.include_docs&&(doc.doc=data,doc.doc._rev=winningRev,opts.conflicts&&(doc.doc._conflicts=collectConflicts(metadata)),fetchAttachmentsIfNecessary$1(doc.doc,opts,api,tx)),item.deleted){if("ok"!==opts.deleted)continue;doc.value.deleted=!0,doc.doc=null}results.push(doc)}})}})},websqlError(callback),function(){callback(null,{total_rows:totalRows,offset:opts.skip,rows:results})})},api._changes=function(opts){function fetchChanges(){var selectStmt=DOC_STORE$1+".json AS metadata, "+DOC_STORE$1+".max_seq AS maxSeq, "+BY_SEQ_STORE$1+".json AS winningDoc, "+BY_SEQ_STORE$1+".rev AS winningRev ",from=DOC_STORE$1+" JOIN "+BY_SEQ_STORE$1,joiner=DOC_STORE$1+".id="+BY_SEQ_STORE$1+".doc_id AND "+DOC_STORE$1+".winningseq="+BY_SEQ_STORE$1+".seq",criteria=["maxSeq > ?"],sqlArgs=[opts.since];opts.doc_ids&&(criteria.push(DOC_STORE$1+".id IN "+qMarks(opts.doc_ids.length)),sqlArgs=sqlArgs.concat(opts.doc_ids));var orderBy="maxSeq "+(descending?"DESC":"ASC"),sql=select(selectStmt,from,joiner,criteria,orderBy),filter=filterChange(opts);opts.view||opts.filter||(sql+=" LIMIT "+limit);var lastSeq=opts.since||0;db.readTransaction(function(tx){tx.executeSql(sql,sqlArgs,function(tx,result){function reportChange(change){return function(){opts.onChange(change)}}for(var i=0,l=result.rows.length;l>i;i++){var item=result.rows.item(i),metadata=safeJsonParse(item.metadata);lastSeq=item.maxSeq;var doc=unstringifyDoc(item.winningDoc,metadata.id,item.winningRev),change=opts.processChange(doc,metadata,opts);change.seq=item.maxSeq;var filtered=filter(change);if("object"==typeof filtered)return opts.complete(filtered);if(filtered&&(numResults++,returnDocs&&results.push(change),opts.attachments&&opts.include_docs?fetchAttachmentsIfNecessary$1(doc,opts,api,tx,reportChange(change)):reportChange(change)()),numResults===limit)break}})},websqlError(opts.complete),function(){opts.continuous||opts.complete(null,{results:results,last_seq:lastSeq})})}if(opts=clone(opts),opts.continuous){var id=api._name+":"+uuid();return websqlChanges.addListener(api._name,id,api,opts),websqlChanges.notify(api._name),{cancel:function(){websqlChanges.removeListener(api._name,id)}}}var descending=opts.descending;opts.since=opts.since&&!descending?opts.since:0;var limit="limit"in opts?opts.limit:-1;0===limit&&(limit=1);var returnDocs;returnDocs="return_docs"in opts?opts.return_docs:"returnDocs"in opts?opts.returnDocs:!0;var results=[],numResults=0;fetchChanges()},api._close=function(callback){callback()},api._getAttachment=function(docId,attachId,attachment,opts,callback){var res,tx=opts.ctx,digest=attachment.digest,type=attachment.content_type,sql="SELECT escaped, CASE WHEN escaped = 1 THEN body ELSE HEX(body) END AS body FROM "+ATTACH_STORE$1+" WHERE digest=?";tx.executeSql(sql,[digest],function(tx,result){var item=result.rows.item(0),data=item.escaped?unescapeBlob(item.body):parseHexString(item.body,encoding);res=opts.binary?binStringToBluffer(data,type):btoa$1(data),callback(null,res)})},api._getRevisionTree=function(docId,callback){db.readTransaction(function(tx){var sql="SELECT json AS metadata FROM "+DOC_STORE$1+" WHERE id = ?";tx.executeSql(sql,[docId],function(tx,result){if(result.rows.length){var data=safeJsonParse(result.rows.item(0).metadata);callback(null,data.rev_tree)}else callback(createError(MISSING_DOC))})})},api._doCompaction=function(docId,revs,callback){return revs.length?void db.transaction(function(tx){var sql="SELECT json AS metadata FROM "+DOC_STORE$1+" WHERE id = ?";tx.executeSql(sql,[docId],function(tx,result){var metadata=safeJsonParse(result.rows.item(0).metadata);traverseRevTree(metadata.rev_tree,function(isLeaf,pos,revHash,ctx,opts){var rev=pos+"-"+revHash;-1!==revs.indexOf(rev)&&(opts.status="missing")});var sql="UPDATE "+DOC_STORE$1+" SET json = ? WHERE id = ?";tx.executeSql(sql,[safeJsonStringify(metadata),docId])}),compactRevs$1(revs,docId,tx)},websqlError(callback),function(){callback()}):callback()},api._getLocal=function(id,callback){db.readTransaction(function(tx){var sql="SELECT json, rev FROM "+LOCAL_STORE$1+" WHERE id=?";tx.executeSql(sql,[id],function(tx,res){if(res.rows.length){var item=res.rows.item(0),doc=unstringifyDoc(item.json,id,item.rev);callback(null,doc)}else callback(createError(MISSING_DOC))})})},api._putLocal=function(doc,opts,callback){function putLocal(tx){var sql,values;oldRev?(sql="UPDATE "+LOCAL_STORE$1+" SET rev=?, json=? WHERE id=? AND rev=?",values=[newRev,json,id,oldRev]):(sql="INSERT INTO "+LOCAL_STORE$1+" (id, rev, json) VALUES (?,?,?)",values=[id,newRev,json]),tx.executeSql(sql,values,function(tx,res){res.rowsAffected?(ret={ok:!0,id:id,rev:newRev},opts.ctx&&callback(null,ret)):callback(createError(REV_CONFLICT))},function(){return callback(createError(REV_CONFLICT)),!1})}"function"==typeof opts&&(callback=opts,opts={}),delete doc._revisions;var newRev,oldRev=doc._rev,id=doc._id;newRev=oldRev?doc._rev="0-"+(parseInt(oldRev.split("-")[1],10)+1):doc._rev="0-1";var ret,json=stringifyDoc(doc);opts.ctx?putLocal(opts.ctx):db.transaction(putLocal,websqlError(callback),function(){ret&&callback(null,ret)})},api._removeLocal=function(doc,opts,callback){function removeLocal(tx){var sql="DELETE FROM "+LOCAL_STORE$1+" WHERE id=? AND rev=?",params=[doc._id,doc._rev];\ntx.executeSql(sql,params,function(tx,res){return res.rowsAffected?(ret={ok:!0,id:doc._id,rev:"0-0"},void(opts.ctx&&callback(null,ret))):callback(createError(MISSING_DOC))})}"function"==typeof opts&&(callback=opts,opts={});var ret;opts.ctx?removeLocal(opts.ctx):db.transaction(removeLocal,websqlError(callback),function(){ret&&callback(null,ret)})},api._destroy=function(opts,callback){websqlChanges.removeAllListeners(api._name),db.transaction(function(tx){var stores=[DOC_STORE$1,BY_SEQ_STORE$1,ATTACH_STORE$1,META_STORE$1,LOCAL_STORE$1,ATTACH_AND_SEQ_STORE$1];stores.forEach(function(store){tx.executeSql("DROP TABLE IF EXISTS "+store,[])})},websqlError(callback),function(){hasLocalStorage()&&(delete window.localStorage["_pouch__websqldb_"+api._name],delete window.localStorage[api._name]),callback(null,{ok:!0})})}}function canOpenTestDB(){try{return openDatabase("_pouch_validate_websql",1,"",1),!0}catch(err){return!1}}function isValidWebSQL(){if("undefined"==typeof indexedDB||null===indexedDB||!/iP(hone|od|ad)/.test(navigator.userAgent))return!0;var hasLS=hasLocalStorage(),localStorageKey="_pouch__websqldb_valid_"+navigator.userAgent;if(hasLS&&localStorage[localStorageKey])return"1"===localStorage[localStorageKey];var openedTestDB=canOpenTestDB();return hasLS&&(localStorage[localStorageKey]=openedTestDB?"1":"0"),openedTestDB}function validWithoutCheckingCordova(){return"undefined"==typeof openDatabase?!1:"undefined"!=typeof sqlitePlugin?!0:isValidWebSQL()}function valid(){return"undefined"!=typeof cordova?!0:validWithoutCheckingCordova()}function createOpenDBFunction(opts){return function(name,version,description,size){if("undefined"!=typeof sqlitePlugin){var sqlitePluginOpts=jsExtend.extend({},opts,{name:name,version:version,description:description,size:size});return sqlitePlugin.openDatabase(sqlitePluginOpts)}return openDatabase(name,version,description,size)}}function WebSQLPouch(opts,callback){var websql=createOpenDBFunction(opts),_opts=jsExtend.extend({websql:websql},opts);"undefined"==typeof cordova||validWithoutCheckingCordova()||guardedConsole("error","PouchDB error: you must install a SQLite plugin in order for PouchDB to work on this platform. Options:\\n - https://github.com/nolanlawson/cordova-plugin-sqlite-2\\n - https://github.com/litehelpers/Cordova-sqlite-storage\\n - https://github.com/Microsoft/cordova-plugin-websql"),WebSqlPouch$1.call(this,_opts,callback)}function WebSqlPouch(PouchDB){PouchDB.adapter("websql",WebSQLPouch,!0)}function wrappedFetch(){for(var wrappedPromise={},promise=new PouchPromise(function(resolve,reject){wrappedPromise.resolve=resolve,wrappedPromise.reject=reject}),args=new Array(arguments.length),i=0;i<args.length;i++)args[i]=arguments[i];return wrappedPromise.promise=promise,PouchPromise.resolve().then(function(){return fetch.apply(null,args)}).then(function(response){wrappedPromise.resolve(response)})["catch"](function(error){wrappedPromise.reject(error)}),wrappedPromise}function fetchRequest(options,callback){var wrappedPromise,timer,response,headers=new Headers,fetchOptions={method:options.method,credentials:"include",headers:headers};return options.json&&(headers.set("Accept","application/json"),headers.set("Content-Type",options.headers["Content-Type"]||"application/json")),options.body&&options.body instanceof Blob?readAsArrayBuffer(options.body,function(arrayBuffer){fetchOptions.body=arrayBuffer}):options.body&&options.processData&&"string"!=typeof options.body?fetchOptions.body=JSON.stringify(options.body):"body"in options?fetchOptions.body=options.body:fetchOptions.body=null,Object.keys(options.headers).forEach(function(key){options.headers.hasOwnProperty(key)&&headers.set(key,options.headers[key])}),wrappedPromise=wrappedFetch(options.url,fetchOptions),options.timeout>0&&(timer=setTimeout(function(){wrappedPromise.reject(new Error("Load timeout for resource: "+options.url))},options.timeout)),wrappedPromise.promise.then(function(fetchResponse){return response={statusCode:fetchResponse.status},options.timeout>0&&clearTimeout(timer),response.statusCode>=200&&response.statusCode<300?options.binary?fetchResponse.blob():fetchResponse.text():fetchResponse.json()}).then(function(result){response.statusCode>=200&&response.statusCode<300?callback(null,response,result):callback(result,response)})["catch"](function(error){callback(error,response)}),{abort:wrappedPromise.reject}}function xhRequest(options,callback){var xhr,timer,timedout=!1,abortReq=function(){xhr.abort()},timeoutReq=function(){timedout=!0,xhr.abort()};xhr=options.xhr?new options.xhr:new XMLHttpRequest;try{xhr.open(options.method,options.url)}catch(exception){return callback(new Error(exception.name||"Url is invalid"))}xhr.withCredentials="withCredentials"in options?options.withCredentials:!0,"GET"===options.method?delete options.headers["Content-Type"]:options.json&&(options.headers.Accept="application/json",options.headers["Content-Type"]=options.headers["Content-Type"]||"application/json",options.body&&options.processData&&"string"!=typeof options.body&&(options.body=JSON.stringify(options.body))),options.binary&&(xhr.responseType="arraybuffer"),"body"in options||(options.body=null);for(var key in options.headers)options.headers.hasOwnProperty(key)&&xhr.setRequestHeader(key,options.headers[key]);return options.timeout>0&&(timer=setTimeout(timeoutReq,options.timeout),xhr.onprogress=function(){clearTimeout(timer),4!==xhr.readyState&&(timer=setTimeout(timeoutReq,options.timeout))},"undefined"!=typeof xhr.upload&&(xhr.upload.onprogress=xhr.onprogress)),xhr.onreadystatechange=function(){if(4===xhr.readyState){var response={statusCode:xhr.status};if(xhr.status>=200&&xhr.status<300){var data;data=options.binary?createBlob([xhr.response||""],{type:xhr.getResponseHeader("Content-Type")}):xhr.responseText,callback(null,response,data)}else{var err={};if(timedout)err=new Error("ETIMEDOUT"),err.code="ETIMEDOUT";else try{err=JSON.parse(xhr.response)}catch(e){}err.status=xhr.status,callback(err)}}},options.body&&options.body instanceof Blob?readAsArrayBuffer(options.body,function(arrayBuffer){xhr.send(arrayBuffer)}):xhr.send(options.body),{abort:abortReq}}function testXhr(){try{return new XMLHttpRequest,!0}catch(err){return!1}}function ajax$1(options,callback){return hasXhr||options.xhr?xhRequest(options,callback):fetchRequest(options,callback)}function defaultBody(){return""}function ajaxCore(options,callback){function onSuccess(obj,resp,cb){if(!options.binary&&options.json&&"string"==typeof obj)try{obj=JSON.parse(obj)}catch(e){return cb(e)}Array.isArray(obj)&&(obj=obj.map(function(v){return v.error||v.missing?generateErrorFromResponse(v):v})),options.binary&&res$2(obj,resp),cb(null,obj,resp)}options=clone(options);var defaultOptions={method:"GET",headers:{},json:!0,processData:!0,timeout:1e4,cache:!1};return options=jsExtend.extend(defaultOptions,options),options.json&&(options.binary||(options.headers.Accept="application/json"),options.headers["Content-Type"]=options.headers["Content-Type"]||"application/json"),options.binary&&(options.encoding=null,options.json=!1),options.processData||(options.json=!1),ajax$1(options,function(err,response,body){if(err)return callback(generateErrorFromResponse(err));var error,content_type=response.headers&&response.headers["content-type"],data=body||defaultBody();if(!options.binary&&(options.json||!options.processData)&&"object"!=typeof data&&(/json/.test(content_type)||/^[\\s]*\\{/.test(data)&&/\\}[\\s]*$/.test(data)))try{data=JSON.parse(data.toString())}catch(e){}response.statusCode>=200&&response.statusCode<300?onSuccess(data,response,callback):(error=generateErrorFromResponse(data),error.status=response.statusCode,callback(error))})}function ajax(opts,callback){var ua=navigator&&navigator.userAgent?navigator.userAgent.toLowerCase():"",isSafari=-1!==ua.indexOf("safari")&&-1===ua.indexOf("chrome"),isIE=-1!==ua.indexOf("msie"),isEdge=-1!==ua.indexOf("edge"),shouldCacheBust=isSafari||(isIE||isEdge)&&"GET"===opts.method,cache="cache"in opts?opts.cache:!0,isBlobUrl=/^blob:/.test(opts.url);if(!isBlobUrl&&(shouldCacheBust||!cache)){var hasArgs=-1!==opts.url.indexOf("?");opts.url+=(hasArgs?"&":"?")+"_nonce="+Date.now()}return ajaxCore(opts,callback)}function readAttachmentsAsBlobOrBuffer(row){var atts=row.doc&&row.doc._attachments;atts&&Object.keys(atts).forEach(function(filename){var att=atts[filename];att.data=b64ToBluffer(att.data,att.content_type)})}function encodeDocId(id){return/^_design/.test(id)?"_design/"+encodeURIComponent(id.slice(8)):/^_local/.test(id)?"_local/"+encodeURIComponent(id.slice(7)):encodeURIComponent(id)}function preprocessAttachments$1(doc){return doc._attachments&&Object.keys(doc._attachments)?PouchPromise.all(Object.keys(doc._attachments).map(function(key){var attachment=doc._attachments[key];return attachment.data&&"string"!=typeof attachment.data?new PouchPromise(function(resolve){blobToBase64(attachment.data,resolve)}).then(function(b64){attachment.data=b64}):void 0})):PouchPromise.resolve()}function getHost(name){var uri=parseUri(name);(uri.user||uri.password)&&(uri.auth={username:uri.user,password:uri.password});var parts=uri.path.replace(/(^\\/|\\/$)/g,"").split("/");return uri.db=parts.pop(),-1===uri.db.indexOf("%")&&(uri.db=encodeURIComponent(uri.db)),uri.path=parts.join("/"),uri}function genDBUrl(opts,path){return genUrl(opts,opts.db+"/"+path)}function genUrl(opts,path){var pathDel=opts.path?"/":"";return opts.protocol+"://"+opts.host+(opts.port?":"+opts.port:"")+"/"+opts.path+pathDel+path}function paramsToStr(params){return"?"+Object.keys(params).map(function(k){return k+"="+encodeURIComponent(params[k])}).join("&")}function HttpPouch(opts,callback){function ajax$$(userOpts,options,callback){var reqAjax=userOpts.ajax||{},reqOpts=jsExtend.extend(clone(ajaxOpts),reqAjax,options);return log$1(reqOpts.method+" "+reqOpts.url),api._ajax(reqOpts,callback)}function ajaxPromise(userOpts,opts){return new PouchPromise(function(resolve,reject){ajax$$(userOpts,opts,function(err,res){return err?reject(err):void resolve(res)})})}function adapterFun$$(name,fun){return adapterFun(name,getArguments(function(args){setup().then(function(){return fun.apply(this,args)})["catch"](function(e){var callback=args.pop();callback(e)})}))}function setup(){if(opts.skipSetup||opts.skip_setup)return PouchPromise.resolve();if(setupPromise)return setupPromise;var checkExists={method:"GET",url:dbUrl};return setupPromise=ajaxPromise({},checkExists)["catch"](function(err){return err&&err.status&&404===err.status?(explainError(404,"PouchDB is just detecting if the remote exists."),ajaxPromise({},{method:"PUT",url:dbUrl})):PouchPromise.reject(err)})["catch"](function(err){return err&&err.status&&412===err.status?!0:PouchPromise.reject(err)}),setupPromise["catch"](function(){setupPromise=null}),setupPromise}function encodeAttachmentId(attachmentId){return attachmentId.split("/").map(encodeURIComponent).join("/")}var api=this,getHostFun=getHost;opts.getHost&&(getHostFun=opts.getHost);var host=getHostFun(opts.name,opts),dbUrl=genDBUrl(host,"");opts=clone(opts);var ajaxOpts=opts.ajax||{};if(api.getUrl=function(){return dbUrl},api.getHeaders=function(){return ajaxOpts.headers||{}},opts.auth||host.auth){var nAuth=opts.auth||host.auth,str=nAuth.username+":"+nAuth.password,token=btoa$1(unescape(encodeURIComponent(str)));ajaxOpts.headers=ajaxOpts.headers||{},ajaxOpts.headers.Authorization="Basic "+token}api._ajax=ajax;var setupPromise;setTimeout(function(){callback(null,api)}),api.type=function(){return"http"},api.id=adapterFun$$("id",function(callback){ajax$$({},{method:"GET",url:genUrl(host,"")},function(err,result){var uuid=result&&result.uuid?result.uuid+host.db:genDBUrl(host,"");callback(null,uuid)})}),api.request=adapterFun$$("request",function(options,callback){options.url=genDBUrl(host,options.url),ajax$$({},options,callback)}),api.compact=adapterFun$$("compact",function(opts,callback){"function"==typeof opts&&(callback=opts,opts={}),opts=clone(opts),ajax$$(opts,{url:genDBUrl(host,"_compact"),method:"POST"},function(){function ping(){api.info(function(err,res){res&&!res.compact_running?callback(null,{ok:!0}):setTimeout(ping,opts.interval||200)})}ping()})}),api.bulkGet=adapterFun("bulkGet",function(opts,callback){function doBulkGet(cb){var params={};opts.revs&&(params.revs=!0),opts.attachments&&(params.attachments=!0),ajax$$({},{url:genDBUrl(host,"_bulk_get"+paramsToStr(params)),method:"POST",body:{docs:opts.docs}},cb)}function doBulkGetShim(){function onResult(batchNum){return function(err,res){results[batchNum]=res.results,++numDone===numBatches&&callback(null,{results:flatten(results)})}}for(var batchSize=MAX_SIMULTANEOUS_REVS,numBatches=Math.ceil(opts.docs.length/batchSize),numDone=0,results=new Array(numBatches),i=0;numBatches>i;i++){var subOpts=pick(opts,["revs","attachments"]);subOpts.ajax=ajaxOpts,subOpts.docs=opts.docs.slice(i*batchSize,Math.min(opts.docs.length,(i+1)*batchSize)),bulkGet(self,subOpts,onResult(i))}}var self=this,dbUrl=genUrl(host,""),supportsBulkGet=supportsBulkGetMap[dbUrl];"boolean"!=typeof supportsBulkGet?doBulkGet(function(err,res){if(err){var status=Math.floor(err.status/100);4===status||5===status?(supportsBulkGetMap[dbUrl]=!1,explainError(err.status,"PouchDB is just detecting if the remote supports the _bulk_get API."),doBulkGetShim()):callback(err)}else supportsBulkGetMap[dbUrl]=!0,callback(null,res)}):supportsBulkGet?doBulkGet(callback):doBulkGetShim()}),api._info=function(callback){setup().then(function(){ajax$$({},{method:"GET",url:genDBUrl(host,"")},function(err,res){return err?callback(err):(res.host=genDBUrl(host,""),void callback(null,res))})})["catch"](callback)},api.get=adapterFun$$("get",function(id,opts,callback){function fetchAttachments(doc){function fetch(){if(!filenames.length)return null;var filename=filenames.pop(),att=atts[filename],path=encodeDocId(doc._id)+"/"+encodeAttachmentId(filename)+"?rev="+doc._rev;return ajaxPromise(opts,{method:"GET",url:genDBUrl(host,path),binary:!0}).then(function(blob){return opts.binary?blob:new PouchPromise(function(resolve){blobToBase64(blob,resolve)})}).then(function(data){delete att.stub,delete att.length,att.data=data})}var atts=doc._attachments,filenames=atts&&Object.keys(atts);return atts&&filenames.length?new PromisePool(fetch,5,{promise:PouchPromise}).start():void 0}function fetchAllAttachments(docOrDocs){return Array.isArray(docOrDocs)?PouchPromise.all(docOrDocs.map(function(doc){return doc.ok?fetchAttachments(doc.ok):void 0})):fetchAttachments(docOrDocs)}"function"==typeof opts&&(callback=opts,opts={}),opts=clone(opts);var params={};opts.revs&&(params.revs=!0),opts.revs_info&&(params.revs_info=!0),opts.open_revs&&("all"!==opts.open_revs&&(opts.open_revs=JSON.stringify(opts.open_revs)),params.open_revs=opts.open_revs),opts.rev&&(params.rev=opts.rev),opts.conflicts&&(params.conflicts=opts.conflicts),id=encodeDocId(id);var options={method:"GET",url:genDBUrl(host,id+paramsToStr(params))};ajaxPromise(opts,options).then(function(res){return PouchPromise.resolve().then(function(){return opts.attachments?fetchAllAttachments(res):void 0}).then(function(){callback(null,res)})})["catch"](callback)}),api.remove=adapterFun$$("remove",function(docOrId,optsOrRev,opts,callback){var doc;"string"==typeof optsOrRev?(doc={_id:docOrId,_rev:optsOrRev},"function"==typeof opts&&(callback=opts,opts={})):(doc=docOrId,"function"==typeof optsOrRev?(callback=optsOrRev,opts={}):(callback=opts,opts=optsOrRev));var rev=doc._rev||opts.rev;ajax$$(opts,{method:"DELETE",url:genDBUrl(host,encodeDocId(doc._id))+"?rev="+rev},callback)}),api.getAttachment=adapterFun$$("getAttachment",function(docId,attachmentId,opts,callback){"function"==typeof opts&&(callback=opts,opts={});var params=opts.rev?"?rev="+opts.rev:"",url=genDBUrl(host,encodeDocId(docId))+"/"+encodeAttachmentId(attachmentId)+params;ajax$$(opts,{method:"GET",url:url,binary:!0},callback)}),api.removeAttachment=adapterFun$$("removeAttachment",function(docId,attachmentId,rev,callback){var url=genDBUrl(host,encodeDocId(docId)+"/"+encodeAttachmentId(attachmentId))+"?rev="+rev;ajax$$({},{method:"DELETE",url:url},callback)}),api.putAttachment=adapterFun$$("putAttachment",function(docId,attachmentId,rev,blob,type,callback){"function"==typeof type&&(callback=type,type=blob,blob=rev,rev=null);var id=encodeDocId(docId)+"/"+encodeAttachmentId(attachmentId),url=genDBUrl(host,id);if(rev&&(url+="?rev="+rev),"string"==typeof blob){var binary;try{binary=atob$1(blob)}catch(err){return callback(createError(BAD_ARG,"Attachment is not a valid base64 string"))}blob=binary?binStringToBluffer(binary,type):""}var opts={headers:{"Content-Type":type},method:"PUT",url:url,processData:!1,body:blob,timeout:ajaxOpts.timeout||6e4};ajax$$({},opts,callback)}),api._bulkDocs=function(req,opts,callback){req.new_edits=opts.new_edits,setup().then(function(){return PouchPromise.all(req.docs.map(preprocessAttachments$1))}).then(function(){ajax$$(opts,{method:"POST",url:genDBUrl(host,"_bulk_docs"),body:req},function(err,results){return err?callback(err):(results.forEach(function(result){result.ok=!0}),void callback(null,results))})})["catch"](callback)},api.allDocs=adapterFun$$("allDocs",function(opts,callback){"function"==typeof opts&&(callback=opts,opts={}),opts=clone(opts);var body,params={},method="GET";opts.conflicts&&(params.conflicts=!0),opts.descending&&(params.descending=!0),opts.include_docs&&(params.include_docs=!0),opts.attachments&&(params.attachments=!0),opts.key&&(params.key=JSON.stringify(opts.key)),opts.start_key&&(opts.startkey=opts.start_key),opts.startkey&&(params.startkey=JSON.stringify(opts.startkey)),opts.end_key&&(opts.endkey=opts.end_key),opts.endkey&&(params.endkey=JSON.stringify(opts.endkey)),"undefined"!=typeof opts.inclusive_end&&(params.inclusive_end=!!opts.inclusive_end),"undefined"!=typeof opts.limit&&(params.limit=opts.limit),"undefined"!=typeof opts.skip&&(params.skip=opts.skip);var paramStr=paramsToStr(params);if("undefined"!=typeof opts.keys){var keysAsString="keys="+encodeURIComponent(JSON.stringify(opts.keys));keysAsString.length+paramStr.length+1<=MAX_URL_LENGTH?paramStr+="&"+keysAsString:(method="POST",body={keys:opts.keys})}ajaxPromise(opts,{method:method,url:genDBUrl(host,"_all_docs"+paramStr),body:body}).then(function(res){opts.include_docs&&opts.attachments&&opts.binary&&res.rows.forEach(readAttachmentsAsBlobOrBuffer),callback(null,res)})["catch"](callback)}),api._changes=function(opts){var batchSize="batch_size"in opts?opts.batch_size:CHANGES_BATCH_SIZE;opts=clone(opts),opts.timeout="timeout"in opts?opts.timeout:"timeout"in ajaxOpts?ajaxOpts.timeout:3e4;var returnDocs,params=opts.timeout?{timeout:opts.timeout-5e3}:{},limit="undefined"!=typeof opts.limit?opts.limit:!1;returnDocs="return_docs"in opts?opts.return_docs:"returnDocs"in opts?opts.returnDocs:!0;var leftToFetch=limit;if(opts.style&&(params.style=opts.style),(opts.include_docs||opts.filter&&"function"==typeof opts.filter)&&(params.include_docs=!0),opts.attachments&&(params.attachments=!0),opts.continuous&&(params.feed="longpoll"),opts.conflicts&&(params.conflicts=!0),opts.descending&&(params.descending=!0),"heartbeat"in opts?opts.heartbeat&&(params.heartbeat=opts.heartbeat):params.heartbeat=1e4,opts.filter&&"string"==typeof opts.filter&&(params.filter=opts.filter),opts.view&&"string"==typeof opts.view&&(params.filter="_view",params.view=opts.view),opts.query_params&&"object"==typeof opts.query_params)for(var param_name in opts.query_params)opts.query_params.hasOwnProperty(param_name)&&(params[param_name]=opts.query_params[param_name]);var body,method="GET";if(opts.doc_ids){params.filter="_doc_ids";var docIdsJson=JSON.stringify(opts.doc_ids);docIdsJson.length<MAX_URL_LENGTH?params.doc_ids=docIdsJson:(method="POST",body={doc_ids:opts.doc_ids})}var xhr,lastFetchedSeq,fetch=function(since,callback){if(!opts.aborted){params.since=since,"object"==typeof params.since&&(params.since=JSON.stringify(params.since)),opts.descending?limit&&(params.limit=leftToFetch):params.limit=!limit||leftToFetch>batchSize?batchSize:leftToFetch;var xhrOpts={method:method,url:genDBUrl(host,"_changes"+paramsToStr(params)),timeout:opts.timeout,body:body};lastFetchedSeq=since,opts.aborted||setup().then(function(){xhr=ajax$$(opts,xhrOpts,callback)})["catch"](callback)}},results={results:[]},fetched=function(err,res){if(!opts.aborted){var raw_results_length=0;if(res&&res.results){raw_results_length=res.results.length,results.last_seq=res.last_seq;var req={};req.query=opts.query_params,res.results=res.results.filter(function(c){leftToFetch--;var ret=filterChange(opts)(c);return ret&&(opts.include_docs&&opts.attachments&&opts.binary&&readAttachmentsAsBlobOrBuffer(c),returnDocs&&results.results.push(c),opts.onChange(c)),ret})}else if(err)return opts.aborted=!0,void opts.complete(err);res&&res.last_seq&&(lastFetchedSeq=res.last_seq);var finished=limit&&0>=leftToFetch||res&&batchSize>raw_results_length||opts.descending;(!opts.continuous||limit&&0>=leftToFetch)&&finished?opts.complete(null,results):setTimeout(function(){fetch(lastFetchedSeq,fetched)},0)}};return fetch(opts.since||0,fetched),{cancel:function(){opts.aborted=!0,xhr&&xhr.abort()}}},api.revsDiff=adapterFun$$("revsDiff",function(req,opts,callback){"function"==typeof opts&&(callback=opts,opts={}),ajax$$(opts,{method:"POST",url:genDBUrl(host,"_revs_diff"),body:req},callback)}),api._close=function(callback){callback()},api._destroy=function(options,callback){ajax$$(options,{url:genDBUrl(host,""),method:"DELETE"},function(err,resp){return err&&err.status&&404!==err.status?callback(err):void callback(null,resp)})}}function HttpPouch$1(PouchDB){PouchDB.adapter("http",HttpPouch,!1),PouchDB.adapter("https",HttpPouch,!1)}function TaskQueue$1(){this.promise=new PouchPromise(function(fulfill){fulfill()})}function createView(opts){var cachedViews,sourceDB=opts.db,viewName=opts.viewName,mapFun=opts.map,reduceFun=opts.reduce,temporary=opts.temporary,viewSignature=mapFun.toString()+(reduceFun&&reduceFun.toString())+"undefined";if(!temporary&&(cachedViews=sourceDB._cachedViews=sourceDB._cachedViews||{},cachedViews[viewSignature]))return cachedViews[viewSignature];var promiseForView=sourceDB.info().then(function(info){function diffFunction(doc){doc.views=doc.views||{};var fullViewName=viewName;-1===fullViewName.indexOf("/")&&(fullViewName=viewName+"/"+viewName);var depDbs=doc.views[fullViewName]=doc.views[fullViewName]||{};if(!depDbs[depDbName])return depDbs[depDbName]=!0,doc}var depDbName=info.db_name+"-mrview-"+(temporary?"temp":stringMd5(viewSignature));return upsert(sourceDB,"_local/mrviews",diffFunction).then(function(){return sourceDB.registerDependentDatabase(depDbName).then(function(res){var db=res.db;db.auto_compaction=!0;var view={name:depDbName,db:db,sourceDB:sourceDB,adapter:sourceDB.adapter,mapFun:mapFun,reduceFun:reduceFun};return view.db.get("_local/lastSeq")["catch"](function(err){if(404!==err.status)throw err}).then(function(lastSeqDoc){return view.seq=lastSeqDoc?lastSeqDoc.seq:0,cachedViews&&view.db.once("destroyed",function(){delete cachedViews[viewSignature]}),view})})})});return cachedViews&&(cachedViews[viewSignature]=promiseForView),promiseForView}function evalfunc(func,emit,sum,log,isArray,toJSON){return scopedEval("return ("+func.replace(/;\\s*$/,"")+");",{emit:emit,sum:sum,log:log,isArray:isArray,toJSON:toJSON})}function parseViewName(name){return-1===name.indexOf("/")?[name,name]:name.split("/")}function isGenOne(changes){return 1===changes.length&&/^1-/.test(changes[0].rev)}function emitError(db,e){try{db.emit("error",e)}catch(err){guardedConsole("error","The user\'s map/reduce function threw an uncaught error.\\nYou can debug this error by doing:\\nmyDatabase.on(\'error\', function (err) { debugger; });\\nPlease double-check your map/reduce function."),guardedConsole("error",e)}}function tryCode$1(db,fun,args){try{return{output:fun.apply(null,args)}}catch(e){return emitError(db,e),{error:e}}}function sortByKeyThenValue(x,y){var keyCompare=pouchdbCollate.collate(x.key,y.key);return 0!==keyCompare?keyCompare:pouchdbCollate.collate(x.value,y.value)}function sliceResults(results,limit,skip){return skip=skip||0,"number"==typeof limit?results.slice(skip,limit+skip):skip>0?results.slice(skip):results}function rowToDocId(row){var val=row.value,docId=val&&"object"==typeof val&&val._id||row.id;return docId}function readAttachmentsAsBlobOrBuffer$1(res){res.rows.forEach(function(row){var atts=row.doc&&row.doc._attachments;atts&&Object.keys(atts).forEach(function(filename){var att=atts[filename];atts[filename].data=b64ToBluffer(att.data,att.content_type)})})}function postprocessAttachments(opts){return function(res){return opts.include_docs&&opts.attachments&&opts.binary&&readAttachmentsAsBlobOrBuffer$1(res),res}}function createBuiltInError(name){var message="builtin "+name+" function requires map values to be numbers or number arrays";return new BuiltInError(message)}function sum(values){for(var result=0,i=0,len=values.length;len>i;i++){var num=values[i];if("number"!=typeof num){if(!Array.isArray(num))throw createBuiltInError("_sum");result="number"==typeof result?[result]:result;for(var j=0,jLen=num.length;jLen>j;j++){var jNum=num[j];if("number"!=typeof jNum)throw createBuiltInError("_sum");"undefined"==typeof result[j]?result.push(jNum):result[j]+=jNum}}else"number"==typeof result?result+=num:result[0]+=num}return result}function addHttpParam(paramName,opts,params,asJson){var val=opts[paramName];"undefined"!=typeof val&&(asJson&&(val=encodeURIComponent(JSON.stringify(val))),params.push(paramName+"="+val))}function coerceInteger(integerCandidate){if("undefined"!=typeof integerCandidate){var asNumber=Number(integerCandidate);return isNaN(asNumber)||asNumber!==parseInt(integerCandidate,10)?integerCandidate:asNumber}}function coerceOptions(opts){return opts.group_level=coerceInteger(opts.group_level),opts.limit=coerceInteger(opts.limit),opts.skip=coerceInteger(opts.skip),opts}function checkPositiveInteger(number){if(number){if("number"!=typeof number)return new QueryParseError(\'Invalid value for integer: "\'+number+\'"\');if(0>number)return new QueryParseError(\'Invalid value for positive integer: "\'+number+\'"\')}}function checkQueryParseError(options,fun){var startkeyName=options.descending?"endkey":"startkey",endkeyName=options.descending?"startkey":"endkey";if("undefined"!=typeof options[startkeyName]&&"undefined"!=typeof options[endkeyName]&&pouchdbCollate.collate(options[startkeyName],options[endkeyName])>0)throw new QueryParseError("No rows can match your key range, reverse your start_key and end_key or set {descending : true}");if(fun.reduce&&options.reduce!==!1){if(options.include_docs)throw new QueryParseError("{include_docs:true} is invalid for reduce");if(options.keys&&options.keys.length>1&&!options.group&&!options.group_level)throw new QueryParseError("Multi-key fetches for reduce views must use {group: true}")}["group_level","limit","skip"].forEach(function(optionName){var error=checkPositiveInteger(options[optionName]);if(error)throw error})}function httpQuery(db,fun,opts){var body,params=[],method="GET";if(addHttpParam("reduce",opts,params),addHttpParam("include_docs",opts,params),addHttpParam("attachments",opts,params),addHttpParam("limit",opts,params),addHttpParam("descending",opts,params),addHttpParam("group",opts,params),addHttpParam("group_level",opts,params),addHttpParam("skip",opts,params),addHttpParam("stale",opts,params),addHttpParam("conflicts",opts,params),addHttpParam("startkey",opts,params,!0),addHttpParam("start_key",opts,params,!0),addHttpParam("endkey",opts,params,!0),addHttpParam("end_key",opts,params,!0),addHttpParam("inclusive_end",opts,params),addHttpParam("key",opts,params,!0),params=params.join("&"),params=""===params?"":"?"+params,"undefined"!=typeof opts.keys){var MAX_URL_LENGTH=2e3,keysAsString="keys="+encodeURIComponent(JSON.stringify(opts.keys));keysAsString.length+params.length+1<=MAX_URL_LENGTH?params+=("?"===params[0]?"&":"?")+keysAsString:(method="POST","string"==typeof fun?body={keys:opts.keys}:fun.keys=opts.keys)}if("string"==typeof fun){var parts=parseViewName(fun);return db.request({method:method,url:"_design/"+parts[0]+"/_view/"+parts[1]+params,body:body}).then(postprocessAttachments(opts))}return body=body||{},Object.keys(fun).forEach(function(key){Array.isArray(fun[key])?body[key]=fun[key]:body[key]=fun[key].toString()}),db.request({method:"POST",url:"_temp_view"+params,body:body}).then(postprocessAttachments(opts))}function customQuery(db,fun,opts){return new PouchPromise(function(resolve,reject){db._query(fun,opts,function(err,res){return err?reject(err):void resolve(res)})})}function customViewCleanup(db){return new PouchPromise(function(resolve,reject){db._viewCleanup(function(err,res){return err?reject(err):void resolve(res)})})}function defaultsTo(value){return function(reason){if(404===reason.status)return value;throw reason}}function getDocsToPersist(docId,view,docIdsToChangesAndEmits){function getMetaDoc(){return isGenOne(changes)?PouchPromise.resolve(defaultMetaDoc):view.db.get(metaDocId)["catch"](defaultsTo(defaultMetaDoc))}function getKeyValueDocs(metaDoc){return metaDoc.keys.length?view.db.allDocs({keys:metaDoc.keys,include_docs:!0}):PouchPromise.resolve({rows:[]})}function processKvDocs(metaDoc,kvDocsRes){for(var kvDocs=[],oldKeysMap={},i=0,len=kvDocsRes.rows.length;len>i;i++){var row=kvDocsRes.rows[i],doc=row.doc;if(doc&&(kvDocs.push(doc),oldKeysMap[doc._id]=!0,doc._deleted=!indexableKeysToKeyValues[doc._id],!doc._deleted)){var keyValue=indexableKeysToKeyValues[doc._id];"value"in keyValue&&(doc.value=keyValue.value)}}var newKeys=Object.keys(indexableKeysToKeyValues);return newKeys.forEach(function(key){if(!oldKeysMap[key]){var kvDoc={_id:key},keyValue=indexableKeysToKeyValues[key];"value"in keyValue&&(kvDoc.value=keyValue.value),kvDocs.push(kvDoc)}}),metaDoc.keys=uniq(newKeys.concat(metaDoc.keys)),kvDocs.push(metaDoc),kvDocs}var metaDocId="_local/doc_"+docId,defaultMetaDoc={_id:metaDocId,keys:[]},docData=docIdsToChangesAndEmits[docId],indexableKeysToKeyValues=docData.indexableKeysToKeyValues,changes=docData.changes;return getMetaDoc().then(function(metaDoc){return getKeyValueDocs(metaDoc).then(function(kvDocsRes){return processKvDocs(metaDoc,kvDocsRes)})})}function saveKeyValues(view,docIdsToChangesAndEmits,seq){var seqDocId="_local/lastSeq";return view.db.get(seqDocId)["catch"](defaultsTo({_id:seqDocId,seq:0})).then(function(lastSeqDoc){var docIds=Object.keys(docIdsToChangesAndEmits);return PouchPromise.all(docIds.map(function(docId){return getDocsToPersist(docId,view,docIdsToChangesAndEmits)})).then(function(listOfDocsToPersist){var docsToPersist=flatten(listOfDocsToPersist);return lastSeqDoc.seq=seq,docsToPersist.push(lastSeqDoc),view.db.bulkDocs({docs:docsToPersist})})})}function getQueue(view){var viewName="string"==typeof view?view:view.name,queue=persistentQueues[viewName];return queue||(queue=persistentQueues[viewName]=new TaskQueue$1),queue}function updateView(view){return sequentialize(getQueue(view),function(){return updateViewInQueue(view)})()}function updateViewInQueue(view){function emit(key,value){var output={id:doc._id,key:pouchdbCollate.normalizeKey(key)};"undefined"!=typeof value&&null!==value&&(output.value=pouchdbCollate.normalizeKey(value)),mapResults.push(output)}function processChange(docIdsToChangesAndEmits,seq){return function(){return saveKeyValues(view,docIdsToChangesAndEmits,seq)}}var mapResults,doc,mapFun;if("function"==typeof view.mapFun&&2===view.mapFun.length){var origMap=view.mapFun;mapFun=function(doc){return origMap(doc,emit)}}else mapFun=evalfunc(view.mapFun.toString(),emit,sum,log$2,Array.isArray,JSON.parse);var currentSeq=view.seq||0,queue=new TaskQueue$1;return new PouchPromise(function(resolve,reject){function complete(){queue.finish().then(function(){view.seq=currentSeq,resolve()})}function processNextBatch(){function onError(err){reject(err)}view.sourceDB.changes({conflicts:!0,include_docs:!0,\nstyle:"all_docs",since:currentSeq,limit:CHANGES_BATCH_SIZE$1}).on("complete",function(response){var results=response.results;if(!results.length)return complete();for(var docIdsToChangesAndEmits={},i=0,l=results.length;l>i;i++){var change=results[i];if("_"!==change.doc._id[0]){mapResults=[],doc=change.doc,doc._deleted||tryCode$1(view.sourceDB,mapFun,[doc]),mapResults.sort(sortByKeyThenValue);for(var lastKey,indexableKeysToKeyValues={},j=0,jl=mapResults.length;jl>j;j++){var obj=mapResults[j],complexKey=[obj.key,obj.id];0===pouchdbCollate.collate(obj.key,lastKey)&&complexKey.push(j);var indexableKey=pouchdbCollate.toIndexableString(complexKey);indexableKeysToKeyValues[indexableKey]=obj,lastKey=obj.key}docIdsToChangesAndEmits[change.doc._id]={indexableKeysToKeyValues:indexableKeysToKeyValues,changes:change.changes}}currentSeq=change.seq}return queue.add(processChange(docIdsToChangesAndEmits,currentSeq)),results.length<CHANGES_BATCH_SIZE$1?complete():processNextBatch()}).on("error",onError)}processNextBatch()})}function reduceView(view,results,options){0===options.group_level&&delete options.group_level;var reduceFun,shouldGroup=options.group||options.group_level;reduceFun=builtInReduce[view.reduceFun]?builtInReduce[view.reduceFun]:evalfunc(view.reduceFun.toString(),null,sum,log$2,Array.isArray,JSON.parse);var groups=[],lvl=isNaN(options.group_level)?Number.POSITIVE_INFINITY:options.group_level;results.forEach(function(e){var last=groups[groups.length-1],groupKey=shouldGroup?e.key:null;return shouldGroup&&Array.isArray(groupKey)&&(groupKey=groupKey.slice(0,lvl)),last&&0===pouchdbCollate.collate(last.groupKey,groupKey)?(last.keys.push([e.key,e.id]),void last.values.push(e.value)):void groups.push({keys:[[e.key,e.id]],values:[e.value],groupKey:groupKey})}),results=[];for(var i=0,len=groups.length;len>i;i++){var e=groups[i],reduceTry=tryCode$1(view.sourceDB,reduceFun,[e.keys,e.values,!1]);if(reduceTry.error&&reduceTry.error instanceof BuiltInError)throw reduceTry.error;results.push({value:reduceTry.error?null:reduceTry.output,key:e.groupKey})}return{rows:sliceResults(results,options.limit,options.skip)}}function queryView(view,opts){return sequentialize(getQueue(view),function(){return queryViewInQueue(view,opts)})()}function queryViewInQueue(view,opts){function fetchFromView(viewOpts){return viewOpts.include_docs=!0,view.db.allDocs(viewOpts).then(function(res){return totalRows=res.total_rows,res.rows.map(function(result){if("value"in result.doc&&"object"==typeof result.doc.value&&null!==result.doc.value){var keys=Object.keys(result.doc.value).sort(),expectedKeys=["id","key","value"];if(!(expectedKeys>keys||keys>expectedKeys))return result.doc.value}var parsedKeyAndDocId=pouchdbCollate.parseIndexableString(result.doc._id);return{key:parsedKeyAndDocId[0],id:parsedKeyAndDocId[1],value:"value"in result.doc?result.doc.value:null}})})}function onMapResultsReady(rows){var finalResults;if(finalResults=shouldReduce?reduceView(view,rows,opts):{total_rows:totalRows,offset:skip,rows:rows},opts.include_docs){var docIds=uniq(rows.map(rowToDocId));return view.sourceDB.allDocs({keys:docIds,include_docs:!0,conflicts:opts.conflicts,attachments:opts.attachments,binary:opts.binary}).then(function(allDocsRes){var docIdsToDocs={};return allDocsRes.rows.forEach(function(row){row.doc&&(docIdsToDocs["$"+row.id]=row.doc)}),rows.forEach(function(row){var docId=rowToDocId(row),doc=docIdsToDocs["$"+docId];doc&&(row.doc=doc)}),finalResults})}return finalResults}var totalRows,shouldReduce=view.reduceFun&&opts.reduce!==!1,skip=opts.skip||0;if("undefined"==typeof opts.keys||opts.keys.length||(opts.limit=0,delete opts.keys),"undefined"!=typeof opts.keys){var keys=opts.keys,fetchPromises=keys.map(function(key){var viewOpts={startkey:pouchdbCollate.toIndexableString([key]),endkey:pouchdbCollate.toIndexableString([key,{}])};return fetchFromView(viewOpts)});return PouchPromise.all(fetchPromises).then(flatten).then(onMapResultsReady)}var viewOpts={descending:opts.descending};if(opts.start_key&&(opts.startkey=opts.start_key),opts.end_key&&(opts.endkey=opts.end_key),"undefined"!=typeof opts.startkey&&(viewOpts.startkey=opts.descending?pouchdbCollate.toIndexableString([opts.startkey,{}]):pouchdbCollate.toIndexableString([opts.startkey])),"undefined"!=typeof opts.endkey){var inclusiveEnd=opts.inclusive_end!==!1;opts.descending&&(inclusiveEnd=!inclusiveEnd),viewOpts.endkey=pouchdbCollate.toIndexableString(inclusiveEnd?[opts.endkey,{}]:[opts.endkey])}if("undefined"!=typeof opts.key){var keyStart=pouchdbCollate.toIndexableString([opts.key]),keyEnd=pouchdbCollate.toIndexableString([opts.key,{}]);viewOpts.descending?(viewOpts.endkey=keyStart,viewOpts.startkey=keyEnd):(viewOpts.startkey=keyStart,viewOpts.endkey=keyEnd)}return shouldReduce||("number"==typeof opts.limit&&(viewOpts.limit=opts.limit),viewOpts.skip=skip),fetchFromView(viewOpts).then(onMapResultsReady)}function httpViewCleanup(db){return db.request({method:"POST",url:"_view_cleanup"})}function localViewCleanup(db){return db.get("_local/mrviews").then(function(metaDoc){var docsToViews={};Object.keys(metaDoc.views).forEach(function(fullViewName){var parts=parseViewName(fullViewName),designDocName="_design/"+parts[0],viewName=parts[1];docsToViews[designDocName]=docsToViews[designDocName]||{},docsToViews[designDocName][viewName]=!0});var opts={keys:Object.keys(docsToViews),include_docs:!0};return db.allDocs(opts).then(function(res){var viewsToStatus={};res.rows.forEach(function(row){var ddocName=row.key.substring(8);Object.keys(docsToViews[row.key]).forEach(function(viewName){var fullViewName=ddocName+"/"+viewName;metaDoc.views[fullViewName]||(fullViewName=viewName);var viewDBNames=Object.keys(metaDoc.views[fullViewName]),statusIsGood=row.doc&&row.doc.views&&row.doc.views[viewName];viewDBNames.forEach(function(viewDBName){viewsToStatus[viewDBName]=viewsToStatus[viewDBName]||statusIsGood})})});var dbsToDelete=Object.keys(viewsToStatus).filter(function(viewDBName){return!viewsToStatus[viewDBName]}),destroyPromises=dbsToDelete.map(function(viewDBName){return sequentialize(getQueue(viewDBName),function(){return new db.constructor(viewDBName,db.__opts).destroy()})()});return PouchPromise.all(destroyPromises).then(function(){return{ok:!0}})})},defaultsTo({ok:!0}))}function queryPromised(db,fun,opts){if("http"===db.type())return httpQuery(db,fun,opts);if("function"==typeof db._query)return customQuery(db,fun,opts);if("string"!=typeof fun){checkQueryParseError(opts,fun);var createViewOpts={db:db,viewName:"temp_view/temp_view",map:fun.map,reduce:fun.reduce,temporary:!0};return tempViewQueue.add(function(){return createView(createViewOpts).then(function(view){function cleanup(){return view.db.destroy()}return fin(updateView(view).then(function(){return queryView(view,opts)}),cleanup)})}),tempViewQueue.finish()}var fullViewName=fun,parts=parseViewName(fullViewName),designDocName=parts[0],viewName=parts[1];return db.get("_design/"+designDocName).then(function(doc){var fun=doc.views&&doc.views[viewName];if(!fun||"string"!=typeof fun.map)throw new NotFoundError("ddoc "+designDocName+" has no view named "+viewName);checkQueryParseError(opts,fun);var createViewOpts={db:db,viewName:fullViewName,map:fun.map,reduce:fun.reduce};return createView(createViewOpts).then(function(view){return"ok"===opts.stale||"update_after"===opts.stale?("update_after"===opts.stale&&process.nextTick(function(){updateView(view)}),queryView(view,opts)):updateView(view).then(function(){return queryView(view,opts)})})})}function QueryParseError(message){this.status=400,this.name="query_parse_error",this.message=message,this.error=!0;try{Error.captureStackTrace(this,QueryParseError)}catch(e){}}function NotFoundError(message){this.status=404,this.name="not_found",this.message=message,this.error=!0;try{Error.captureStackTrace(this,NotFoundError)}catch(e){}}function BuiltInError(message){this.status=500,this.name="invalid_value",this.message=message,this.error=!0;try{Error.captureStackTrace(this,BuiltInError)}catch(e){}}function isGenOne$1(rev){return/^1-/.test(rev)}function fileHasChanged(localDoc,remoteDoc,filename){return!localDoc._attachments||!localDoc._attachments[filename]||localDoc._attachments[filename].digest!==remoteDoc._attachments[filename].digest}function getDocAttachments(db,doc){var filenames=Object.keys(doc._attachments);return PouchPromise.all(filenames.map(function(filename){return db.getAttachment(doc._id,filename,{rev:doc._rev})}))}function getDocAttachmentsFromTargetOrSource(target,src,doc){var doCheckForLocalAttachments="http"===src.type()&&"http"!==target.type(),filenames=Object.keys(doc._attachments);return doCheckForLocalAttachments?target.get(doc._id).then(function(localDoc){return PouchPromise.all(filenames.map(function(filename){return fileHasChanged(localDoc,doc,filename)?src.getAttachment(doc._id,filename):target.getAttachment(localDoc._id,filename)}))})["catch"](function(error){if(404!==error.status)throw error;return getDocAttachments(src,doc)}):getDocAttachments(src,doc)}function createBulkGetOpts(diffs){var requests=[];return Object.keys(diffs).forEach(function(id){var missingRevs=diffs[id].missing;missingRevs.forEach(function(missingRev){requests.push({id:id,rev:missingRev})})}),{docs:requests,revs:!0}}function getDocs(src,target,diffs,state){function getAllDocs(){var bulkGetOpts=createBulkGetOpts(diffs);if(bulkGetOpts.docs.length)return src.bulkGet(bulkGetOpts).then(function(bulkGetResponse){if(state.cancelled)throw new Error("cancelled");return PouchPromise.all(bulkGetResponse.results.map(function(bulkGetInfo){return PouchPromise.all(bulkGetInfo.docs.map(function(doc){var remoteDoc=doc.ok;return doc.error&&(ok=!1),remoteDoc&&remoteDoc._attachments?getDocAttachmentsFromTargetOrSource(target,src,remoteDoc).then(function(attachments){var filenames=Object.keys(remoteDoc._attachments);return attachments.forEach(function(attachment,i){var att=remoteDoc._attachments[filenames[i]];delete att.stub,delete att.length,att.data=attachment}),remoteDoc}):remoteDoc}))})).then(function(results){resultDocs=resultDocs.concat(flatten(results).filter(Boolean))})})}function hasAttachments(doc){return doc._attachments&&Object.keys(doc._attachments).length>0}function fetchRevisionOneDocs(ids){return src.allDocs({keys:ids,include_docs:!0}).then(function(res){if(state.cancelled)throw new Error("cancelled");res.rows.forEach(function(row){!row.deleted&&row.doc&&isGenOne$1(row.value.rev)&&!hasAttachments(row.doc)&&(resultDocs.push(row.doc),delete diffs[row.id])})})}function getRevisionOneDocs(){var ids=Object.keys(diffs).filter(function(id){var missing=diffs[id].missing;return 1===missing.length&&isGenOne$1(missing[0])});return ids.length>0?fetchRevisionOneDocs(ids):void 0}function returnResult(){return{ok:ok,docs:resultDocs}}diffs=clone(diffs);var resultDocs=[],ok=!0;return PouchPromise.resolve().then(getRevisionOneDocs).then(getAllDocs).then(returnResult)}function updateCheckpoint(db,id,checkpoint,session,returnValue){return db.get(id)["catch"](function(err){if(404===err.status)return"http"===db.type()&&explainError(404,"PouchDB is just checking if a remote checkpoint exists."),{session_id:session,_id:id,history:[],replicator:REPLICATOR,version:CHECKPOINT_VERSION};throw err}).then(function(doc){return returnValue.cancelled?void 0:(doc.history=(doc.history||[]).filter(function(item){return item.session_id!==session}),doc.history.unshift({last_seq:checkpoint,session_id:session}),doc.history=doc.history.slice(0,CHECKPOINT_HISTORY_SIZE),doc.version=CHECKPOINT_VERSION,doc.replicator=REPLICATOR,doc.session_id=session,doc.last_seq=checkpoint,db.put(doc)["catch"](function(err){if(409===err.status)return updateCheckpoint(db,id,checkpoint,session,returnValue);throw err}))})}function Checkpointer(src,target,id,returnValue){this.src=src,this.target=target,this.id=id,this.returnValue=returnValue}function compareReplicationLogs(srcDoc,tgtDoc){return srcDoc.session_id===tgtDoc.session_id?{last_seq:srcDoc.last_seq,history:srcDoc.history}:compareReplicationHistory(srcDoc.history,tgtDoc.history)}function compareReplicationHistory(sourceHistory,targetHistory){var S=sourceHistory[0],sourceRest=sourceHistory.slice(1),T=targetHistory[0],targetRest=targetHistory.slice(1);if(!S||0===targetHistory.length)return{last_seq:LOWEST_SEQ,history:[]};var sourceId=S.session_id;if(hasSessionId(sourceId,targetHistory))return{last_seq:S.last_seq,history:sourceHistory};var targetId=T.session_id;return hasSessionId(targetId,sourceRest)?{last_seq:T.last_seq,history:targetRest}:compareReplicationHistory(sourceRest,targetRest)}function hasSessionId(sessionId,history){var props=history[0],rest=history.slice(1);return sessionId&&0!==history.length?sessionId===props.session_id?!0:hasSessionId(sessionId,rest):!1}function isForbiddenError(err){return"number"==typeof err.status&&4===Math.floor(err.status/100)}function backOff(opts,returnValue,error,callback){if(opts.retry===!1)return returnValue.emit("error",error),void returnValue.removeAllListeners();if("function"!=typeof opts.back_off_function&&(opts.back_off_function=defaultBackOff),returnValue.emit("requestError",error),"active"===returnValue.state||"pending"===returnValue.state){returnValue.emit("paused",error),returnValue.state="stopped";var backOffSet=function(){opts.current_back_off=STARTING_BACK_OFF},removeBackOffSetter=function(){returnValue.removeListener("active",backOffSet)};returnValue.once("paused",removeBackOffSetter),returnValue.once("active",backOffSet)}opts.current_back_off=opts.current_back_off||STARTING_BACK_OFF,opts.current_back_off=opts.back_off_function(opts.current_back_off),setTimeout(callback,opts.current_back_off)}function sortObjectPropertiesByKey(queryParams){return Object.keys(queryParams).sort(pouchdbCollate.collate).reduce(function(result,key){return result[key]=queryParams[key],result},{})}function generateReplicationId(src,target,opts){var docIds=opts.doc_ids?opts.doc_ids.sort(pouchdbCollate.collate):"",filterFun=opts.filter?opts.filter.toString():"",queryParams="",filterViewName="";return opts.filter&&opts.query_params&&(queryParams=JSON.stringify(sortObjectPropertiesByKey(opts.query_params))),opts.filter&&"_view"===opts.filter&&(filterViewName=opts.view.toString()),PouchPromise.all([src.id(),target.id()]).then(function(res){var queryData=res[0]+res[1]+filterFun+filterViewName+queryParams+docIds;return new PouchPromise(function(resolve){binaryMd5(queryData,resolve)})}).then(function(md5sum){return md5sum=md5sum.replace(/\\//g,".").replace(/\\+/g,"_"),"_local/"+md5sum})}function replicate$1(src,target,opts,returnValue,result){function initCheckpointer(){return checkpointer?PouchPromise.resolve():generateReplicationId(src,target,opts).then(function(res){repId=res,checkpointer=new Checkpointer(src,target,repId,returnValue)})}function writeDocs(){if(changedDocs=[],0!==currentBatch.docs.length){var docs=currentBatch.docs;return target.bulkDocs({docs:docs,new_edits:!1}).then(function(res){if(returnValue.cancelled)throw completeReplication(),new Error("cancelled");var errors=[],errorsById={};res.forEach(function(res){res.error&&(result.doc_write_failures++,errors.push(res),errorsById[res.id]=res)}),allErrors=allErrors.concat(errors),result.docs_written+=currentBatch.docs.length-errors.length;var non403s=errors.filter(function(error){return"unauthorized"!==error.name&&"forbidden"!==error.name});if(docs.forEach(function(doc){var error=errorsById[doc._id];error?returnValue.emit("denied",clone(error)):changedDocs.push(doc)}),non403s.length>0){var error=new Error("bulkDocs error");throw error.other_errors=errors,abortReplication("target.bulkDocs failed to write docs",error),new Error("bulkWrite partial failure")}},function(err){throw result.doc_write_failures+=docs.length,err})}}function finishBatch(){if(currentBatch.error)throw new Error("There was a problem getting docs.");result.last_seq=last_seq=currentBatch.seq;var outResult=clone(result);return changedDocs.length&&(outResult.docs=changedDocs,returnValue.emit("change",outResult)),writingCheckpoint=!0,checkpointer.writeCheckpoint(currentBatch.seq,session).then(function(){if(writingCheckpoint=!1,returnValue.cancelled)throw completeReplication(),new Error("cancelled");currentBatch=void 0,getChanges()})["catch"](onCheckpointError)}function getDiffs(){var diff={};return currentBatch.changes.forEach(function(change){"_user/"!==change.id&&(diff[change.id]=change.changes.map(function(x){return x.rev}))}),target.revsDiff(diff).then(function(diffs){if(returnValue.cancelled)throw completeReplication(),new Error("cancelled");currentBatch.diffs=diffs})}function getBatchDocs(){return getDocs(src,target,currentBatch.diffs,returnValue).then(function(got){currentBatch.error=!got.ok,got.docs.forEach(function(doc){delete currentBatch.diffs[doc._id],result.docs_read++,currentBatch.docs.push(doc)})})}function startNextBatch(){if(!returnValue.cancelled&&!currentBatch){if(0===batches.length)return void processPendingBatch(!0);currentBatch=batches.shift(),getDiffs().then(getBatchDocs).then(writeDocs).then(finishBatch).then(startNextBatch)["catch"](function(err){abortReplication("batch processing terminated with error",err)})}}function processPendingBatch(immediate){return 0===pendingBatch.changes.length?void(0!==batches.length||currentBatch||((continuous&&changesOpts.live||changesCompleted)&&(returnValue.state="pending",returnValue.emit("paused")),changesCompleted&&completeReplication())):void((immediate||changesCompleted||pendingBatch.changes.length>=batch_size)&&(batches.push(pendingBatch),pendingBatch={seq:0,changes:[],docs:[]},("pending"===returnValue.state||"stopped"===returnValue.state)&&(returnValue.state="active",returnValue.emit("active")),startNextBatch()))}function abortReplication(reason,err){replicationCompleted||(err.message||(err.message=reason),result.ok=!1,result.status="aborting",result.errors.push(err),allErrors=allErrors.concat(err),batches=[],pendingBatch={seq:0,changes:[],docs:[]},completeReplication())}function completeReplication(){if(!(replicationCompleted||returnValue.cancelled&&(result.status="cancelled",writingCheckpoint))){result.status=result.status||"complete",result.end_time=new Date,result.last_seq=last_seq,replicationCompleted=!0;var non403s=allErrors.filter(function(error){return"unauthorized"!==error.name&&"forbidden"!==error.name});if(non403s.length>0){var error=allErrors.pop();allErrors.length>0&&(error.other_errors=allErrors),error.result=result,backOff(opts,returnValue,error,function(){replicate$1(src,target,opts,returnValue)})}else result.errors=allErrors,returnValue.emit("complete",result),returnValue.removeAllListeners()}}function onChange(change){if(returnValue.cancelled)return completeReplication();var filter=filterChange(opts)(change);filter&&(pendingBatch.seq=change.seq,pendingBatch.changes.push(change),processPendingBatch(0===batches.length&&changesOpts.live))}function onChangesComplete(changes){if(changesPending=!1,returnValue.cancelled)return completeReplication();if(changes.results.length>0)changesOpts.since=changes.last_seq,getChanges(),processPendingBatch(!0);else{var complete=function(){continuous?(changesOpts.live=!0,getChanges()):changesCompleted=!0,processPendingBatch(!0)};currentBatch||0!==changes.results.length?complete():(writingCheckpoint=!0,checkpointer.writeCheckpoint(changes.last_seq,session).then(function(){writingCheckpoint=!1,result.last_seq=last_seq=changes.last_seq,complete()})["catch"](onCheckpointError))}}function onChangesError(err){return changesPending=!1,returnValue.cancelled?completeReplication():void abortReplication("changes rejected",err)}function getChanges(){function abortChanges(){changes.cancel()}function removeListener(){returnValue.removeListener("cancel",abortChanges)}if(!changesPending&&!changesCompleted&&batches.length<batches_limit){changesPending=!0,returnValue._changes&&(returnValue.removeListener("cancel",returnValue._abortChanges),returnValue._changes.cancel()),returnValue.once("cancel",abortChanges);var changes=src.changes(changesOpts).on("change",onChange);changes.then(removeListener,removeListener),changes.then(onChangesComplete)["catch"](onChangesError),opts.retry&&(returnValue._changes=changes,returnValue._abortChanges=abortChanges)}}function startChanges(){initCheckpointer().then(function(){return returnValue.cancelled?void completeReplication():checkpointer.getCheckpoint().then(function(checkpoint){last_seq=checkpoint,changesOpts={since:last_seq,limit:batch_size,batch_size:batch_size,style:"all_docs",doc_ids:doc_ids,return_docs:!0},opts.filter&&("string"!=typeof opts.filter?changesOpts.include_docs=!0:changesOpts.filter=opts.filter),"heartbeat"in opts&&(changesOpts.heartbeat=opts.heartbeat),"timeout"in opts&&(changesOpts.timeout=opts.timeout),opts.query_params&&(changesOpts.query_params=opts.query_params),opts.view&&(changesOpts.view=opts.view),getChanges()})})["catch"](function(err){abortReplication("getCheckpoint rejected with ",err)})}function onCheckpointError(err){throw writingCheckpoint=!1,abortReplication("writeCheckpoint completed with error",err),err}var currentBatch,repId,checkpointer,batches=[],pendingBatch={seq:0,changes:[],docs:[]},writingCheckpoint=!1,changesCompleted=!1,replicationCompleted=!1,last_seq=0,continuous=opts.continuous||opts.live||!1,batch_size=opts.batch_size||100,batches_limit=opts.batches_limit||10,changesPending=!1,doc_ids=opts.doc_ids,allErrors=[],changedDocs=[],session=uuid();result=result||{ok:!0,start_time:new Date,docs_read:0,docs_written:0,doc_write_failures:0,errors:[]};var changesOpts={};return returnValue.ready(src,target),returnValue.cancelled?void completeReplication():(returnValue._addedListeners||(returnValue.once("cancel",completeReplication),"function"==typeof opts.complete&&(returnValue.once("error",opts.complete),returnValue.once("complete",function(result){opts.complete(null,result)})),returnValue._addedListeners=!0),void("undefined"==typeof opts.since?startChanges():initCheckpointer().then(function(){return writingCheckpoint=!0,checkpointer.writeCheckpoint(opts.since,session)}).then(function(){return writingCheckpoint=!1,returnValue.cancelled?void completeReplication():(last_seq=opts.since,void startChanges())})["catch"](onCheckpointError)))}function Replication(){events.EventEmitter.call(this),this.cancelled=!1,this.state="pending";var self=this,promise=new PouchPromise(function(fulfill,reject){self.once("complete",fulfill),self.once("error",reject)});self.then=function(resolve,reject){return promise.then(resolve,reject)},self["catch"]=function(reject){return promise["catch"](reject)},self["catch"](function(){})}function toPouch(db,opts){var PouchConstructor=opts.PouchConstructor;return"string"==typeof db?new PouchConstructor(db,opts):db}function replicate(src,target,opts,callback){if("function"==typeof opts&&(callback=opts,opts={}),"undefined"==typeof opts&&(opts={}),opts.doc_ids&&!Array.isArray(opts.doc_ids))throw createError(BAD_REQUEST,"`doc_ids` filter parameter is not a list.");opts.complete=callback,opts=clone(opts),opts.continuous=opts.continuous||opts.live,opts.retry="retry"in opts?opts.retry:!1,opts.PouchConstructor=opts.PouchConstructor||this;var replicateRet=new Replication(opts),srcPouch=toPouch(src,opts),targetPouch=toPouch(target,opts);return replicate$1(srcPouch,targetPouch,opts,replicateRet),replicateRet}function sync(src,target,opts,callback){return"function"==typeof opts&&(callback=opts,opts={}),"undefined"==typeof opts&&(opts={}),opts=clone(opts),opts.PouchConstructor=opts.PouchConstructor||this,src=toPouch(src,opts),target=toPouch(target,opts),new Sync(src,target,opts,callback)}function Sync(src,target,opts,callback){function pullChange(change){self.emit("change",{direction:"pull",change:change})}function pushChange(change){self.emit("change",{direction:"push",change:change})}function pushDenied(doc){self.emit("denied",{direction:"push",doc:doc})}function pullDenied(doc){self.emit("denied",{direction:"pull",doc:doc})}function pushPaused(){self.pushPaused=!0,self.pullPaused&&self.emit("paused")}function pullPaused(){self.pullPaused=!0,self.pushPaused&&self.emit("paused")}function pushActive(){self.pushPaused=!1,self.pullPaused&&self.emit("active",{direction:"push"})}function pullActive(){self.pullPaused=!1,self.pushPaused&&self.emit("active",{direction:"pull"})}function removeAll(type){return function(event,func){var isChange="change"===event&&(func===pullChange||func===pushChange),isDenied="denied"===event&&(func===pullDenied||func===pushDenied),isPaused="paused"===event&&(func===pullPaused||func===pushPaused),isActive="active"===event&&(func===pullActive||func===pushActive);(isChange||isDenied||isPaused||isActive)&&(event in removed||(removed[event]={}),removed[event][type]=!0,2===Object.keys(removed[event]).length&&self.removeAllListeners(event))}}var self=this;this.canceled=!1;var optsPush=opts.push?jsExtend.extend({},opts,opts.push):opts,optsPull=opts.pull?jsExtend.extend({},opts,opts.pull):opts;this.push=replicate(src,target,optsPush),this.pull=replicate(target,src,optsPull),this.pushPaused=!0,this.pullPaused=!0;var removed={};opts.live&&(this.push.on("complete",self.pull.cancel.bind(self.pull)),this.pull.on("complete",self.push.cancel.bind(self.push))),this.on("newListener",function(event){"change"===event?(self.pull.on("change",pullChange),self.push.on("change",pushChange)):"denied"===event?(self.pull.on("denied",pullDenied),self.push.on("denied",pushDenied)):"active"===event?(self.pull.on("active",pullActive),self.push.on("active",pushActive)):"paused"===event&&(self.pull.on("paused",pullPaused),self.push.on("paused",pushPaused))}),this.on("removeListener",function(event){"change"===event?(self.pull.removeListener("change",pullChange),self.push.removeListener("change",pushChange)):"denied"===event?(self.pull.removeListener("denied",pullDenied),self.push.removeListener("denied",pushDenied)):"active"===event?(self.pull.removeListener("active",pullActive),self.push.removeListener("active",pushActive)):"paused"===event&&(self.pull.removeListener("paused",pullPaused),self.push.removeListener("paused",pushPaused))}),this.pull.on("removeListener",removeAll("pull")),this.push.on("removeListener",removeAll("push"));var promise=PouchPromise.all([this.push,this.pull]).then(function(resp){var out={push:resp[0],pull:resp[1]};return self.emit("complete",out),callback&&callback(null,out),self.removeAllListeners(),out},function(err){if(self.cancel(),callback?callback(err):self.emit("error",err),self.removeAllListeners(),callback)throw err});this.then=function(success,err){return promise.then(success,err)},this["catch"]=function(err){return promise["catch"](err)}}function replication(PouchDB){PouchDB.replicate=replicate,PouchDB.sync=sync}var hasLocal,jsExtend=_dereq_(10),debug=_interopDefault(_dereq_(5)),inherits=_interopDefault(_dereq_(9)),lie=_interopDefault(_dereq_(11)),pouchdbCollections=_dereq_(15),getArguments=_interopDefault(_dereq_(4)),events=_dereq_(1),scopedEval=_interopDefault(_dereq_(16)),Md5=_interopDefault(_dereq_(17)),vuvuzela=_interopDefault(_dereq_(18)),PromisePool=_interopDefault(_dereq_(7)),pouchdbCollate=_dereq_(13),PouchPromise="function"==typeof Promise?Promise:lie,funcToString=Function.prototype.toString,objectCtorString=funcToString.call(Object),log=debug("pouchdb:api"),MAX_NUM_CONCURRENT_REQUESTS=6;if(isChromeApp())hasLocal=!1;else try{localStorage.setItem("_pouch_check_localstorage",1),hasLocal=!!localStorage.getItem("_pouch_check_localstorage")}catch(e){hasLocal=!1}inherits(Changes$1,events.EventEmitter),Changes$1.prototype.addListener=function(dbName,id,db,opts){function eventFunction(){function onError(){inprogress=!1}if(self._listeners[id]){if(inprogress)return void(inprogress="waiting");inprogress=!0;var changesOpts=pick(opts,["style","include_docs","attachments","conflicts","filter","doc_ids","view","since","query_params","binary"]);db.changes(changesOpts).on("change",function(c){c.seq>opts.since&&!opts.cancelled&&(opts.since=c.seq,opts.onChange(c))}).on("complete",function(){"waiting"===inprogress&&setTimeout(function(){eventFunction()},0),inprogress=!1}).on("error",onError)}}if(!this._listeners[id]){var self=this,inprogress=!1;this._listeners[id]=eventFunction,this.on(dbName,eventFunction)}},Changes$1.prototype.removeListener=function(dbName,id){id in this._listeners&&events.EventEmitter.prototype.removeListener.call(this,dbName,this._listeners[id])},Changes$1.prototype.notifyLocalWindows=function(dbName){isChromeApp()?chrome.storage.local.set({dbName:dbName}):hasLocalStorage()&&(localStorage[dbName]="a"===localStorage[dbName]?"b":"a")},Changes$1.prototype.notify=function(dbName){this.emit(dbName),this.notifyLocalWindows(dbName)},inherits(PouchError,Error),PouchError.prototype.toString=function(){return JSON.stringify({status:this.status,name:this.name,message:this.message,reason:this.reason})};var MISSING_BULK_DOCS=(new PouchError({status:401,error:"unauthorized",reason:"Name or password is incorrect."}),new PouchError({status:400,error:"bad_request",reason:"Missing JSON list of \'docs\'"})),MISSING_DOC=new PouchError({status:404,error:"not_found",reason:"missing"}),REV_CONFLICT=new PouchError({status:409,error:"conflict",reason:"Document update conflict"}),INVALID_ID=new PouchError({status:400,error:"bad_request",reason:"_id field must contain a string"}),MISSING_ID=new PouchError({status:412,error:"missing_id",reason:"_id is required for puts"}),RESERVED_ID=new PouchError({status:400,error:"bad_request",reason:"Only reserved document ids may start with underscore."}),NOT_OPEN=new PouchError({status:412,error:"precondition_failed",reason:"Database not open"}),UNKNOWN_ERROR=new PouchError({status:500,error:"unknown_error",reason:"Database encountered an unknown error"}),BAD_ARG=new PouchError({status:500,error:"badarg",reason:"Some query argument is invalid"}),QUERY_PARSE_ERROR=(new PouchError({status:400,error:"invalid_request",reason:"Request was invalid"}),new PouchError({status:400,error:"query_parse_error",reason:"Some query parameter is invalid"})),DOC_VALIDATION=new PouchError({status:500,error:"doc_validation",reason:"Bad special document member"}),BAD_REQUEST=new PouchError({status:400,error:"bad_request",reason:"Something wrong with the request"}),NOT_AN_OBJECT=new PouchError({status:400,error:"bad_request",reason:"Document must be a JSON object"}),IDB_ERROR=(new PouchError({status:404,error:"not_found",reason:"Database not found"}),new PouchError({status:500,error:"indexed_db_went_bad",reason:"unknown"})),WSQ_ERROR=new PouchError({status:500,error:"web_sql_went_bad",reason:"unknown"}),INVALID_REV=(new PouchError({status:500,error:"levelDB_went_went_bad",reason:"unknown"}),new PouchError({status:403,error:"forbidden",reason:"Forbidden by design doc validate_doc_update function"}),new PouchError({status:400,error:"bad_request",reason:"Invalid rev format"})),MISSING_STUB=(new PouchError({status:412,error:"file_exists",reason:"The database could not be created, the file already exists."}),new PouchError({status:412,error:"missing_stub"})),keys=(new PouchError({status:413,error:"invalid_url",reason:"Provided URL is invalid"}),["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"]),qName="queryKey",qParser=/(?:^|&)([^&=]*)=?([^&]*)/g,parser=/^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/,chars="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split("");inherits(Changes,events.EventEmitter),Changes.prototype.cancel=function(){this.isCancelled=!0,this.db.taskqueue.isReady&&this.emit("cancel")},Changes.prototype.doChanges=function(opts){var self=this,callback=opts.complete;if(opts=clone(opts),"live"in opts&&!("continuous"in opts)&&(opts.continuous=opts.live),opts.processChange=processChange,"latest"===opts.since&&(opts.since="now"),\nopts.since||(opts.since=0),"now"===opts.since)return void this.db.info().then(function(info){return self.isCancelled?void callback(null,{status:"cancelled"}):(opts.since=info.update_seq,void self.doChanges(opts))},callback);if(opts.continuous&&"now"!==opts.since&&this.db.info().then(function(info){self.startSeq=info.update_seq},function(err){if("idbNull"!==err.id)throw err}),opts.view&&!opts.filter&&(opts.filter="_view"),opts.filter&&"string"==typeof opts.filter&&("_view"===opts.filter?opts.view=normalizeDesignDocFunctionName(opts.view):opts.filter=normalizeDesignDocFunctionName(opts.filter),"http"!==this.db.type()&&!opts.doc_ids))return this.filterChanges(opts);"descending"in opts||(opts.descending=!1),opts.limit=0===opts.limit?1:opts.limit,opts.complete=callback;var newPromise=this.db._changes(opts);if(newPromise&&"function"==typeof newPromise.cancel){var cancel=self.cancel;self.cancel=getArguments(function(args){newPromise.cancel(),cancel.apply(this,args)})}},Changes.prototype.filterChanges=function(opts){var self=this,callback=opts.complete;if("_view"===opts.filter){if(!opts.view||"string"!=typeof opts.view){var err=createError(BAD_REQUEST,"`view` filter parameter not found or invalid.");return callback(err)}var viewName=parseDesignDocFunctionName(opts.view);this.db.get("_design/"+viewName[0],function(err,ddoc){if(self.isCancelled)return callback(null,{status:"cancelled"});if(err)return callback(generateErrorFromResponse(err));var mapFun=ddoc&&ddoc.views&&ddoc.views[viewName[1]]&&ddoc.views[viewName[1]].map;return mapFun?(opts.filter=evalView(mapFun),void self.doChanges(opts)):callback(createError(MISSING_DOC,ddoc.views?"missing json key: "+viewName[1]:"missing json key: views"))})}else{var filterName=parseDesignDocFunctionName(opts.filter);if(!filterName)return self.doChanges(opts);this.db.get("_design/"+filterName[0],function(err,ddoc){if(self.isCancelled)return callback(null,{status:"cancelled"});if(err)return callback(generateErrorFromResponse(err));var filterFun=ddoc&&ddoc.filters&&ddoc.filters[filterName[1]];return filterFun?(opts.filter=evalFilter(filterFun),void self.doChanges(opts)):callback(createError(MISSING_DOC,ddoc&&ddoc.filters?"missing json key: "+filterName[1]:"missing json key: filters"))})}},inherits(AbstractPouchDB,events.EventEmitter),AbstractPouchDB.prototype.post=adapterFun("post",function(doc,opts,callback){return"function"==typeof opts&&(callback=opts,opts={}),"object"!=typeof doc||Array.isArray(doc)?callback(createError(NOT_AN_OBJECT)):void this.bulkDocs({docs:[doc]},opts,yankError(callback))}),AbstractPouchDB.prototype.put=adapterFun("put",getArguments(function(args){function warn(){warned||(guardedConsole("warn","db.put(doc, id, rev) has been deprecated and will be removed in a future release, please use db.put({_id: id, _rev: rev}) instead"),warned=!0)}var temp,temptype,opts,callback,warned=!1,doc=args.shift(),id="_id"in doc;if("object"!=typeof doc||Array.isArray(doc))return(callback=args.pop())(createError(NOT_AN_OBJECT));for(;;)if(temp=args.shift(),temptype=typeof temp,"string"!==temptype||id?"string"!==temptype||!id||"_rev"in doc?"object"===temptype?opts=temp:"function"===temptype&&(callback=temp):(warn(),doc._rev=temp):(warn(),doc._id=temp,id=!0),!args.length)break;return opts=opts||{},invalidIdError(doc._id),isLocalId(doc._id)&&"function"==typeof this._putLocal?doc._deleted?this._removeLocal(doc,callback):this._putLocal(doc,callback):void this.bulkDocs({docs:[doc]},opts,yankError(callback))})),AbstractPouchDB.prototype.putAttachment=adapterFun("putAttachment",function(docId,attachmentId,rev,blob,type){function createAttachment(doc){var prevrevpos="_rev"in doc?parseInt(doc._rev,10):0;return doc._attachments=doc._attachments||{},doc._attachments[attachmentId]={content_type:type,data:blob,revpos:++prevrevpos},api.put(doc)}var api=this;return"function"==typeof type&&(type=blob,blob=rev,rev=null),"undefined"==typeof type&&(type=blob,blob=rev,rev=null),api.get(docId).then(function(doc){if(doc._rev!==rev)throw createError(REV_CONFLICT);return createAttachment(doc)},function(err){if(err.reason===MISSING_DOC.message)return createAttachment({_id:docId});throw err})}),AbstractPouchDB.prototype.removeAttachment=adapterFun("removeAttachment",function(docId,attachmentId,rev,callback){var self=this;self.get(docId,function(err,obj){return err?void callback(err):obj._rev!==rev?void callback(createError(REV_CONFLICT)):obj._attachments?(delete obj._attachments[attachmentId],0===Object.keys(obj._attachments).length&&delete obj._attachments,void self.put(obj,callback)):callback()})}),AbstractPouchDB.prototype.remove=adapterFun("remove",function(docOrId,optsOrRev,opts,callback){var doc;"string"==typeof optsOrRev?(doc={_id:docOrId,_rev:optsOrRev},"function"==typeof opts&&(callback=opts,opts={})):(doc=docOrId,"function"==typeof optsOrRev?(callback=optsOrRev,opts={}):(callback=opts,opts=optsOrRev)),opts=opts||{},opts.was_delete=!0;var newDoc={_id:doc._id,_rev:doc._rev||opts.rev};return newDoc._deleted=!0,isLocalId(newDoc._id)&&"function"==typeof this._removeLocal?this._removeLocal(doc,callback):void this.bulkDocs({docs:[newDoc]},opts,yankError(callback))}),AbstractPouchDB.prototype.revsDiff=adapterFun("revsDiff",function(req,opts,callback){function addToMissing(id,revId){missing.has(id)||missing.set(id,{missing:[]}),missing.get(id).missing.push(revId)}function processDoc(id,rev_tree){var missingForId=req[id].slice(0);traverseRevTree(rev_tree,function(isLeaf,pos,revHash,ctx,opts){var rev=pos+"-"+revHash,idx=missingForId.indexOf(rev);-1!==idx&&(missingForId.splice(idx,1),"available"!==opts.status&&addToMissing(id,rev))}),missingForId.forEach(function(rev){addToMissing(id,rev)})}"function"==typeof opts&&(callback=opts,opts={});var ids=Object.keys(req);if(!ids.length)return callback(null,{});var count=0,missing=new pouchdbCollections.Map;ids.map(function(id){this._getRevisionTree(id,function(err,rev_tree){if(err&&404===err.status&&"missing"===err.message)missing.set(id,{missing:req[id]});else{if(err)return callback(err);processDoc(id,rev_tree)}if(++count===ids.length){var missingObj={};return missing.forEach(function(value,key){missingObj[key]=value}),callback(null,missingObj)}})},this)}),AbstractPouchDB.prototype.bulkGet=adapterFun("bulkGet",function(opts,callback){bulkGet(this,opts,callback)}),AbstractPouchDB.prototype.compactDocument=adapterFun("compactDocument",function(docId,maxHeight,callback){var self=this;this._getRevisionTree(docId,function(err,revTree){if(err)return callback(err);var height=computeHeight(revTree),candidates=[],revs=[];Object.keys(height).forEach(function(rev){height[rev]>maxHeight&&candidates.push(rev)}),traverseRevTree(revTree,function(isLeaf,pos,revHash,ctx,opts){var rev=pos+"-"+revHash;"available"===opts.status&&-1!==candidates.indexOf(rev)&&revs.push(rev)}),self._doCompaction(docId,revs,callback)})}),AbstractPouchDB.prototype.compact=adapterFun("compact",function(opts,callback){"function"==typeof opts&&(callback=opts,opts={});var self=this;opts=opts||{},self._compactionQueue=self._compactionQueue||[],self._compactionQueue.push({opts:opts,callback:callback}),1===self._compactionQueue.length&&doNextCompaction(self)}),AbstractPouchDB.prototype._compact=function(opts,callback){function onChange(row){promises.push(self.compactDocument(row.id,0))}function onComplete(resp){var lastSeq=resp.last_seq;PouchPromise.all(promises).then(function(){return upsert(self,"_local/compaction",function(doc){return!doc.last_seq||doc.last_seq<lastSeq?(doc.last_seq=lastSeq,doc):!1})}).then(function(){callback(null,{ok:!0})})["catch"](callback)}var self=this,changesOpts={return_docs:!1,last_seq:opts.last_seq||0},promises=[];self.changes(changesOpts).on("change",onChange).on("complete",onComplete).on("error",callback)},AbstractPouchDB.prototype.get=adapterFun("get",function(id,opts,callback){function finishOpenRevs(){var result=[],count=leaves.length;return count?void leaves.forEach(function(leaf){self.get(id,{rev:leaf,revs:opts.revs,attachments:opts.attachments},function(err,doc){err?result.push({missing:leaf}):result.push({ok:doc}),count--,count||callback(null,result)})}):callback(null,result)}if("function"==typeof opts&&(callback=opts,opts={}),"string"!=typeof id)return callback(createError(INVALID_ID));if(isLocalId(id)&&"function"==typeof this._getLocal)return this._getLocal(id,callback);var leaves=[],self=this;if(!opts.open_revs)return this._get(id,opts,function(err,result){if(err)return callback(err);var doc=result.doc,metadata=result.metadata,ctx=result.ctx;if(opts.conflicts){var conflicts=collectConflicts(metadata);conflicts.length&&(doc._conflicts=conflicts)}if(isDeleted(metadata,doc._rev)&&(doc._deleted=!0),opts.revs||opts.revs_info){var paths=rootToLeaf(metadata.rev_tree),path=arrayFirst(paths,function(arr){return-1!==arr.ids.map(function(x){return x.id}).indexOf(doc._rev.split("-")[1])}),indexOfRev=path.ids.map(function(x){return x.id}).indexOf(doc._rev.split("-")[1])+1,howMany=path.ids.length-indexOfRev;if(path.ids.splice(indexOfRev,howMany),path.ids.reverse(),opts.revs&&(doc._revisions={start:path.pos+path.ids.length-1,ids:path.ids.map(function(rev){return rev.id})}),opts.revs_info){var pos=path.pos+path.ids.length;doc._revs_info=path.ids.map(function(rev){return pos--,{rev:pos+"-"+rev.id,status:rev.opts.status}})}}if(opts.attachments&&doc._attachments){var attachments=doc._attachments,count=Object.keys(attachments).length;if(0===count)return callback(null,doc);Object.keys(attachments).forEach(function(key){this._getAttachment(doc._id,key,attachments[key],{rev:doc._rev,binary:opts.binary,ctx:ctx},function(err,data){var att=doc._attachments[key];att.data=data,delete att.stub,delete att.length,--count||callback(null,doc)})},self)}else{if(doc._attachments)for(var key in doc._attachments)doc._attachments.hasOwnProperty(key)&&(doc._attachments[key].stub=!0);callback(null,doc)}});if("all"===opts.open_revs)this._getRevisionTree(id,function(err,rev_tree){return err?callback(err):(leaves=collectLeaves(rev_tree).map(function(leaf){return leaf.rev}),void finishOpenRevs())});else{if(!Array.isArray(opts.open_revs))return callback(createError(UNKNOWN_ERROR,"function_clause"));leaves=opts.open_revs;for(var i=0;i<leaves.length;i++){var l=leaves[i];if("string"!=typeof l||!/^\\d+-/.test(l))return callback(createError(INVALID_REV))}finishOpenRevs()}}),AbstractPouchDB.prototype.getAttachment=adapterFun("getAttachment",function(docId,attachmentId,opts,callback){var self=this;opts instanceof Function&&(callback=opts,opts={}),this._get(docId,opts,function(err,res){return err?callback(err):res.doc._attachments&&res.doc._attachments[attachmentId]?(opts.ctx=res.ctx,opts.binary=!0,self._getAttachment(docId,attachmentId,res.doc._attachments[attachmentId],opts,callback),void 0):callback(createError(MISSING_DOC))})}),AbstractPouchDB.prototype.allDocs=adapterFun("allDocs",function(opts,callback){if("function"==typeof opts&&(callback=opts,opts={}),opts.skip="undefined"!=typeof opts.skip?opts.skip:0,opts.start_key&&(opts.startkey=opts.start_key),opts.end_key&&(opts.endkey=opts.end_key),"keys"in opts){if(!Array.isArray(opts.keys))return callback(new TypeError("options.keys must be an array"));var incompatibleOpt=["startkey","endkey","key"].filter(function(incompatibleOpt){return incompatibleOpt in opts})[0];if(incompatibleOpt)return void callback(createError(QUERY_PARSE_ERROR,"Query parameter `"+incompatibleOpt+"` is not compatible with multi-get"));if("http"!==this.type())return allDocsKeysQuery(this,opts,callback)}return this._allDocs(opts,callback)}),AbstractPouchDB.prototype.changes=function(opts,callback){return"function"==typeof opts&&(callback=opts,opts={}),new Changes(this,opts,callback)},AbstractPouchDB.prototype.close=adapterFun("close",function(callback){return this._closed=!0,this._close(callback)}),AbstractPouchDB.prototype.info=adapterFun("info",function(callback){var self=this;this._info(function(err,info){return err?callback(err):(info.db_name=info.db_name||self._db_name,info.auto_compaction=!(!self.auto_compaction||"http"===self.type()),info.adapter=self.type(),void callback(null,info))})}),AbstractPouchDB.prototype.id=adapterFun("id",function(callback){return this._id(callback)}),AbstractPouchDB.prototype.type=function(){return"function"==typeof this._type?this._type():this.adapter},AbstractPouchDB.prototype.bulkDocs=adapterFun("bulkDocs",function(req,opts,callback){if("function"==typeof opts&&(callback=opts,opts={}),opts=opts||{},Array.isArray(req)&&(req={docs:req}),!req||!req.docs||!Array.isArray(req.docs))return callback(createError(MISSING_BULK_DOCS));for(var i=0;i<req.docs.length;++i)if("object"!=typeof req.docs[i]||Array.isArray(req.docs[i]))return callback(createError(NOT_AN_OBJECT));var attachmentError;return req.docs.forEach(function(doc){doc._attachments&&Object.keys(doc._attachments).forEach(function(name){attachmentError=attachmentError||attachmentNameError(name)})}),attachmentError?callback(createError(BAD_REQUEST,attachmentError)):("new_edits"in opts||("new_edits"in req?opts.new_edits=req.new_edits:opts.new_edits=!0),opts.new_edits||"http"===this.type()||req.docs.sort(compareByIdThenRev),cleanDocs(req.docs),this._bulkDocs(req,opts,function(err,res){return err?callback(err):(opts.new_edits||(res=res.filter(function(x){return x.error})),void callback(null,res))}))}),AbstractPouchDB.prototype.registerDependentDatabase=adapterFun("registerDependentDatabase",function(dependentDb,callback){function diffFun(doc){return doc.dependentDbs=doc.dependentDbs||{},doc.dependentDbs[dependentDb]?!1:(doc.dependentDbs[dependentDb]=!0,doc)}var depDB=new this.constructor(dependentDb,this.__opts);upsert(this,"_local/_pouch_dependentDbs",diffFun).then(function(){callback(null,{db:depDB})})["catch"](callback)}),AbstractPouchDB.prototype.destroy=adapterFun("destroy",function(opts,callback){function destroyDb(){self._destroy(opts,function(err,resp){return err?callback(err):(self._destroyed=!0,self.emit("destroyed"),void callback(null,resp||{ok:!0}))})}"function"==typeof opts&&(callback=opts,opts={});var self=this,usePrefix="use_prefix"in self?self.use_prefix:!0;return"http"===self.type()?destroyDb():void self.get("_local/_pouch_dependentDbs",function(err,localDoc){if(err)return 404!==err.status?callback(err):destroyDb();var dependentDbs=localDoc.dependentDbs,PouchDB=self.constructor,deletedMap=Object.keys(dependentDbs).map(function(name){var trueName=usePrefix?name.replace(new RegExp("^"+PouchDB.prefix),""):name;return new PouchDB(trueName,self.__opts).destroy()});PouchPromise.all(deletedMap).then(destroyDb,callback)})}),TaskQueue.prototype.execute=function(){var fun;if(this.failed)for(;fun=this.queue.shift();)fun(this.failed);else for(;fun=this.queue.shift();)fun()},TaskQueue.prototype.fail=function(err){this.failed=err,this.execute()},TaskQueue.prototype.ready=function(db){this.isReady=!0,this.db=db,this.execute()},TaskQueue.prototype.addTask=function(fun){this.queue.push(fun),this.failed&&this.execute()},inherits(PouchDB,AbstractPouchDB),PouchDB.debug=debug,PouchDB.adapters={},PouchDB.preferredAdapters=[],PouchDB.prefix="_pouch_";var eventEmitter=new events.EventEmitter;setUpEventEmitter(PouchDB),PouchDB.parseAdapter=function(name,opts){var adapter,adapterName,match=name.match(/([a-z\\-]*):\\/\\/(.*)/);if(match){if(name=/http(s?)/.test(match[1])?match[1]+"://"+match[2]:match[2],adapter=match[1],!PouchDB.adapters[adapter].valid())throw"Invalid adapter";return{name:name,adapter:match[1]}}var skipIdb="idb"in PouchDB.adapters&&"websql"in PouchDB.adapters&&hasLocalStorage()&&localStorage["_pouch__websqldb_"+PouchDB.prefix+name];if(opts.adapter)adapterName=opts.adapter;else if("undefined"!=typeof opts&&opts.db)adapterName="leveldb";else for(var i=0;i<PouchDB.preferredAdapters.length;++i)if(adapterName=PouchDB.preferredAdapters[i],adapterName in PouchDB.adapters){if(skipIdb&&"idb"===adapterName){guardedConsole("log",\'PouchDB is downgrading "\'+name+\'" to WebSQL to avoid data loss, because it was already opened with WebSQL.\');continue}break}adapter=PouchDB.adapters[adapterName];var usePrefix=adapter&&"use_prefix"in adapter?adapter.use_prefix:!0;return{name:usePrefix?PouchDB.prefix+name:name,adapter:adapterName}},PouchDB.adapter=function(id,obj,addToPreferredAdapters){obj.valid()&&(PouchDB.adapters[id]=obj,addToPreferredAdapters&&PouchDB.preferredAdapters.push(id))},PouchDB.plugin=function(obj){return"function"==typeof obj?obj(PouchDB):Object.keys(obj).forEach(function(id){PouchDB.prototype[id]=obj[id]}),PouchDB},PouchDB.defaults=function(defaultOpts){function PouchAlt(name,opts,callback){return this instanceof PouchAlt?(("function"==typeof opts||"undefined"==typeof opts)&&(callback=opts,opts={}),name&&"object"==typeof name&&(opts=name,name=void 0),opts=jsExtend.extend({},defaultOpts,opts),void PouchDB.call(this,name,opts,callback)):new PouchAlt(name,opts,callback)}return inherits(PouchAlt,PouchDB),PouchAlt.preferredAdapters=PouchDB.preferredAdapters.slice(),Object.keys(PouchDB).forEach(function(key){key in PouchAlt||(PouchAlt[key]=PouchDB[key])}),PouchAlt};var version="5.4.5";PouchDB.version=version;var blobSupportPromise,reservedWords=toObject(["_id","_rev","_attachments","_deleted","_revisions","_revs_info","_conflicts","_deleted_conflicts","_local_seq","_rev_tree","_replication_id","_replication_state","_replication_state_time","_replication_state_reason","_replication_stats","_removed"]),dataWords=toObject(["_attachments","_replication_id","_replication_state","_replication_state_time","_replication_state_reason","_replication_stats"]),atob$1=function(str){return atob(str)},btoa$1=function(str){return btoa(str)},setImmediateShim=global.setImmediate||global.setTimeout,MD5_CHUNK_SIZE=32768,ADAPTER_VERSION=5,DOC_STORE="document-store",BY_SEQ_STORE="by-sequence",ATTACH_STORE="attach-store",ATTACH_AND_SEQ_STORE="attach-seq-store",META_STORE="meta-store",LOCAL_STORE="local-store",DETECT_BLOB_SUPPORT_STORE="detect-blob-support",taskQueue={running:!1,queue:[]},cachedDBs=new pouchdbCollections.Map,idbChanges=new Changes$1,openReqList=new pouchdbCollections.Map;IdbPouch.valid=function(){var isSafari="undefined"!=typeof openDatabase&&/(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent)&&!/Chrome/.test(navigator.userAgent)&&!/BlackBerry/.test(navigator.platform);return!isSafari&&"undefined"!=typeof indexedDB&&"undefined"!=typeof IDBKeyRange};var ADAPTER_VERSION$1=7,DOC_STORE$1=quote("document-store"),BY_SEQ_STORE$1=quote("by-sequence"),ATTACH_STORE$1=quote("attach-store"),LOCAL_STORE$1=quote("local-store"),META_STORE$1=quote("metadata-store"),ATTACH_AND_SEQ_STORE$1=quote("attach-seq-store"),cachedDatabases=new pouchdbCollections.Map,websqlChanges=new Changes$1,POUCH_VERSION=1,BY_SEQ_STORE_DELETED_INDEX_SQL="CREATE INDEX IF NOT EXISTS \'by-seq-deleted-idx\' ON "+BY_SEQ_STORE$1+" (seq, deleted)",BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL="CREATE UNIQUE INDEX IF NOT EXISTS \'by-seq-doc-id-rev\' ON "+BY_SEQ_STORE$1+" (doc_id, rev)",DOC_STORE_WINNINGSEQ_INDEX_SQL="CREATE INDEX IF NOT EXISTS \'doc-winningseq-idx\' ON "+DOC_STORE$1+" (winningseq)",ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL="CREATE INDEX IF NOT EXISTS \'attach-seq-seq-idx\' ON "+ATTACH_AND_SEQ_STORE$1+" (seq)",ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL="CREATE UNIQUE INDEX IF NOT EXISTS \'attach-seq-digest-idx\' ON "+ATTACH_AND_SEQ_STORE$1+" (digest, seq)",DOC_STORE_AND_BY_SEQ_JOINER=BY_SEQ_STORE$1+".seq = "+DOC_STORE$1+".winningseq",SELECT_DOCS=BY_SEQ_STORE$1+".seq AS seq, "+BY_SEQ_STORE$1+".deleted AS deleted, "+BY_SEQ_STORE$1+".json AS data, "+BY_SEQ_STORE$1+".rev AS rev, "+DOC_STORE$1+".json AS metadata";WebSQLPouch.valid=valid,WebSQLPouch.use_prefix=!0;var hasXhr=testXhr(),res$2=function(){},CHANGES_BATCH_SIZE=25,MAX_SIMULTANEOUS_REVS=50,supportsBulkGetMap={},MAX_URL_LENGTH=1800,log$1=debug("pouchdb:http");HttpPouch.valid=function(){return!0},TaskQueue$1.prototype.add=function(promiseFactory){return this.promise=this.promise["catch"](function(){}).then(function(){return promiseFactory()}),this.promise},TaskQueue$1.prototype.finish=function(){return this.promise};var promisedCallback=function(promise,callback){return callback&&promise.then(function(res){process.nextTick(function(){callback(null,res)})},function(reason){process.nextTick(function(){callback(reason)})}),promise},callbackify=function(fun){return getArguments(function(args){var cb=args.pop(),promise=fun.apply(this,args);return"function"==typeof cb&&promisedCallback(promise,cb),promise})},fin=function(promise,finalPromiseFactory){return promise.then(function(res){return finalPromiseFactory().then(function(){return res})},function(reason){return finalPromiseFactory().then(function(){throw reason})})},sequentialize=function(queue,promiseFactory){return function(){var args=arguments,that=this;return queue.add(function(){return promiseFactory.apply(that,args)})}},uniq=function(arr){for(var map={},i=0,len=arr.length;len>i;i++)map["$"+arr[i]]=!0;var keys=Object.keys(map),output=new Array(keys.length);for(i=0,len=keys.length;len>i;i++)output[i]=keys[i].substring(1);return output},persistentQueues={},tempViewQueue=new TaskQueue$1,CHANGES_BATCH_SIZE$1=50,log$2=guardedConsole.bind(null,"log"),builtInReduce={_sum:function(keys,values){return sum(values)},_count:function(keys,values){return values.length},_stats:function(keys,values){function sumsqr(values){for(var _sumsqr=0,i=0,len=values.length;len>i;i++){var num=values[i];_sumsqr+=num*num}return _sumsqr}return{sum:sum(values),min:Math.min.apply(null,values),max:Math.max.apply(null,values),count:values.length,sumsqr:sumsqr(values)}}},viewCleanup=callbackify(function(){var db=this;return"http"===db.type()?httpViewCleanup(db):"function"==typeof db._viewCleanup?customViewCleanup(db):localViewCleanup(db)}),query=function(fun,opts,callback){"function"==typeof opts&&(callback=opts,opts={}),opts=opts?coerceOptions(opts):{},"function"==typeof fun&&(fun={map:fun});var db=this,promise=PouchPromise.resolve().then(function(){return queryPromised(db,fun,opts)});return promisedCallback(promise,callback),promise};inherits(QueryParseError,Error),inherits(NotFoundError,Error),inherits(BuiltInError,Error);var mapreduce={query:query,viewCleanup:viewCleanup},CHECKPOINT_VERSION=1,REPLICATOR="pouchdb",CHECKPOINT_HISTORY_SIZE=5,LOWEST_SEQ=0;Checkpointer.prototype.writeCheckpoint=function(checkpoint,session){var self=this;return this.updateTarget(checkpoint,session).then(function(){return self.updateSource(checkpoint,session)})},Checkpointer.prototype.updateTarget=function(checkpoint,session){return updateCheckpoint(this.target,this.id,checkpoint,session,this.returnValue)},Checkpointer.prototype.updateSource=function(checkpoint,session){var self=this;return this.readOnlySource?PouchPromise.resolve(!0):updateCheckpoint(this.src,this.id,checkpoint,session,this.returnValue)["catch"](function(err){if(isForbiddenError(err))return self.readOnlySource=!0,!0;throw err})};var comparisons={undefined:function(targetDoc,sourceDoc){return 0===pouchdbCollate.collate(targetDoc.last_seq,sourceDoc.last_seq)?sourceDoc.last_seq:0},1:function(targetDoc,sourceDoc){return compareReplicationLogs(sourceDoc,targetDoc).last_seq}};Checkpointer.prototype.getCheckpoint=function(){var self=this;return self.target.get(self.id).then(function(targetDoc){return self.readOnlySource?PouchPromise.resolve(targetDoc.last_seq):self.src.get(self.id).then(function(sourceDoc){if(targetDoc.version!==sourceDoc.version)return LOWEST_SEQ;var version;return version=targetDoc.version?targetDoc.version.toString():"undefined",version in comparisons?comparisons[version](targetDoc,sourceDoc):LOWEST_SEQ},function(err){if(404===err.status&&targetDoc.last_seq)return self.src.put({_id:self.id,last_seq:LOWEST_SEQ}).then(function(){return LOWEST_SEQ},function(err){return isForbiddenError(err)?(self.readOnlySource=!0,targetDoc.last_seq):LOWEST_SEQ});throw err})})["catch"](function(err){if(404!==err.status)throw err;return LOWEST_SEQ})};var STARTING_BACK_OFF=0;inherits(Replication,events.EventEmitter),Replication.prototype.cancel=function(){this.cancelled=!0,this.state="cancelled",this.emit("cancel")},Replication.prototype.ready=function(src,target){function onDestroy(){self.cancel()}function cleanup(){src.removeListener("destroyed",onDestroy),target.removeListener("destroyed",onDestroy)}var self=this;self._readyCalled||(self._readyCalled=!0,src.once("destroyed",onDestroy),target.once("destroyed",onDestroy),self.once("complete",cleanup))},inherits(Sync,events.EventEmitter),Sync.prototype.cancel=function(){this.canceled||(this.canceled=!0,this.push.cancel(),this.pull.cancel())},PouchDB.plugin(IDBPouch).plugin(WebSqlPouch).plugin(HttpPouch$1).plugin(mapreduce).plugin(replication),module.exports=PouchDB}).call(this,_dereq_(2),"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{1:1,10:10,11:11,13:13,15:15,16:16,17:17,18:18,2:2,4:4,5:5,7:7,9:9}],4:[function(_dereq_,module,exports){"use strict";function argsArray(fun){return function(){var len=arguments.length;if(len){for(var args=[],i=-1;++i<len;)args[i]=arguments[i];return fun.call(this,args)}return fun.call(this,[])}}module.exports=argsArray},{}],5:[function(_dereq_,module,exports){function useColors(){return"WebkitAppearance"in document.documentElement.style||window.console&&(console.firebug||console.exception&&console.table)||navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)&&parseInt(RegExp.$1,10)>=31}function formatArgs(){var args=arguments,useColors=this.useColors;if(args[0]=(useColors?"%c":"")+this.namespace+(useColors?" %c":" ")+args[0]+(useColors?"%c ":" ")+"+"+exports.humanize(this.diff),!useColors)return args;var c="color: "+this.color;args=[args[0],c,"color: inherit"].concat(Array.prototype.slice.call(args,1));var index=0,lastC=0;return args[0].replace(/%[a-z%]/g,function(match){"%%"!==match&&(index++,"%c"===match&&(lastC=index))}),args.splice(lastC,0,c),args}function log(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)}function save(namespaces){try{null==namespaces?exports.storage.removeItem("debug"):exports.storage.debug=namespaces}catch(e){}}function load(){var r;try{r=exports.storage.debug}catch(e){}return r}function localstorage(){try{return window.localStorage}catch(e){}}exports=module.exports=_dereq_(6),exports.log=log,exports.formatArgs=formatArgs,exports.save=save,exports.load=load,exports.useColors=useColors,exports.storage="undefined"!=typeof chrome&&"undefined"!=typeof chrome.storage?chrome.storage.local:localstorage(),exports.colors=["lightseagreen","forestgreen","goldenrod","dodgerblue","darkorchid","crimson"],exports.formatters.j=function(v){return JSON.stringify(v)},exports.enable(load())},{6:6}],6:[function(_dereq_,module,exports){function selectColor(){return exports.colors[prevColor++%exports.colors.length]}function debug(namespace){function disabled(){}function enabled(){var self=enabled,curr=+new Date,ms=curr-(prevTime||curr);self.diff=ms,self.prev=prevTime,self.curr=curr,prevTime=curr,null==self.useColors&&(self.useColors=exports.useColors()),null==self.color&&self.useColors&&(self.color=selectColor());var args=Array.prototype.slice.call(arguments);args[0]=exports.coerce(args[0]),"string"!=typeof args[0]&&(args=["%o"].concat(args));var index=0;args[0]=args[0].replace(/%([a-z%])/g,function(match,format){if("%%"===match)return match;index++;var formatter=exports.formatters[format];if("function"==typeof formatter){var val=args[index];match=formatter.call(self,val),args.splice(index,1),index--}return match}),"function"==typeof exports.formatArgs&&(args=exports.formatArgs.apply(self,args));var logFn=enabled.log||exports.log||console.log.bind(console);logFn.apply(self,args)}disabled.enabled=!1,enabled.enabled=!0;var fn=exports.enabled(namespace)?enabled:disabled;return fn.namespace=namespace,fn}function enable(namespaces){exports.save(namespaces);for(var split=(namespaces||"").split(/[\\s,]+/),len=split.length,i=0;len>i;i++)split[i]&&(namespaces=split[i].replace(/\\*/g,".*?"),"-"===namespaces[0]?exports.skips.push(new RegExp("^"+namespaces.substr(1)+"$")):exports.names.push(new RegExp("^"+namespaces+"$")))}function disable(){exports.enable("")}function enabled(name){var i,len;for(i=0,len=exports.skips.length;len>i;i++)if(exports.skips[i].test(name))return!1;for(i=0,len=exports.names.length;len>i;i++)if(exports.names[i].test(name))return!0;return!1}function coerce(val){return val instanceof Error?val.stack||val.message:val}exports=module.exports=debug,exports.coerce=coerce,exports.disable=disable,exports.enable=enable,exports.enabled=enabled,exports.humanize=_dereq_(12),exports.names=[],exports.skips=[],exports.formatters={};var prevTime,prevColor=0},{12:12}],7:[function(_dereq_,module,exports){!function(root,factory){"function"==typeof define&&define.amd?define([],factory):"object"==typeof exports?module.exports=factory():(root.PromisePool=factory(),root.promisePool=root.PromisePool)}(this,function(){"use strict";var EventTarget=function(){this._listeners={}};EventTarget.prototype.addEventListener=function(type,listener){this._listeners[type]=this._listeners[type]||[],this._listeners[type].indexOf(listener)<0&&this._listeners[type].push(listener)},EventTarget.prototype.removeEventListener=function(type,listener){if(this._listeners[type]){var p=this._listeners[type].indexOf(listener);p>=0&&this._listeners[type].splice(p,1)}},EventTarget.prototype.dispatchEvent=function(evt){if(this._listeners[evt.type]&&this._listeners[evt.type].length)for(var listeners=this._listeners[evt.type].slice(),i=0,l=listeners.length;l>i;++i)listeners[i].call(this,evt)};var isGenerator=function(func){return"function"==typeof func.constructor&&"GeneratorFunction"===func.constructor.name},functionToIterator=function(func){return{next:function(){var promise=func();return promise?{value:promise}:{done:!0}}}},promiseToIterator=function(promise){var called=!1;return{next:function(){return called?{done:!0}:(called=!0,{value:promise})}}},toIterator=function(obj,Promise){var type=typeof obj;if("object"===type){if("function"==typeof obj.next)return obj;if("function"==typeof obj.then)return promiseToIterator(obj)}return"function"===type?isGenerator(obj)?obj():functionToIterator(obj):promiseToIterator(Promise.resolve(obj))},PromisePoolEvent=function(target,type,data){this.target=target,this.type=type,this.data=data},PromisePool=function(source,concurrency,options){if(EventTarget.call(this),"number"!=typeof concurrency||Math.floor(concurrency)!==concurrency||1>concurrency)throw new Error("Invalid concurrency");this._concurrency=concurrency,this._options=options||{},this._options.promise=this._options.promise||Promise,this._iterator=toIterator(source,this._options.promise),this._done=!1,this._size=0,this._promise=null,this._callbacks=null};return PromisePool.prototype=new EventTarget,PromisePool.prototype.constructor=PromisePool,PromisePool.prototype.concurrency=function(value){return"undefined"!=typeof value&&(this._concurrency=value,this.active()&&this._proceed()),this._concurrency},PromisePool.prototype.size=function(){return this._size},PromisePool.prototype.active=function(){return!!this._promise},PromisePool.prototype.promise=function(){return this._promise},PromisePool.prototype.start=function(){var that=this,Promise=this._options.promise;return this._promise=new Promise(function(resolve,reject){that._callbacks={reject:reject,resolve:resolve},that._proceed()}),this._promise},PromisePool.prototype._fireEvent=function(type,data){this.dispatchEvent(new PromisePoolEvent(this,type,data))},PromisePool.prototype._settle=function(error){error?this._callbacks.reject(error):this._callbacks.resolve(),this._promise=null,this._callbacks=null},PromisePool.prototype._onPooledPromiseFulfilled=function(promise,result){this._size--,this.active()&&(this._fireEvent("fulfilled",{promise:promise,result:result}),this._proceed())},PromisePool.prototype._onPooledPromiseRejected=function(promise,error){this._size--,this.active()&&(this._fireEvent("rejected",{\npromise:promise,error:error}),this._settle(error||new Error("Unknown error")))},PromisePool.prototype._trackPromise=function(promise){var that=this;promise.then(function(result){that._onPooledPromiseFulfilled(promise,result)},function(error){that._onPooledPromiseRejected(promise,error)})["catch"](function(err){that._settle(new Error("Promise processing failed: "+err))})},PromisePool.prototype._proceed=function(){if(!this._done){for(var result=null;this._size<this._concurrency&&!(result=this._iterator.next()).done;)this._size++,this._trackPromise(result.value);this._done=null===result||!!result.done}this._done&&0===this._size&&this._settle()},PromisePool.PromisePoolEvent=PromisePoolEvent,PromisePool.PromisePool=PromisePool,PromisePool})},{}],8:[function(_dereq_,module,exports){(function(global){"use strict";function nextTick(){draining=!0;for(var i,oldQueue,len=queue.length;len;){for(oldQueue=queue,queue=[],i=-1;++i<len;)oldQueue[i]();len=queue.length}draining=!1}function immediate(task){1!==queue.push(task)||draining||scheduleDrain()}var scheduleDrain,Mutation=global.MutationObserver||global.WebKitMutationObserver;if(Mutation){var called=0,observer=new Mutation(nextTick),element=global.document.createTextNode("");observer.observe(element,{characterData:!0}),scheduleDrain=function(){element.data=called=++called%2}}else if(global.setImmediate||"undefined"==typeof global.MessageChannel)scheduleDrain="document"in global&&"onreadystatechange"in global.document.createElement("script")?function(){var scriptEl=global.document.createElement("script");scriptEl.onreadystatechange=function(){nextTick(),scriptEl.onreadystatechange=null,scriptEl.parentNode.removeChild(scriptEl),scriptEl=null},global.document.documentElement.appendChild(scriptEl)}:function(){setTimeout(nextTick,0)};else{var channel=new global.MessageChannel;channel.port1.onmessage=nextTick,scheduleDrain=function(){channel.port2.postMessage(0)}}var draining,queue=[];module.exports=immediate}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],9:[function(_dereq_,module,exports){"function"==typeof Object.create?module.exports=function(ctor,superCtor){ctor.super_=superCtor,ctor.prototype=Object.create(superCtor.prototype,{constructor:{value:ctor,enumerable:!1,writable:!0,configurable:!0}})}:module.exports=function(ctor,superCtor){ctor.super_=superCtor;var TempCtor=function(){};TempCtor.prototype=superCtor.prototype,ctor.prototype=new TempCtor,ctor.prototype.constructor=ctor}},{}],10:[function(_dereq_,module,exports){(function(){var slice=Array.prototype.slice,each=Array.prototype.forEach,extend=function(obj){if("object"!=typeof obj)throw obj+" is not an object";var sources=slice.call(arguments,1);return each.call(sources,function(source){if(source)for(var prop in source)"object"==typeof source[prop]&&obj[prop]?extend.call(obj,obj[prop],source[prop]):obj[prop]=source[prop]}),obj};this.extend=extend}).call(this)},{}],11:[function(_dereq_,module,exports){"use strict";function INTERNAL(){}function Promise(resolver){if("function"!=typeof resolver)throw new TypeError("resolver must be a function");this.state=PENDING,this.queue=[],this.outcome=void 0,resolver!==INTERNAL&&safelyResolveThenable(this,resolver)}function QueueItem(promise,onFulfilled,onRejected){this.promise=promise,"function"==typeof onFulfilled&&(this.onFulfilled=onFulfilled,this.callFulfilled=this.otherCallFulfilled),"function"==typeof onRejected&&(this.onRejected=onRejected,this.callRejected=this.otherCallRejected)}function unwrap(promise,func,value){immediate(function(){var returnValue;try{returnValue=func(value)}catch(e){return handlers.reject(promise,e)}returnValue===promise?handlers.reject(promise,new TypeError("Cannot resolve promise with itself")):handlers.resolve(promise,returnValue)})}function getThen(obj){var then=obj&&obj.then;return obj&&"object"==typeof obj&&"function"==typeof then?function(){then.apply(obj,arguments)}:void 0}function safelyResolveThenable(self,thenable){function onError(value){called||(called=!0,handlers.reject(self,value))}function onSuccess(value){called||(called=!0,handlers.resolve(self,value))}function tryToUnwrap(){thenable(onSuccess,onError)}var called=!1,result=tryCatch(tryToUnwrap);"error"===result.status&&onError(result.value)}function tryCatch(func,value){var out={};try{out.value=func(value),out.status="success"}catch(e){out.status="error",out.value=e}return out}function resolve(value){return value instanceof this?value:handlers.resolve(new this(INTERNAL),value)}function reject(reason){var promise=new this(INTERNAL);return handlers.reject(promise,reason)}function all(iterable){function allResolver(value,i){function resolveFromAll(outValue){values[i]=outValue,++resolved!==len||called||(called=!0,handlers.resolve(promise,values))}self.resolve(value).then(resolveFromAll,function(error){called||(called=!0,handlers.reject(promise,error))})}var self=this;if("[object Array]"!==Object.prototype.toString.call(iterable))return this.reject(new TypeError("must be an array"));var len=iterable.length,called=!1;if(!len)return this.resolve([]);for(var values=new Array(len),resolved=0,i=-1,promise=new this(INTERNAL);++i<len;)allResolver(iterable[i],i);return promise}function race(iterable){function resolver(value){self.resolve(value).then(function(response){called||(called=!0,handlers.resolve(promise,response))},function(error){called||(called=!0,handlers.reject(promise,error))})}var self=this;if("[object Array]"!==Object.prototype.toString.call(iterable))return this.reject(new TypeError("must be an array"));var len=iterable.length,called=!1;if(!len)return this.resolve([]);for(var i=-1,promise=new this(INTERNAL);++i<len;)resolver(iterable[i]);return promise}var immediate=_dereq_(8),handlers={},REJECTED=["REJECTED"],FULFILLED=["FULFILLED"],PENDING=["PENDING"];module.exports=Promise,Promise.prototype["catch"]=function(onRejected){return this.then(null,onRejected)},Promise.prototype.then=function(onFulfilled,onRejected){if("function"!=typeof onFulfilled&&this.state===FULFILLED||"function"!=typeof onRejected&&this.state===REJECTED)return this;var promise=new this.constructor(INTERNAL);if(this.state!==PENDING){var resolver=this.state===FULFILLED?onFulfilled:onRejected;unwrap(promise,resolver,this.outcome)}else this.queue.push(new QueueItem(promise,onFulfilled,onRejected));return promise},QueueItem.prototype.callFulfilled=function(value){handlers.resolve(this.promise,value)},QueueItem.prototype.otherCallFulfilled=function(value){unwrap(this.promise,this.onFulfilled,value)},QueueItem.prototype.callRejected=function(value){handlers.reject(this.promise,value)},QueueItem.prototype.otherCallRejected=function(value){unwrap(this.promise,this.onRejected,value)},handlers.resolve=function(self,value){var result=tryCatch(getThen,value);if("error"===result.status)return handlers.reject(self,result.value);var thenable=result.value;if(thenable)safelyResolveThenable(self,thenable);else{self.state=FULFILLED,self.outcome=value;for(var i=-1,len=self.queue.length;++i<len;)self.queue[i].callFulfilled(value)}return self},handlers.reject=function(self,error){self.state=REJECTED,self.outcome=error;for(var i=-1,len=self.queue.length;++i<len;)self.queue[i].callRejected(error);return self},Promise.resolve=resolve,Promise.reject=reject,Promise.all=all,Promise.race=race},{8:8}],12:[function(_dereq_,module,exports){function parse(str){if(str=""+str,!(str.length>1e4)){var match=/^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);if(match){var n=parseFloat(match[1]),type=(match[2]||"ms").toLowerCase();switch(type){case"years":case"year":case"yrs":case"yr":case"y":return n*y;case"days":case"day":case"d":return n*d;case"hours":case"hour":case"hrs":case"hr":case"h":return n*h;case"minutes":case"minute":case"mins":case"min":case"m":return n*m;case"seconds":case"second":case"secs":case"sec":case"s":return n*s;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return n}}}}function short(ms){return ms>=d?Math.round(ms/d)+"d":ms>=h?Math.round(ms/h)+"h":ms>=m?Math.round(ms/m)+"m":ms>=s?Math.round(ms/s)+"s":ms+"ms"}function long(ms){return plural(ms,d,"day")||plural(ms,h,"hour")||plural(ms,m,"minute")||plural(ms,s,"second")||ms+" ms"}function plural(ms,n,name){return n>ms?void 0:1.5*n>ms?Math.floor(ms/n)+" "+name:Math.ceil(ms/n)+" "+name+"s"}var s=1e3,m=60*s,h=60*m,d=24*h,y=365.25*d;module.exports=function(val,options){return options=options||{},"string"==typeof val?parse(val):options["long"]?long(val):short(val)}},{}],13:[function(_dereq_,module,exports){"use strict";function indexify(key){if(null!==key)switch(typeof key){case"boolean":return key?1:0;case"number":return numToIndexableString(key);case"string":return key.replace(/\\u0002/g,"").replace(/\\u0001/g,"").replace(/\\u0000/g,"");case"object":var isArray=Array.isArray(key),arr=isArray?key:Object.keys(key),i=-1,len=arr.length,result="";if(isArray)for(;++i<len;)result+=exports.toIndexableString(arr[i]);else for(;++i<len;){var objKey=arr[i];result+=exports.toIndexableString(objKey)+exports.toIndexableString(key[objKey])}return result}return""}function parseNumber(str,i){var num,originalIdx=i,zero="1"===str[i];if(zero)num=0,i++;else{var neg="0"===str[i];i++;var numAsString="",magAsString=str.substring(i,i+MAGNITUDE_DIGITS),magnitude=parseInt(magAsString,10)+MIN_MAGNITUDE;for(neg&&(magnitude=-magnitude),i+=MAGNITUDE_DIGITS;;){var ch=str[i];if("\\x00"===ch)break;numAsString+=ch,i++}numAsString=numAsString.split("."),num=1===numAsString.length?parseInt(numAsString,10):parseFloat(numAsString[0]+"."+numAsString[1]),neg&&(num-=10),0!==magnitude&&(num=parseFloat(num+"e"+magnitude))}return{num:num,length:i-originalIdx}}function pop(stack,metaStack){var obj=stack.pop();if(metaStack.length){var lastMetaElement=metaStack[metaStack.length-1];obj===lastMetaElement.element&&(metaStack.pop(),lastMetaElement=metaStack[metaStack.length-1]);var element=lastMetaElement.element,lastElementIndex=lastMetaElement.index;if(Array.isArray(element))element.push(obj);else if(lastElementIndex===stack.length-2){var key=stack.pop();element[key]=obj}else stack.push(obj)}}function arrayCollate(a,b){for(var len=Math.min(a.length,b.length),i=0;len>i;i++){var sort=exports.collate(a[i],b[i]);if(0!==sort)return sort}return a.length===b.length?0:a.length>b.length?1:-1}function stringCollate(a,b){return a===b?0:a>b?1:-1}function objectCollate(a,b){for(var ak=Object.keys(a),bk=Object.keys(b),len=Math.min(ak.length,bk.length),i=0;len>i;i++){var sort=exports.collate(ak[i],bk[i]);if(0!==sort)return sort;if(sort=exports.collate(a[ak[i]],b[bk[i]]),0!==sort)return sort}return ak.length===bk.length?0:ak.length>bk.length?1:-1}function collationIndex(x){var id=["boolean","number","string","object"],idx=id.indexOf(typeof x);return~idx?null===x?1:Array.isArray(x)?5:3>idx?idx+2:idx+3:Array.isArray(x)?5:void 0}function numToIndexableString(num){if(0===num)return"1";var expFormat=num.toExponential().split(/e\\+?/),magnitude=parseInt(expFormat[1],10),neg=0>num,result=neg?"0":"2",magForComparison=(neg?-magnitude:magnitude)-MIN_MAGNITUDE,magString=utils.padLeft(magForComparison.toString(),"0",MAGNITUDE_DIGITS);result+=SEP+magString;var factor=Math.abs(parseFloat(expFormat[0]));neg&&(factor=10-factor);var factorStr=factor.toFixed(20);return factorStr=factorStr.replace(/\\.?0+$/,""),result+=SEP+factorStr}var MIN_MAGNITUDE=-324,MAGNITUDE_DIGITS=3,SEP="",utils=_dereq_(14);exports.collate=function(a,b){if(a===b)return 0;a=exports.normalizeKey(a),b=exports.normalizeKey(b);var ai=collationIndex(a),bi=collationIndex(b);if(ai-bi!==0)return ai-bi;if(null===a)return 0;switch(typeof a){case"number":return a-b;case"boolean":return a===b?0:b>a?-1:1;case"string":return stringCollate(a,b)}return Array.isArray(a)?arrayCollate(a,b):objectCollate(a,b)},exports.normalizeKey=function(key){switch(typeof key){case"undefined":return null;case"number":return key===1/0||key===-(1/0)||isNaN(key)?null:key;case"object":var origKey=key;if(Array.isArray(key)){var len=key.length;key=new Array(len);for(var i=0;len>i;i++)key[i]=exports.normalizeKey(origKey[i])}else{if(key instanceof Date)return key.toJSON();if(null!==key){key={};for(var k in origKey)if(origKey.hasOwnProperty(k)){var val=origKey[k];"undefined"!=typeof val&&(key[k]=exports.normalizeKey(val))}}}}return key},exports.toIndexableString=function(key){var zero="\\x00";return key=exports.normalizeKey(key),collationIndex(key)+SEP+indexify(key)+zero},exports.parseIndexableString=function(str){for(var stack=[],metaStack=[],i=0;;){var collationIndex=str[i++];if("\\x00"!==collationIndex)switch(collationIndex){case"1":stack.push(null);break;case"2":stack.push("1"===str[i]),i++;break;case"3":var parsedNum=parseNumber(str,i);stack.push(parsedNum.num),i+=parsedNum.length;break;case"4":for(var parsedStr="";;){var ch=str[i];if("\\x00"===ch)break;parsedStr+=ch,i++}parsedStr=parsedStr.replace(/\\u0001\\u0001/g,"\\x00").replace(/\\u0001\\u0002/g,"").replace(/\\u0002\\u0002/g,""),stack.push(parsedStr);break;case"5":var arrayElement={element:[],index:stack.length};stack.push(arrayElement.element),metaStack.push(arrayElement);break;case"6":var objElement={element:{},index:stack.length};stack.push(objElement.element),metaStack.push(objElement);break;default:throw new Error("bad collationIndex or unexpectedly reached end of input: "+collationIndex)}else{if(1===stack.length)return stack.pop();pop(stack,metaStack)}}}},{14:14}],14:[function(_dereq_,module,exports){"use strict";function pad(str,padWith,upToLength){for(var padding="",targetLength=upToLength-str.length;padding.length<targetLength;)padding+=padWith;return padding}exports.padLeft=function(str,padWith,upToLength){var padding=pad(str,padWith,upToLength);return padding+str},exports.padRight=function(str,padWith,upToLength){var padding=pad(str,padWith,upToLength);return str+padding},exports.stringLexCompare=function(a,b){var i,aLen=a.length,bLen=b.length;for(i=0;aLen>i;i++){if(i===bLen)return 1;var aChar=a.charAt(i),bChar=b.charAt(i);if(aChar!==bChar)return bChar>aChar?-1:1}return bLen>aLen?-1:0},exports.intToDecimalForm=function(int){var isNeg=0>int,result="";do{var remainder=isNeg?-Math.ceil(int%10):Math.floor(int%10);result=remainder+result,int=isNeg?Math.ceil(int/10):Math.floor(int/10)}while(int);return isNeg&&"0"!==result&&(result="-"+result),result}},{}],15:[function(_dereq_,module,exports){"use strict";function LazyMap(){this.store={}}function LazySet(array){if(this.store=new LazyMap,array&&Array.isArray(array))for(var i=0,len=array.length;len>i;i++)this.add(array[i])}exports.Map=LazyMap,exports.Set=LazySet,LazyMap.prototype.mangle=function(key){if("string"!=typeof key)throw new TypeError("key must be a string but Got "+key);return"$"+key},LazyMap.prototype.unmangle=function(key){return key.substring(1)},LazyMap.prototype.get=function(key){var mangled=this.mangle(key);return mangled in this.store?this.store[mangled]:void 0},LazyMap.prototype.set=function(key,value){var mangled=this.mangle(key);return this.store[mangled]=value,!0},LazyMap.prototype.has=function(key){var mangled=this.mangle(key);return mangled in this.store},LazyMap.prototype["delete"]=function(key){var mangled=this.mangle(key);return mangled in this.store?(delete this.store[mangled],!0):!1},LazyMap.prototype.forEach=function(cb){for(var keys=Object.keys(this.store),i=0,len=keys.length;len>i;i++){var key=keys[i],value=this.store[key];key=this.unmangle(key),cb(value,key)}},LazySet.prototype.add=function(key){return this.store.set(key,!0)},LazySet.prototype.has=function(key){return this.store.has(key)},LazySet.prototype["delete"]=function(key){return this.store["delete"](key)}},{}],16:[function(_dereq_,module,exports){(function(){var hasProp={}.hasOwnProperty,slice=[].slice;module.exports=function(source,scope){var key,keys,value,values;keys=[],values=[];for(key in scope)hasProp.call(scope,key)&&(value=scope[key],"this"!==key&&(keys.push(key),values.push(value)));return Function.apply(null,slice.call(keys).concat([source])).apply(scope["this"],values)}}).call(this)},{}],17:[function(_dereq_,module,exports){!function(factory){if("object"==typeof exports)module.exports=factory();else if("function"==typeof define&&define.amd)define(factory);else{var glob;try{glob=window}catch(e){glob=self}glob.SparkMD5=factory()}}(function(undefined){"use strict";function cmn(q,a,b,x,s,t){return a=add32(add32(a,q),add32(x,t)),add32(a<<s|a>>>32-s,b)}function ff(a,b,c,d,x,s,t){return cmn(b&c|~b&d,a,b,x,s,t)}function gg(a,b,c,d,x,s,t){return cmn(b&d|c&~d,a,b,x,s,t)}function hh(a,b,c,d,x,s,t){return cmn(b^c^d,a,b,x,s,t)}function ii(a,b,c,d,x,s,t){return cmn(c^(b|~d),a,b,x,s,t)}function md5cycle(x,k){var a=x[0],b=x[1],c=x[2],d=x[3];a=ff(a,b,c,d,k[0],7,-680876936),d=ff(d,a,b,c,k[1],12,-389564586),c=ff(c,d,a,b,k[2],17,606105819),b=ff(b,c,d,a,k[3],22,-1044525330),a=ff(a,b,c,d,k[4],7,-176418897),d=ff(d,a,b,c,k[5],12,1200080426),c=ff(c,d,a,b,k[6],17,-1473231341),b=ff(b,c,d,a,k[7],22,-45705983),a=ff(a,b,c,d,k[8],7,1770035416),d=ff(d,a,b,c,k[9],12,-1958414417),c=ff(c,d,a,b,k[10],17,-42063),b=ff(b,c,d,a,k[11],22,-1990404162),a=ff(a,b,c,d,k[12],7,1804603682),d=ff(d,a,b,c,k[13],12,-40341101),c=ff(c,d,a,b,k[14],17,-1502002290),b=ff(b,c,d,a,k[15],22,1236535329),a=gg(a,b,c,d,k[1],5,-165796510),d=gg(d,a,b,c,k[6],9,-1069501632),c=gg(c,d,a,b,k[11],14,643717713),b=gg(b,c,d,a,k[0],20,-373897302),a=gg(a,b,c,d,k[5],5,-701558691),d=gg(d,a,b,c,k[10],9,38016083),c=gg(c,d,a,b,k[15],14,-660478335),b=gg(b,c,d,a,k[4],20,-405537848),a=gg(a,b,c,d,k[9],5,568446438),d=gg(d,a,b,c,k[14],9,-1019803690),c=gg(c,d,a,b,k[3],14,-187363961),b=gg(b,c,d,a,k[8],20,1163531501),a=gg(a,b,c,d,k[13],5,-1444681467),d=gg(d,a,b,c,k[2],9,-51403784),c=gg(c,d,a,b,k[7],14,1735328473),b=gg(b,c,d,a,k[12],20,-1926607734),a=hh(a,b,c,d,k[5],4,-378558),d=hh(d,a,b,c,k[8],11,-2022574463),c=hh(c,d,a,b,k[11],16,1839030562),b=hh(b,c,d,a,k[14],23,-35309556),a=hh(a,b,c,d,k[1],4,-1530992060),d=hh(d,a,b,c,k[4],11,1272893353),c=hh(c,d,a,b,k[7],16,-155497632),b=hh(b,c,d,a,k[10],23,-1094730640),a=hh(a,b,c,d,k[13],4,681279174),d=hh(d,a,b,c,k[0],11,-358537222),c=hh(c,d,a,b,k[3],16,-722521979),b=hh(b,c,d,a,k[6],23,76029189),a=hh(a,b,c,d,k[9],4,-640364487),d=hh(d,a,b,c,k[12],11,-421815835),c=hh(c,d,a,b,k[15],16,530742520),b=hh(b,c,d,a,k[2],23,-995338651),a=ii(a,b,c,d,k[0],6,-198630844),d=ii(d,a,b,c,k[7],10,1126891415),c=ii(c,d,a,b,k[14],15,-1416354905),b=ii(b,c,d,a,k[5],21,-57434055),a=ii(a,b,c,d,k[12],6,1700485571),d=ii(d,a,b,c,k[3],10,-1894986606),c=ii(c,d,a,b,k[10],15,-1051523),b=ii(b,c,d,a,k[1],21,-2054922799),a=ii(a,b,c,d,k[8],6,1873313359),d=ii(d,a,b,c,k[15],10,-30611744),c=ii(c,d,a,b,k[6],15,-1560198380),b=ii(b,c,d,a,k[13],21,1309151649),a=ii(a,b,c,d,k[4],6,-145523070),d=ii(d,a,b,c,k[11],10,-1120210379),c=ii(c,d,a,b,k[2],15,718787259),b=ii(b,c,d,a,k[9],21,-343485551),x[0]=add32(a,x[0]),x[1]=add32(b,x[1]),x[2]=add32(c,x[2]),x[3]=add32(d,x[3])}function md5blk(s){var i,md5blks=[];for(i=0;64>i;i+=4)md5blks[i>>2]=s.charCodeAt(i)+(s.charCodeAt(i+1)<<8)+(s.charCodeAt(i+2)<<16)+(s.charCodeAt(i+3)<<24);return md5blks}function md5blk_array(a){var i,md5blks=[];for(i=0;64>i;i+=4)md5blks[i>>2]=a[i]+(a[i+1]<<8)+(a[i+2]<<16)+(a[i+3]<<24);return md5blks}function md51(s){var i,length,tail,tmp,lo,hi,n=s.length,state=[1732584193,-271733879,-1732584194,271733878];for(i=64;n>=i;i+=64)md5cycle(state,md5blk(s.substring(i-64,i)));for(s=s.substring(i-64),length=s.length,tail=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],i=0;length>i;i+=1)tail[i>>2]|=s.charCodeAt(i)<<(i%4<<3);if(tail[i>>2]|=128<<(i%4<<3),i>55)for(md5cycle(state,tail),i=0;16>i;i+=1)tail[i]=0;return tmp=8*n,tmp=tmp.toString(16).match(/(.*?)(.{0,8})$/),lo=parseInt(tmp[2],16),hi=parseInt(tmp[1],16)||0,tail[14]=lo,tail[15]=hi,md5cycle(state,tail),state}function md51_array(a){var i,length,tail,tmp,lo,hi,n=a.length,state=[1732584193,-271733879,-1732584194,271733878];for(i=64;n>=i;i+=64)md5cycle(state,md5blk_array(a.subarray(i-64,i)));for(a=n>i-64?a.subarray(i-64):new Uint8Array(0),length=a.length,tail=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],i=0;length>i;i+=1)tail[i>>2]|=a[i]<<(i%4<<3);if(tail[i>>2]|=128<<(i%4<<3),i>55)for(md5cycle(state,tail),i=0;16>i;i+=1)tail[i]=0;return tmp=8*n,tmp=tmp.toString(16).match(/(.*?)(.{0,8})$/),lo=parseInt(tmp[2],16),hi=parseInt(tmp[1],16)||0,tail[14]=lo,tail[15]=hi,md5cycle(state,tail),state}function rhex(n){var j,s="";for(j=0;4>j;j+=1)s+=hex_chr[n>>8*j+4&15]+hex_chr[n>>8*j&15];return s}function hex(x){var i;for(i=0;i<x.length;i+=1)x[i]=rhex(x[i]);return x.join("")}function toUtf8(str){return/[\\u0080-\\uFFFF]/.test(str)&&(str=unescape(encodeURIComponent(str))),str}function utf8Str2ArrayBuffer(str,returnUInt8Array){var i,length=str.length,buff=new ArrayBuffer(length),arr=new Uint8Array(buff);for(i=0;length>i;i+=1)arr[i]=str.charCodeAt(i);return returnUInt8Array?arr:buff}function arrayBuffer2Utf8Str(buff){return String.fromCharCode.apply(null,new Uint8Array(buff))}function concatenateArrayBuffers(first,second,returnUInt8Array){var result=new Uint8Array(first.byteLength+second.byteLength);return result.set(new Uint8Array(first)),result.set(new Uint8Array(second),first.byteLength),returnUInt8Array?result:result.buffer}function hexToBinaryString(hex){var x,bytes=[],length=hex.length;for(x=0;length-1>x;x+=2)bytes.push(parseInt(hex.substr(x,2),16));return String.fromCharCode.apply(String,bytes)}function SparkMD5(){this.reset()}var add32=function(a,b){return a+b&4294967295},hex_chr=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"];return"5d41402abc4b2a76b9719d911017c592"!==hex(md51("hello"))&&(add32=function(x,y){var lsw=(65535&x)+(65535&y),msw=(x>>16)+(y>>16)+(lsw>>16);return msw<<16|65535&lsw}),"undefined"==typeof ArrayBuffer||ArrayBuffer.prototype.slice||!function(){function clamp(val,length){return val=0|val||0,0>val?Math.max(val+length,0):Math.min(val,length)}ArrayBuffer.prototype.slice=function(from,to){var num,target,targetArray,sourceArray,length=this.byteLength,begin=clamp(from,length),end=length;return to!==undefined&&(end=clamp(to,length)),begin>end?new ArrayBuffer(0):(num=end-begin,target=new ArrayBuffer(num),targetArray=new Uint8Array(target),sourceArray=new Uint8Array(this,begin,num),targetArray.set(sourceArray),target)}}(),SparkMD5.prototype.append=function(str){return this.appendBinary(toUtf8(str)),this},SparkMD5.prototype.appendBinary=function(contents){this._buff+=contents,this._length+=contents.length;var i,length=this._buff.length;for(i=64;length>=i;i+=64)md5cycle(this._hash,md5blk(this._buff.substring(i-64,i)));return this._buff=this._buff.substring(i-64),this},SparkMD5.prototype.end=function(raw){var i,ret,buff=this._buff,length=buff.length,tail=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(i=0;length>i;i+=1)tail[i>>2]|=buff.charCodeAt(i)<<(i%4<<3);return this._finish(tail,length),ret=hex(this._hash),raw&&(ret=hexToBinaryString(ret)),this.reset(),ret},SparkMD5.prototype.reset=function(){return this._buff="",this._length=0,this._hash=[1732584193,-271733879,-1732584194,271733878],this},SparkMD5.prototype.getState=function(){return{buff:this._buff,length:this._length,hash:this._hash}},SparkMD5.prototype.setState=function(state){return this._buff=state.buff,this._length=state.length,this._hash=state.hash,this},SparkMD5.prototype.destroy=function(){delete this._hash,delete this._buff,delete this._length},SparkMD5.prototype._finish=function(tail,length){var tmp,lo,hi,i=length;if(tail[i>>2]|=128<<(i%4<<3),i>55)for(md5cycle(this._hash,tail),i=0;16>i;i+=1)tail[i]=0;tmp=8*this._length,tmp=tmp.toString(16).match(/(.*?)(.{0,8})$/),lo=parseInt(tmp[2],16),hi=parseInt(tmp[1],16)||0,tail[14]=lo,tail[15]=hi,md5cycle(this._hash,tail)},SparkMD5.hash=function(str,raw){return SparkMD5.hashBinary(toUtf8(str),raw)},SparkMD5.hashBinary=function(content,raw){var hash=md51(content),ret=hex(hash);return raw?hexToBinaryString(ret):ret},SparkMD5.ArrayBuffer=function(){this.reset()},SparkMD5.ArrayBuffer.prototype.append=function(arr){var i,buff=concatenateArrayBuffers(this._buff.buffer,arr,!0),length=buff.length;for(this._length+=arr.byteLength,i=64;length>=i;i+=64)md5cycle(this._hash,md5blk_array(buff.subarray(i-64,i)));return this._buff=length>i-64?new Uint8Array(buff.buffer.slice(i-64)):new Uint8Array(0),this},SparkMD5.ArrayBuffer.prototype.end=function(raw){var i,ret,buff=this._buff,length=buff.length,tail=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(i=0;length>i;i+=1)tail[i>>2]|=buff[i]<<(i%4<<3);return this._finish(tail,length),ret=hex(this._hash),raw&&(ret=hexToBinaryString(ret)),this.reset(),ret},SparkMD5.ArrayBuffer.prototype.reset=function(){return this._buff=new Uint8Array(0),this._length=0,this._hash=[1732584193,-271733879,-1732584194,271733878],this},SparkMD5.ArrayBuffer.prototype.getState=function(){var state=SparkMD5.prototype.getState.call(this);return state.buff=arrayBuffer2Utf8Str(state.buff),state},SparkMD5.ArrayBuffer.prototype.setState=function(state){return state.buff=utf8Str2ArrayBuffer(state.buff,!0),SparkMD5.prototype.setState.call(this,state)},SparkMD5.ArrayBuffer.prototype.destroy=SparkMD5.prototype.destroy,SparkMD5.ArrayBuffer.prototype._finish=SparkMD5.prototype._finish,SparkMD5.ArrayBuffer.hash=function(arr,raw){var hash=md51_array(new Uint8Array(arr)),ret=hex(hash);return raw?hexToBinaryString(ret):ret},SparkMD5})},{}],18:[function(_dereq_,module,exports){"use strict";function pop(obj,stack,metaStack){var lastMetaElement=metaStack[metaStack.length-1];obj===lastMetaElement.element&&(metaStack.pop(),lastMetaElement=metaStack[metaStack.length-1]);var element=lastMetaElement.element,lastElementIndex=lastMetaElement.index;if(Array.isArray(element))element.push(obj);else if(lastElementIndex===stack.length-2){var key=stack.pop();element[key]=obj}else stack.push(obj)}exports.stringify=function(input){var queue=[];queue.push({obj:input});for(var next,obj,prefix,val,i,arrayPrefix,keys,k,key,value,objPrefix,res="";next=queue.pop();)if(obj=next.obj,prefix=next.prefix||"",val=next.val||"",res+=prefix,val)res+=val;else if("object"!=typeof obj)res+="undefined"==typeof obj?null:JSON.stringify(obj);else if(null===obj)res+="null";else if(Array.isArray(obj)){for(queue.push({val:"]"}),i=obj.length-1;i>=0;i--)arrayPrefix=0===i?"":",",queue.push({obj:obj[i],prefix:arrayPrefix});queue.push({val:"["})}else{keys=[];for(k in obj)obj.hasOwnProperty(k)&&keys.push(k);for(queue.push({val:"}"}),i=keys.length-1;i>=0;i--)key=keys[i],value=obj[key],objPrefix=i>0?",":"",objPrefix+=JSON.stringify(key)+":",queue.push({obj:value,prefix:objPrefix});queue.push({val:"{"})}return res},exports.parse=function(str){for(var collationIndex,parsedNum,numChar,parsedString,lastCh,numConsecutiveSlashes,ch,arrayElement,objElement,stack=[],metaStack=[],i=0;;)if(collationIndex=str[i++],"}"!==collationIndex&&"]"!==collationIndex&&"undefined"!=typeof collationIndex)switch(collationIndex){case" ":case"	":case"\\n":case":":case",":break;case"n":i+=3,pop(null,stack,metaStack);break;case"t":i+=3,pop(!0,stack,metaStack);break;case"f":i+=4,pop(!1,stack,metaStack);break;case"0":case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":case"-":for(parsedNum="",i--;;){if(numChar=str[i++],!/[\\d\\.\\-e\\+]/.test(numChar)){i--;break}parsedNum+=numChar}pop(parseFloat(parsedNum),stack,metaStack);break;case\'"\':for(parsedString="",lastCh=void 0,numConsecutiveSlashes=0;;){if(ch=str[i++],\'"\'===ch&&("\\\\"!==lastCh||numConsecutiveSlashes%2!==1))break;parsedString+=ch,lastCh=ch,"\\\\"===lastCh?numConsecutiveSlashes++:numConsecutiveSlashes=0}pop(JSON.parse(\'"\'+parsedString+\'"\'),stack,metaStack);break;case"[":arrayElement={element:[],index:stack.length},stack.push(arrayElement.element),metaStack.push(arrayElement);break;case"{":objElement={element:{},index:stack.length},stack.push(objElement.element),metaStack.push(objElement);break;default:throw new Error("unexpectedly reached end of input: "+collationIndex)}else{if(1===stack.length)return stack.pop();pop(stack.pop(),stack,metaStack)}}},{}]},{},[3])(3)});';
return loader.global.define=void 0,loader.global.module=void 0,loader.global.exports=void 0,loader.__exec({source:source,address:module.uri}),loader.global.require=require,loader.global.define=define,loader.get("@@global-helpers").retrieveGlobal(module.id,void 0)});
/*mev-domain-common@0.0.1#src/main/services/context/Context*/
define("mev-domain-common@0.0.1#src/main/services/context/Context",["lodash"],function(_){"use strict";function ngcomponent($state,$stateParams){_.extend(this,{root:function(){return $state.$current.locals.globals.project},current:function(){return $state.$current.path[$state.$current.path.length-1].locals.globals.analysis||$state.$current.path[$state.$current.path.length-1].locals.globals.dataset||$state.$current.path[$state.$current.path.length-1].locals.globals.project},setLevel:function(level){this.level=level||"root"},getLevel:function(){return this.level||"root"},get:function(level){var root=this.root();return"root"===level?root:"dataset"===level?root?root.dataset:void 0:this.current()}})}return ngcomponent.$inject=["$state","$stateParams"],ngcomponent.$name="mevContext",ngcomponent.$provider="service",ngcomponent});
/*mev-domain-common@0.0.1#src/main/services/selection/SelectionLocator*/
define("mev-domain-common@0.0.1#src/main/services/selection/SelectionLocator",["lodash"],function(_){function mevSelectionLocator(mevContext){this.find=function(dimension,level,param){var context=mevContext.current()||mevContext.root();if(level?context=mevContext.get(level):level=mevContext.getLevel()||"root",!context)return[];if("root"===level)return mevContext.root().dataset.selections[dimension];if(context.type){var selections=[];if(context.params&&context.params.control&&context.params.experiment){var name=_.isObject(context.params.control)?context.params.experiment.name+"+"+context.params.control.name:context.params.experiment+"+"+context.params.control,unionSet={name:name,keys:[]};_.transform(mevContext.root().dataset.selections[dimension],function(result,selection,index){context.params.dimension!==dimension||selection.name!==context.params.control&&selection.name!==context.params.experiment||(result.keys=_.union(result.keys,selection.keys))},unionSet),unionSet.keys.length>0&&selections.push(unionSet)}if(context.getFilteredKeys){var filteredKeys=context.getFilteredKeys(dimension);filteredKeys&&filteredKeys.length>0&&selections.push({name:"current filter",keys:filteredKeys})}if(context.getOriginalInputKeys){var filteredKeys=context.getOriginalInputKeys(dimension);filteredKeys&&filteredKeys.length>0&&selections.push({name:filteredKeys.displayName||"original "+dimension+" input",keys:filteredKeys})}return param&&"experiment"===param.id&&context.getExperiment&&selections.push(context.getExperiment()),param&&"control"===param.id&&context.getControl&&selections.push(context.getControl()),context.getSelections&&context.getSelections().map(function(selection){selection.selected=selection.checked||selection.selected,selections.push(selection)}),selections}return mevContext.root().dataset.selections[dimension]},this.row=function(){return this.find("row")},this.column=function(){return this.find("column")}}return mevSelectionLocator.$inject=["mevContext"],mevSelectionLocator.$name="mevSelectionLocator",mevSelectionLocator.$provider="service",mevSelectionLocator});
/*mev-domain-common@0.0.1#src/main/services/analysis/AnalysisLocator*/
define("mev-domain-common@0.0.1#src/main/services/analysis/AnalysisLocator",["lodash"],function(_){function mevAnalysisLocator(mevContext){function isAnalysisOfType(types,analysis){return _.find(types,function(type){return analysis.type===type})}this.find=function(type){var context=mevContext.current()||mevContext.root();if(context){if(_.isArray(type))return context.type&&isAnalysisOfType(type,context)?[context]:_.filter(mevContext.root().dataset.analyses,function(analysis){return isAnalysisOfType(type,analysis)});if(_.isString(type))return context.type&&context.type===type?[mevContext.current()]:_.filter(mevContext.root().dataset.analyses,function(analysis){return analysis.type===type});if(_.isObject(type)){if(!type.name)throw new Error("meAnalysisLocator - must specify analysis name: "+JSON.stringify(type));return _.find(mevContext.root().dataset.analyses,function(analysis){return analysis.name===type.name})}return mevContext.root().dataset.analysis}}}return mevAnalysisLocator.$inject=["mevContext"],mevAnalysisLocator.$name="mevAnalysisLocator",mevAnalysisLocator.$provider="service",mevAnalysisLocator});
/*mev-domain-common@0.0.1#src/main/services/annotations/AnnotationsLocator*/
define("mev-domain-common@0.0.1#src/main/services/annotations/AnnotationsLocator",[],function(){function mevSelectionLocator(mevContext,MevAnnotationRepository){this.find=function(dimension){var dataset=mevContext.root().dataset;return dataset.getAnnotations(dimension)},this.row=function(){return this.find("row")},this.column=function(){return this.find("column")}}return mevSelectionLocator.$inject=["mevContext","mevAnnotationRepository"],mevSelectionLocator.$name="mevAnnotationsLocator",mevSelectionLocator.$provider="service",mevSelectionLocator});
/*worker-pouch*/
!function(f){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=f();else if("function"==typeof define&&define.amd)define("worker-pouch",[],f);else{var g;g="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,g.workerPouch=f()}}(function(){return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(_dereq_,module,exports){"use strict";module.exports=function(code){function makeBlobURI(script){var blob=createBlob([script],{type:"text/javascript"});return URLCompat.createObjectURL(blob)}var createBlob=_dereq_(7).createBlob,URLCompat="undefined"!=typeof URL?URL:webkitURL,blob=createBlob([code],{type:"text/javascript"});return new Worker(makeBlobURI(blob))}},{7:7}],2:[function(_dereq_,module,exports){(function(global){"use strict";function WorkerPouch(opts,callback){function handleUncaughtError(content){try{api.emit("error",content)}catch(err){console.error("The user's map/reduce function threw an uncaught error.\nYou can debug this error by doing:\nmyDatabase.on('error', function (err) { debugger; });\nPlease double-check your map/reduce function."),console.error(content)}}function onReceiveMessage(message){var messageId=message.messageId,messageType=message.type,content=message.content;if("uncaughtError"===messageType)return void handleUncaughtError(content);var cb=api._callbacks[messageId];return cb?(log("receive message",api._instanceId,messageId,messageType,content),void("error"===messageType?(delete api._callbacks[messageId],cb(content)):"success"===messageType?(delete api._callbacks[messageId],cb(null,content)):api._changesListeners[messageId](content))):void log("duplicate message (ignoring)",messageId,messageType,content)}function workerListener(e){e.data.id===api._instanceId&&onReceiveMessage(e.data)}function sendMessage(type,args,callback){var messageId=uuid();log("send message",api._socketId,messageId,type,args),api._callbacks[messageId]=callback;var encodedArgs=encodeArgs(args);worker.postMessage({id:api._instanceId,type:type,messageId:messageId,args:encodedArgs}),log("message sent",api._instanceId,messageId)}function sendRawMessage(messageId,type,args){log("send message",api._socketId,messageId,type,args);var encodedArgs=encodeArgs(args);worker.postMessage({id:api._instanceId,type:type,messageId:messageId,args:encodedArgs}),log("message sent",api._instanceId,messageId)}var api=this;if("string"==typeof opts){var slashIdx=utils.lastIndexOf(opts,"/");opts={url:opts.substring(0,slashIdx),name:opts.substring(slashIdx+1)}}else opts=utils.clone(opts);if(log("constructor called",opts),!opts.name){var optsErrMessage="Error: you must provide a database name.";return console.error(optsErrMessage),callback(new Error(optsErrMessage))}api.type=function(){return"socket"},api._id=adapterFun("id",function(callback){sendMessage("id",[],callback)}),api.compact=adapterFun("compact",function(opts,callback){"function"==typeof opts&&(callback=opts,opts={}),sendMessage("compact",[opts],callback)}),api._info=function(callback){sendMessage("info",[],callback)},api.get=adapterFun("get",function(id,opts,callback){"function"==typeof opts&&(callback=opts,opts={}),sendMessage("get",[id,opts],callback)}),api.remove=adapterFun("remove",function(docOrId,optsOrRev,opts,callback){var doc;"string"==typeof optsOrRev?(doc={_id:docOrId,_rev:optsOrRev},"function"==typeof opts&&(callback=opts,opts={})):(doc=docOrId,"function"==typeof optsOrRev?(callback=optsOrRev,opts={}):(callback=opts,opts=optsOrRev));var rev=doc._rev||opts.rev;sendMessage("remove",[doc._id,rev],callback)}),api.getAttachment=adapterFun("getAttachment",function(docId,attachmentId,opts,callback){"function"==typeof opts&&(callback=opts,opts={}),sendMessage("getAttachment",[docId,attachmentId,opts],callback)}),api.removeAttachment=adapterFun("removeAttachment",function(docId,attachmentId,rev,callback){sendMessage("removeAttachment",[docId,attachmentId,rev],callback)}),api.putAttachment=adapterFun("putAttachment",function(docId,attachmentId,rev,blob,type,callback){if("function"==typeof type&&(callback=type,type=blob,blob=rev,rev=null),"undefined"==typeof type&&(type=blob,blob=rev,rev=null),"string"==typeof blob){var binary;try{binary=atob(blob)}catch(err){return callback(errors.error(errors.BAD_ARG,"Attachments need to be base64 encoded"))}blob=utils.createBlob([utils.binaryStringToArrayBuffer(binary)],{type:type})}var args=[docId,attachmentId,rev,blob,type];sendMessage("putAttachment",args,callback)}),api.put=adapterFun("put",utils.getArguments(function(args){var temp,temptype,opts,doc=args.shift(),id="_id"in doc,callback=args.pop();return"object"!=typeof doc||Array.isArray(doc)?callback(errors.error(errors.NOT_AN_OBJECT)):(doc=utils.clone(doc),void preprocessAttachments(doc).then(function(){for(;;)if(temp=args.shift(),temptype=typeof temp,"string"!==temptype||id?"string"!==temptype||!id||"_rev"in doc?"object"===temptype&&(opts=utils.clone(temp)):doc._rev=temp:(doc._id=temp,id=!0),!args.length)break;opts=opts||{},sendMessage("put",[doc,opts],callback)})["catch"](callback))})),api.post=adapterFun("post",function(doc,opts,callback){"function"==typeof opts&&(callback=opts,opts={}),opts=utils.clone(opts),sendMessage("post",[doc,opts],callback)}),api._bulkDocs=function(req,opts,callback){sendMessage("bulkDocs",[req,opts],callback)},api._allDocs=function(opts,callback){"function"==typeof opts&&(callback=opts,opts={}),sendMessage("allDocs",[opts],callback)},api._changes=function(opts){if(opts=utils.clone(opts),opts.continuous){var messageId=uuid();return api._changesListeners[messageId]=opts.onChange,api._callbacks[messageId]=opts.complete,sendRawMessage(messageId,"liveChanges",[opts]),{cancel:function(){sendRawMessage(messageId,"cancelChanges",[])}}}sendMessage("changes",[opts],function(err,res){return err?(opts.complete(err),callback(err)):(res.results.forEach(function(change){opts.onChange(change)}),(opts.returnDocs===!1||opts.return_docs===!1)&&(res.results=[]),void opts.complete(null,res))})},api.revsDiff=adapterFun("revsDiff",function(req,opts,callback){"function"==typeof opts&&(callback=opts,opts={}),sendMessage("revsDiff",[req,opts],callback)}),api._query=adapterFun("query",function(fun,opts,callback){"function"==typeof opts&&(callback=opts,opts={});var funEncoded=fun;"function"==typeof fun&&(funEncoded={map:fun}),sendMessage("query",[funEncoded,opts],callback)}),api._viewCleanup=adapterFun("viewCleanup",function(callback){sendMessage("viewCleanup",[],callback)}),api._close=function(callback){callback()},api.destroy=adapterFun("destroy",function(opts,callback){"function"==typeof opts&&(callback=opts,opts={}),sendMessage("destroy",[],function(err,res){return err?(api.emit("error",err),callback(err)):(worker.removeEventListener("message",workerListener),api.emit("destroyed"),api.constructor.emit("destroyed",api._name),void callback(null,res))})}),api._instanceId=opts.originalName,api._callbacks={},api._changesListeners={},api._name=opts.originalName,worker.addEventListener("message",workerListener),sendMessage("createDatabase",[{name:api._name,auto_compaction:!!opts.auto_compaction}],function(err){return err?callback(err):void callback(null,api)})}var worker,utils=_dereq_(7),clientUtils=_dereq_(4),uuid=_dereq_(8),errors=_dereq_(5),log=_dereq_(10)("pouchdb:worker:client"),preprocessAttachments=clientUtils.preprocessAttachments,encodeArgs=clientUtils.encodeArgs,adapterFun=clientUtils.adapterFun,isSupportedBrowser=_dereq_(3),createWorker=_dereq_(1);try{worker=createWorker(_dereq_(9)),worker.addEventListener("error",function(e){"console"in global&&"warn"in console&&console.warn("worker threw an error",e.error)})}catch(e){"console"in global&&"info"in console&&console.info("This browser is not supported by WorkerPouch. Please use isSupportedBrowser() to check.",e)}WorkerPouch.valid=function(){return!0},WorkerPouch.isSupportedBrowser=isSupportedBrowser,module.exports=WorkerPouch,"undefined"!=typeof window&&window.PouchDB&&window.PouchDB.adapter("worker",module.exports)}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{1:1,10:10,3:3,4:4,5:5,7:7,8:8,9:9}],3:[function(_dereq_,module,exports){(function(global){"use strict";var Promise=_dereq_(15),createWorker=_dereq_(1);module.exports=function(){return Promise.resolve().then(function(){var worker=createWorker('self.onmessage = function () {  self.postMessage({    hasIndexedDB: (typeof indexedDB !== "undefined")  });};');return new Promise(function(resolve,reject){function listener(e){return worker.terminate(),e.data.hasIndexedDB?void resolve():void reject()}function errorListener(){worker.terminate(),reject()}worker.addEventListener("error",errorListener),worker.addEventListener("message",listener),worker.postMessage({})})}).then(function(){return!0},function(err){return"console"in global&&"info"in console&&console.info("This browser is not supported by WorkerPouch",err),!1})}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{1:1,15:15}],4:[function(_dereq_,module,exports){(function(process){"use strict";function encodeObjectArg(arg){var funcKeys=["filter","map","reduce"],keysToRemove=["onChange","processChange","complete"],clonedArg={};return Object.keys(arg).forEach(function(key){-1===keysToRemove.indexOf(key)&&(-1!==funcKeys.indexOf(key)&&"function"==typeof arg[key]?clonedArg[key]={type:"func",func:arg[key].toString()}:clonedArg[key]=arg[key])}),clonedArg}var utils=_dereq_(7),log=_dereq_(10)("pouchdb:socket:client"),isBrowser="undefined"==typeof process||process.browser;exports.preprocessAttachments=function(doc){return doc._attachments&&Object.keys(doc._attachments)?utils.Promise.all(Object.keys(doc._attachments).map(function(key){var attachment=doc._attachments[key];if(attachment.data&&"string"!=typeof attachment.data){if(isBrowser)return new utils.Promise(function(resolve){utils.readAsBinaryString(attachment.data,function(binary){attachment.data=btoa(binary),resolve()})});attachment.data=attachment.data.toString("base64")}})):utils.Promise.resolve()},exports.encodeArgs=function(args){var result=[];return args.forEach(function(arg){null===arg||"object"!=typeof arg||Array.isArray(arg)||arg instanceof Blob||arg instanceof Date?result.push(arg):result.push(encodeObjectArg(arg))}),result},exports.padInt=function(i,len){for(var res=i.toString();res.length<len;)res="0"+res;return res},exports.adapterFun=function(name,callback){function logApiCall(self,name,args){if(log.enabled){for(var logArgs=[self._db_name,name],i=0;i<args.length-1;i++)logArgs.push(args[i]);log.apply(null,logArgs);var origCallback=args[args.length-1];args[args.length-1]=function(err,res){var responseArgs=[self._db_name,name];responseArgs=responseArgs.concat(err?["error",err]:["success",res]),log.apply(null,responseArgs),origCallback(err,res)}}}return utils.toPromise(utils.getArguments(function(args){if(this._closed)return utils.Promise.reject(new Error("database is closed"));var self=this;return logApiCall(self,name,args),this.taskqueue.isReady?callback.apply(this,args):new utils.Promise(function(fulfill,reject){self.taskqueue.addTask(function(failed){failed?reject(failed):fulfill(self[name].apply(self,args))})})}))}}).call(this,_dereq_(19))},{10:10,19:19,7:7}],5:[function(_dereq_,module,exports){"use strict";function PouchError(opts){Error.call(opts.reason),this.status=opts.status,this.name=opts.error,this.message=opts.reason,this.error=!0}var inherits=_dereq_(12);inherits(PouchError,Error),PouchError.prototype.toString=function(){return JSON.stringify({status:this.status,name:this.name,message:this.message})},exports.UNAUTHORIZED=new PouchError({status:401,error:"unauthorized",reason:"Name or password is incorrect."}),exports.MISSING_BULK_DOCS=new PouchError({status:400,error:"bad_request",reason:"Missing JSON list of 'docs'"}),exports.MISSING_DOC=new PouchError({status:404,error:"not_found",reason:"missing"}),exports.REV_CONFLICT=new PouchError({status:409,error:"conflict",reason:"Document update conflict"}),exports.INVALID_ID=new PouchError({status:400,error:"invalid_id",reason:"_id field must contain a string"}),exports.MISSING_ID=new PouchError({status:412,error:"missing_id",reason:"_id is required for puts"}),exports.RESERVED_ID=new PouchError({status:400,error:"bad_request",reason:"Only reserved document ids may start with underscore."}),exports.NOT_OPEN=new PouchError({status:412,error:"precondition_failed",reason:"Database not open"}),exports.UNKNOWN_ERROR=new PouchError({status:500,error:"unknown_error",reason:"Database encountered an unknown error"}),exports.BAD_ARG=new PouchError({status:500,error:"badarg",reason:"Some query argument is invalid"}),exports.INVALID_REQUEST=new PouchError({status:400,error:"invalid_request",reason:"Request was invalid"}),exports.QUERY_PARSE_ERROR=new PouchError({status:400,error:"query_parse_error",reason:"Some query parameter is invalid"}),exports.DOC_VALIDATION=new PouchError({status:500,error:"doc_validation",reason:"Bad special document member"}),exports.BAD_REQUEST=new PouchError({status:400,error:"bad_request",reason:"Something wrong with the request"}),exports.NOT_AN_OBJECT=new PouchError({status:400,error:"bad_request",reason:"Document must be a JSON object"}),exports.DB_MISSING=new PouchError({status:404,error:"not_found",reason:"Database not found"}),exports.IDB_ERROR=new PouchError({status:500,error:"indexed_db_went_bad",reason:"unknown"}),exports.WSQ_ERROR=new PouchError({status:500,error:"web_sql_went_bad",reason:"unknown"}),exports.LDB_ERROR=new PouchError({status:500,error:"levelDB_went_went_bad",reason:"unknown"}),exports.FORBIDDEN=new PouchError({status:403,error:"forbidden",reason:"Forbidden by design doc validate_doc_update function"}),exports.INVALID_REV=new PouchError({status:400,error:"bad_request",reason:"Invalid rev format"}),exports.FILE_EXISTS=new PouchError({status:412,error:"file_exists",reason:"The database could not be created, the file already exists."}),exports.MISSING_STUB=new PouchError({status:412,error:"missing_stub"}),exports.error=function(error,reason,name){function CustomPouchError(reason){for(var p in error)"function"!=typeof error[p]&&(this[p]=error[p]);void 0!==name&&(this.name=name),void 0!==reason&&(this.reason=reason)}return CustomPouchError.prototype=PouchError.prototype,new CustomPouchError(reason)},exports.getErrorTypeByProp=function(prop,value,reason){var errors=exports,keys=Object.keys(errors).filter(function(key){var error=errors[key];return"function"!=typeof error&&error[prop]===value}),key=reason&&keys.filter(function(key){var error=errors[key];return error.message===reason})[0]||keys[0];return key?errors[key]:null},exports.generateErrorFromResponse=function(res){var error,errName,errType,errMsg,errReason,errors=exports;return errName=res.error===!0&&"string"==typeof res.name?res.name:res.error,errReason=res.reason,errType=errors.getErrorTypeByProp("name",errName,errReason),res.missing||"missing"===errReason||"deleted"===errReason||"not_found"===errName?errType=errors.MISSING_DOC:"doc_validation"===errName?(errType=errors.DOC_VALIDATION,errMsg=errReason):"bad_request"===errName&&errType.message!==errReason&&(0===errReason.indexOf("unknown stub attachment")?(errType=errors.MISSING_STUB,errMsg=errReason):errType=errors.BAD_REQUEST),errType||(errType=errors.getErrorTypeByProp("status",res.status,errReason)||errors.UNKNOWN_ERROR),error=errors.error(errType,errReason,errName),errMsg&&(error.message=errMsg),res.id&&(error.id=res.id),res.status&&(error.status=res.status),res.statusText&&(error.name=res.statusText),res.missing&&(error.missing=res.missing),error}},{12:12}],6:[function(_dereq_,module,exports){"use strict";function isBinaryObject(object){return object instanceof ArrayBuffer||"undefined"!=typeof Blob&&object instanceof Blob}function cloneArrayBuffer(buff){if("function"==typeof buff.slice)return buff.slice(0);var target=new ArrayBuffer(buff.byteLength),targetArray=new Uint8Array(target),sourceArray=new Uint8Array(buff);return targetArray.set(sourceArray),target}function cloneBinaryObject(object){return object instanceof ArrayBuffer?cloneArrayBuffer(object):object.slice(0,object.size,object.type)}module.exports=function clone(object){var newObject,i,len;if(!object||"object"!=typeof object)return object;if(Array.isArray(object)){for(newObject=[],i=0,len=object.length;len>i;i++)newObject[i]=clone(object[i]);return newObject}if(object instanceof Date)return object.toISOString();if(isBinaryObject(object))return cloneBinaryObject(object);newObject={};for(i in object)if(Object.prototype.hasOwnProperty.call(object,i)){var value=clone(object[i]);"undefined"!=typeof value&&(newObject[i]=value)}return newObject}},{}],7:[function(_dereq_,module,exports){(function(process){"use strict";var Promise=_dereq_(15);exports.lastIndexOf=function(str,char){for(var i=str.length-1;i>=0;i--)if(str.charAt(i)===char)return i;return-1},exports.clone=_dereq_(6),exports.once=function(fun){var called=!1;return exports.getArguments(function(args){if(called)throw console.trace(),new Error("once called  more than once");called=!0,fun.apply(this,args)})},exports.getArguments=function(fun){return function(){for(var len=arguments.length,args=new Array(len),i=-1;++i<len;)args[i]=arguments[i];return fun.call(this,args)}},exports.toPromise=function(func){return exports.getArguments(function(args){var usedCB,self=this,tempCB="function"==typeof args[args.length-1]?args.pop():!1;tempCB&&(usedCB=function(err,resp){process.nextTick(function(){tempCB(err,resp)})});var promise=new Promise(function(fulfill,reject){try{var callback=exports.once(function(err,mesg){err?reject(err):fulfill(mesg)});args.push(callback),func.apply(self,args)}catch(e){reject(e)}});return usedCB&&promise.then(function(result){usedCB(null,result)},usedCB),promise.cancel=function(){return this},promise})},exports.inherits=_dereq_(12),exports.Promise=Promise;var binUtil=_dereq_(14);exports.createBlob=binUtil.createBlob,exports.readAsArrayBuffer=binUtil.readAsArrayBuffer,exports.readAsBinaryString=binUtil.readAsBinaryString,exports.binaryStringToArrayBuffer=binUtil.binaryStringToArrayBuffer,exports.arrayBufferToBinaryString=binUtil.arrayBufferToBinaryString}).call(this,_dereq_(19))},{12:12,14:14,15:15,19:19,6:6}],8:[function(_dereq_,module,exports){"use strict";function getValue(radix){return 0|Math.random()*radix}function uuid(len,radix){radix=radix||chars.length;var out="",i=-1;if(len){for(;++i<len;)out+=chars[getValue(radix)];return out}for(;++i<36;)switch(i){case 8:case 13:case 18:case 23:out+="-";break;case 19:out+=chars[3&getValue(16)|8];break;default:out+=chars[getValue(16)]}return out}var chars="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split("");module.exports=uuid},{}],9:[function(_dereq_,module,exports){module.exports="(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nvar inherits = require('inherits');\ninherits(PouchError, Error);\n\nfunction PouchError(opts) {\n  Error.call(opts.reason);\n  this.status = opts.status;\n  this.name = opts.error;\n  this.message = opts.reason;\n  this.error = true;\n}\n\nPouchError.prototype.toString = function () {\n  return JSON.stringify({\n    status: this.status,\n    name: this.name,\n    message: this.message\n  });\n};\n\nexports.UNAUTHORIZED = new PouchError({\n  status: 401,\n  error: 'unauthorized',\n  reason: \"Name or password is incorrect.\"\n});\n\nexports.MISSING_BULK_DOCS = new PouchError({\n  status: 400,\n  error: 'bad_request',\n  reason: \"Missing JSON list of 'docs'\"\n});\n\nexports.MISSING_DOC = new PouchError({\n  status: 404,\n  error: 'not_found',\n  reason: 'missing'\n});\n\nexports.REV_CONFLICT = new PouchError({\n  status: 409,\n  error: 'conflict',\n  reason: 'Document update conflict'\n});\n\nexports.INVALID_ID = new PouchError({\n  status: 400,\n  error: 'invalid_id',\n  reason: '_id field must contain a string'\n});\n\nexports.MISSING_ID = new PouchError({\n  status: 412,\n  error: 'missing_id',\n  reason: '_id is required for puts'\n});\n\nexports.RESERVED_ID = new PouchError({\n  status: 400,\n  error: 'bad_request',\n  reason: 'Only reserved document ids may start with underscore.'\n});\n\nexports.NOT_OPEN = new PouchError({\n  status: 412,\n  error: 'precondition_failed',\n  reason: 'Database not open'\n});\n\nexports.UNKNOWN_ERROR = new PouchError({\n  status: 500,\n  error: 'unknown_error',\n  reason: 'Database encountered an unknown error'\n});\n\nexports.BAD_ARG = new PouchError({\n  status: 500,\n  error: 'badarg',\n  reason: 'Some query argument is invalid'\n});\n\nexports.INVALID_REQUEST = new PouchError({\n  status: 400,\n  error: 'invalid_request',\n  reason: 'Request was invalid'\n});\n\nexports.QUERY_PARSE_ERROR = new PouchError({\n  status: 400,\n  error: 'query_parse_error',\n  reason: 'Some query parameter is invalid'\n});\n\nexports.DOC_VALIDATION = new PouchError({\n  status: 500,\n  error: 'doc_validation',\n  reason: 'Bad special document member'\n});\n\nexports.BAD_REQUEST = new PouchError({\n  status: 400,\n  error: 'bad_request',\n  reason: 'Something wrong with the request'\n});\n\nexports.NOT_AN_OBJECT = new PouchError({\n  status: 400,\n  error: 'bad_request',\n  reason: 'Document must be a JSON object'\n});\n\nexports.DB_MISSING = new PouchError({\n  status: 404,\n  error: 'not_found',\n  reason: 'Database not found'\n});\n\nexports.IDB_ERROR = new PouchError({\n  status: 500,\n  error: 'indexed_db_went_bad',\n  reason: 'unknown'\n});\n\nexports.WSQ_ERROR = new PouchError({\n  status: 500,\n  error: 'web_sql_went_bad',\n  reason: 'unknown'\n});\n\nexports.LDB_ERROR = new PouchError({\n  status: 500,\n  error: 'levelDB_went_went_bad',\n  reason: 'unknown'\n});\n\nexports.FORBIDDEN = new PouchError({\n  status: 403,\n  error: 'forbidden',\n  reason: 'Forbidden by design doc validate_doc_update function'\n});\n\nexports.INVALID_REV = new PouchError({\n  status: 400,\n  error: 'bad_request',\n  reason: 'Invalid rev format'\n});\n\nexports.FILE_EXISTS = new PouchError({\n  status: 412,\n  error: 'file_exists',\n  reason: 'The database could not be created, the file already exists.'\n});\n\nexports.MISSING_STUB = new PouchError({\n  status: 412,\n  error: 'missing_stub'\n});\n\nexports.error = function (error, reason, name) {\n  function CustomPouchError(reason) {\n    // inherit error properties from our parent error manually\n    // so as to allow proper JSON parsing.\n    /* jshint ignore:start */\n    for (var p in error) {\n      if (typeof error[p] !== 'function') {\n        this[p] = error[p];\n      }\n    }\n    /* jshint ignore:end */\n    if (name !== undefined) {\n      this.name = name;\n    }\n    if (reason !== undefined) {\n      this.reason = reason;\n    }\n  }\n  CustomPouchError.prototype = PouchError.prototype;\n  return new CustomPouchError(reason);\n};\n\n// Find one of the errors defined above based on the value\n// of the specified property.\n// If reason is provided prefer the error matching that reason.\n// This is for differentiating between errors with the same name and status,\n// eg, bad_request.\nexports.getErrorTypeByProp = function (prop, value, reason) {\n  var errors = exports;\n  var keys = Object.keys(errors).filter(function (key) {\n    var error = errors[key];\n    return typeof error !== 'function' && error[prop] === value;\n  });\n  var key = reason && keys.filter(function (key) {\n      var error = errors[key];\n      return error.message === reason;\n    })[0] || keys[0];\n  return (key) ? errors[key] : null;\n};\n\nexports.generateErrorFromResponse = function (res) {\n  var error, errName, errType, errMsg, errReason;\n  var errors = exports;\n\n  errName = (res.error === true && typeof res.name === 'string') ?\n    res.name :\n    res.error;\n  errReason = res.reason;\n  errType = errors.getErrorTypeByProp('name', errName, errReason);\n\n  if (res.missing ||\n    errReason === 'missing' ||\n    errReason === 'deleted' ||\n    errName === 'not_found') {\n    errType = errors.MISSING_DOC;\n  } else if (errName === 'doc_validation') {\n    // doc validation needs special treatment since\n    // res.reason depends on the validation error.\n    // see utils.js\n    errType = errors.DOC_VALIDATION;\n    errMsg = errReason;\n  } else if (errName === 'bad_request' && errType.message !== errReason) {\n    // if bad_request error already found based on reason don't override.\n\n    // attachment errors.\n    if (errReason.indexOf('unknown stub attachment') === 0) {\n      errType = errors.MISSING_STUB;\n      errMsg = errReason;\n    } else {\n      errType = errors.BAD_REQUEST;\n    }\n  }\n\n  // fallback to error by statys or unknown error.\n  if (!errType) {\n    errType = errors.getErrorTypeByProp('status', res.status, errReason) ||\n    errors.UNKNOWN_ERROR;\n  }\n\n  error = errors.error(errType, errReason, errName);\n\n  // Keep custom message.\n  if (errMsg) {\n    error.message = errMsg;\n  }\n\n  // Keep helpful response data in our error messages.\n  if (res.id) {\n    error.id = res.id;\n  }\n  if (res.status) {\n    error.status = res.status;\n  }\n  if (res.statusText) {\n    error.name = res.statusText;\n  }\n  if (res.missing) {\n    error.missing = res.missing;\n  }\n\n  return error;\n};\n\n},{\"inherits\":10}],2:[function(require,module,exports){\n'use strict';\n\n/* jshint worker:true */\n\nvar Promise = require('pouchdb/extras/promise');\nvar errors = require('../shared/errors');\nvar workerUtils = require('./utils');\nvar makePouchCreator = require('./make-pouch-creator');\nvar decodeArgs = workerUtils.decodeArgs;\nvar dbs = {};\nvar allChanges = {};\n\nvar log = require('debug')('pouchdb:worker');\n\nfunction sendUncaughtError(clientId, data) {\n  log(' -> sendUncaughtError', clientId, data);\n  self.postMessage({\n    type: 'uncaughtError',\n    id: clientId,\n    content: workerUtils.createError(data)\n  });\n}\n\nfunction sendError(clientId, messageId, data) {\n  log(' -> sendError', clientId, messageId, data);\n  self.postMessage({\n    type: 'error',\n    id: clientId,\n    messageId: messageId,\n    content: workerUtils.createError(data)\n  });\n}\n\nfunction sendSuccess(clientId, messageId, data) {\n  log(' -> sendSuccess', clientId, messageId);\n  self.postMessage({\n    type: 'success',\n    id: clientId,\n    messageId: messageId,\n    content: data\n  });\n}\n\nfunction sendUpdate(clientId, messageId, data) {\n  log(' -> sendUpdate', clientId, messageId);\n  self.postMessage({\n    type: 'update',\n    id: clientId,\n    messageId: messageId,\n    content: data\n  });\n}\n\nfunction dbMethod(clientId, methodName, messageId, args) {\n  var db = dbs['$' + clientId];\n  if (!db) {\n    return sendError(clientId, messageId, {error: 'db not found'});\n  }\n  Promise.resolve().then(function () {\n    return db;\n  }).then(function (res) {\n    var db = res.pouch;\n    return db[methodName].apply(db, args);\n  }).then(function (res) {\n    sendSuccess(clientId, messageId, res);\n  }).catch(function (err) {\n    sendError(clientId, messageId, err);\n  });\n}\n\nfunction changes(clientId, messageId, args) {\n  var opts = args[0];\n  if (opts && typeof opts === 'object') {\n    // just send all the docs anyway because we need to emit change events\n    // TODO: be smarter about emitting changes without building up an array\n    opts.returnDocs = true;\n    opts.return_docs = true;\n  }\n  dbMethod(clientId, 'changes', messageId, args);\n}\n\nfunction getAttachment(clientId, messageId, args) {\n  var db = dbs['$' + clientId];\n  if (!db) {\n    return sendError(clientId, messageId, {error: 'db not found'});\n  }\n\n  Promise.resolve().then(function () {\n    return db;\n  }).then(function (res) {\n    var db = res.pouch;\n    var docId = args[0];\n    var attId = args[1];\n    var opts = args[2];\n    if (typeof opts !== 'object') {\n      opts = {};\n    }\n    return db.get(docId, opts).then(function (doc) {\n      if (!doc._attachments || !doc._attachments[attId]) {\n        throw errors.MISSING_DOC;\n      }\n      return db.getAttachment.apply(db, args).then(function (buff) {\n        sendSuccess(clientId, messageId, buff);\n      });\n    });\n  }).catch(function (err) {\n    sendError(clientId, messageId, err);\n  });\n}\n\nfunction destroy(clientId, messageId, args) {\n  var key = '$' + clientId;\n  var db = dbs[key];\n  if (!db) {\n    return sendError(clientId, messageId, {error: 'db not found'});\n  }\n  delete dbs[key];\n\n  Promise.resolve().then(function () {\n    return db;\n  }).then(function (res) {\n    var db = res.pouch;\n    return db.destroy.apply(db, args);\n  }).then(function (res) {\n    sendSuccess(clientId, messageId, res);\n  }).catch(function (err) {\n    sendError(clientId, messageId, err);\n  });\n}\n\nfunction liveChanges(clientId, messageId, args) {\n  var db = dbs['$' + clientId];\n  if (!db) {\n    return sendError(clientId, messageId, {error: 'db not found'});\n  }\n  Promise.resolve().then(function () {\n    return db;\n  }).then(function (res) {\n    var db = res.pouch;\n    var changes = db.changes(args[0]);\n    allChanges[messageId] = changes;\n    changes.on('change', function (change) {\n      sendUpdate(clientId, messageId, change);\n    }).on('complete', function (change) {\n      changes.removeAllListeners();\n      delete allChanges[messageId];\n      sendSuccess(clientId, messageId, change);\n    }).on('error', function (change) {\n      changes.removeAllListeners();\n      delete allChanges[messageId];\n      sendError(clientId, messageId, change);\n    });\n  });\n}\n\nfunction cancelChanges(messageId) {\n  var changes = allChanges[messageId];\n  if (changes) {\n    changes.cancel();\n  }\n}\n\nfunction addUncaughtErrorHandler(db, clientId) {\n  return db.then(function (res) {\n    res.pouch.on('error', function (err) {\n      sendUncaughtError(clientId, err);\n    });\n  });\n}\n\nfunction createDatabase(clientId, messageId, args, pouchCreator) {\n  var key = '$' + clientId;\n  var db = dbs[key];\n  if (db) {\n    return addUncaughtErrorHandler(db, clientId).then(function () {\n      sendSuccess(clientId, messageId, {ok: true, exists: true});\n    });\n  }\n\n  var name = typeof args[0] === 'string' ? args[0] : args[0].name;\n\n  if (!name) {\n    return sendError(clientId, messageId, {\n      error: 'you must provide a database name'\n    });\n  }\n\n  db = dbs[key] = pouchCreator(args);\n  addUncaughtErrorHandler(db, clientId).then(function () {\n    sendSuccess(clientId, messageId, {ok: true});\n  }).catch(function (err) {\n    sendError(clientId, messageId, err);\n  });\n}\n\nfunction onReceiveMessage(clientId, type, messageId, args, pouchCreator) {\n  log('onReceiveMessage', type, clientId, messageId, args);\n  switch (type) {\n    case 'createDatabase':\n      return createDatabase(clientId, messageId, args, pouchCreator);\n    case 'id':\n      sendSuccess(clientId, messageId, clientId);\n      return;\n    case 'info':\n    case 'put':\n    case 'allDocs':\n    case 'bulkDocs':\n    case 'post':\n    case 'get':\n    case 'remove':\n    case 'revsDiff':\n    case 'compact':\n    case 'viewCleanup':\n    case 'removeAttachment':\n    case 'putAttachment':\n    case 'query':\n      return dbMethod(clientId, type, messageId, args);\n    case 'changes':\n      return changes(clientId, messageId, args);\n    case 'getAttachment':\n      return getAttachment(clientId, messageId, args);\n    case 'liveChanges':\n      return liveChanges(clientId, messageId, args);\n    case 'cancelChanges':\n      return cancelChanges(messageId);\n    case 'destroy':\n      return destroy(clientId, messageId, args);\n    default:\n      return sendError(clientId, messageId, {error: 'unknown API method: ' + type});\n  }\n}\n\nfunction handleMessage(message, clientId, pouchCreator) {\n  var type = message.type;\n  var messageId = message.messageId;\n  var args = decodeArgs(message.args);\n  onReceiveMessage(clientId, type, messageId, args, pouchCreator);\n}\n\nvar options = {};\nvar pouchCreator = makePouchCreator(options);\n\nself.onmessage = function (event) {\n  var clientId = event.data.id;\n  if (event.data.type === 'close') {\n    log('closing socket', clientId);\n    delete dbs['$' + clientId];\n  } else {\n    handleMessage(event.data, clientId, pouchCreator);\n  }\n};\n},{\"../shared/errors\":1,\"./make-pouch-creator\":3,\"./utils\":5,\"debug\":7,\"pouchdb/extras/promise\":15}],3:[function(require,module,exports){\n'use strict';\n\nvar PouchDB = require('pouchdb');\nvar Promise = require('pouchdb/extras/promise');\n\nfunction createLocalPouch(args) {\n\n  if (typeof args[0] === 'string') {\n    args = [{name: args[0]}];\n  }\n\n  return Promise.resolve({\n    pouch: new PouchDB(args[0])\n  });\n}\n\nfunction createHttpPouch(options) {\n  var remoteUrl = options.remoteUrl;\n  // chop off last '/'\n  if (remoteUrl[remoteUrl.length - 1] === '/') {\n    remoteUrl = remoteUrl.substring(0, remoteUrl.length -1);\n  }\n  return function (args) {\n    if (typeof args[0] === 'string') {\n      args = [{name: args[0]}];\n    }\n    return Promise.resolve({\n      pouch: new PouchDB(remoteUrl + '/' + args[0].name)\n    });\n  };\n}\n\nfunction makePouchCreator(options) {\n  if (options.remoteUrl) {\n    return createHttpPouch(options);\n  }\n  if (!options.pouchCreator) {\n    return createLocalPouch;\n  }\n  return function (args) {\n    var name = typeof args[0] === 'string' ? args[0] : args[0].name;\n    var res = options.pouchCreator(name);\n    if (res instanceof PouchDB) {\n      return {pouch: res};\n    } else {\n      return res;\n    }\n  };\n}\n\nmodule.exports = makePouchCreator;\n},{\"pouchdb\":87,\"pouchdb/extras/promise\":15}],4:[function(require,module,exports){\n'use strict';\n\nvar log = require('debug')('pouchdb:worker');\n\nmodule.exports = function safeEval(str) {\n  log('safeEvaling', str);\n  var target = {};\n  /* jshint evil: true */\n  eval('target.target = (' + str + ');');\n  log('returning', target.target);\n  return target.target;\n};\n},{\"debug\":7}],5:[function(require,module,exports){\n'use strict';\n\nvar safeEval = require('./safe-eval');\n\n// mostly borrowed from express-pouchb's utils.sendError()\nexports.createError = function (err) {\n  var status = err.status || 500;\n\n  // last argument is optional\n  if (err.name && err.message) {\n    if (err.name === 'Error' || err.name === 'TypeError') {\n      if (err.message.indexOf(\"Bad special document member\") !== -1) {\n        err.name = 'doc_validation';\n        // add more clauses here if the error name is too general\n      } else {\n        err.name = 'bad_request';\n      }\n    }\n    err = {\n      error: err.name,\n      name: err.name,\n      reason: err.message,\n      message: err.message,\n      status: status\n    };\n  }\n  return err;\n};\n\nexports.decodeArgs = function decodeArgs(args) {\n  var funcArgs = ['filter', 'map', 'reduce'];\n  args.forEach(function (arg) {\n    if (typeof arg === 'object' && arg !== null && !Array.isArray(arg)) {\n      funcArgs.forEach(function (funcArg) {\n        if (funcArg in arg && arg[funcArg].type === 'func' && arg[funcArg].func) {\n          arg[funcArg] = safeEval(arg[funcArg].func);\n        }\n      });\n    }\n  });\n  return args;\n};\n},{\"./safe-eval\":4}],6:[function(require,module,exports){\n'use strict';\n\nmodule.exports = argsArray;\n\nfunction argsArray(fun) {\n  return function () {\n    var len = arguments.length;\n    if (len) {\n      var args = [];\n      var i = -1;\n      while (++i < len) {\n        args[i] = arguments[i];\n      }\n      return fun.call(this, args);\n    } else {\n      return fun.call(this, []);\n    }\n  };\n}\n},{}],7:[function(require,module,exports){\n\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return ('WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage(){\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n},{\"./debug\":8}],8:[function(require,module,exports){\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n},{\"ms\":11}],9:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        len = arguments.length;\n        args = new Array(len - 1);\n        for (i = 1; i < len; i++)\n          args[i - 1] = arguments[i];\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    len = arguments.length;\n    args = new Array(len - 1);\n    for (i = 1; i < len; i++)\n      args[i - 1] = arguments[i];\n\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    var m;\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  var ret;\n  if (!emitter._events || !emitter._events[type])\n    ret = 0;\n  else if (isFunction(emitter._events[type]))\n    ret = 1;\n  else\n    ret = emitter._events[type].length;\n  return ret;\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n},{}],10:[function(require,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n},{}],11:[function(require,module,exports){\n/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = '' + str;\n  if (str.length > 10000) return;\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n},{}],12:[function(require,module,exports){\n'use strict';\n\nvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\nvar MAGNITUDE_DIGITS = 3; // ditto\nvar SEP = ''; // set to '_' for easier debugging \n\nvar utils = require('./utils');\n\nexports.collate = function (a, b) {\n\n  if (a === b) {\n    return 0;\n  }\n\n  a = exports.normalizeKey(a);\n  b = exports.normalizeKey(b);\n\n  var ai = collationIndex(a);\n  var bi = collationIndex(b);\n  if ((ai - bi) !== 0) {\n    return ai - bi;\n  }\n  if (a === null) {\n    return 0;\n  }\n  switch (typeof a) {\n    case 'number':\n      return a - b;\n    case 'boolean':\n      return a === b ? 0 : (a < b ? -1 : 1);\n    case 'string':\n      return stringCollate(a, b);\n  }\n  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n};\n\n// couch considers null/NaN/Infinity/-Infinity === undefined,\n// for the purposes of mapreduce indexes. also, dates get stringified.\nexports.normalizeKey = function (key) {\n  switch (typeof key) {\n    case 'undefined':\n      return null;\n    case 'number':\n      if (key === Infinity || key === -Infinity || isNaN(key)) {\n        return null;\n      }\n      return key;\n    case 'object':\n      var origKey = key;\n      if (Array.isArray(key)) {\n        var len = key.length;\n        key = new Array(len);\n        for (var i = 0; i < len; i++) {\n          key[i] = exports.normalizeKey(origKey[i]);\n        }\n      } else if (key instanceof Date) {\n        return key.toJSON();\n      } else if (key !== null) { // generic object\n        key = {};\n        for (var k in origKey) {\n          if (origKey.hasOwnProperty(k)) {\n            var val = origKey[k];\n            if (typeof val !== 'undefined') {\n              key[k] = exports.normalizeKey(val);\n            }\n          }\n        }\n      }\n  }\n  return key;\n};\n\nfunction indexify(key) {\n  if (key !== null) {\n    switch (typeof key) {\n      case 'boolean':\n        return key ? 1 : 0;\n      case 'number':\n        return numToIndexableString(key);\n      case 'string':\n        // We've to be sure that key does not contain \\u0000\n        // Do order-preserving replacements:\n        // 0 -> 1, 1\n        // 1 -> 1, 2\n        // 2 -> 2, 2\n        return key\n          .replace(/\\u0002/g, '\\u0002\\u0002')\n          .replace(/\\u0001/g, '\\u0001\\u0002')\n          .replace(/\\u0000/g, '\\u0001\\u0001');\n      case 'object':\n        var isArray = Array.isArray(key);\n        var arr = isArray ? key : Object.keys(key);\n        var i = -1;\n        var len = arr.length;\n        var result = '';\n        if (isArray) {\n          while (++i < len) {\n            result += exports.toIndexableString(arr[i]);\n          }\n        } else {\n          while (++i < len) {\n            var objKey = arr[i];\n            result += exports.toIndexableString(objKey) +\n                exports.toIndexableString(key[objKey]);\n          }\n        }\n        return result;\n    }\n  }\n  return '';\n}\n\n// convert the given key to a string that would be appropriate\n// for lexical sorting, e.g. within a database, where the\n// sorting is the same given by the collate() function.\nexports.toIndexableString = function (key) {\n  var zero = '\\u0000';\n  key = exports.normalizeKey(key);\n  return collationIndex(key) + SEP + indexify(key) + zero;\n};\n\nfunction parseNumber(str, i) {\n  var originalIdx = i;\n  var num;\n  var zero = str[i] === '1';\n  if (zero) {\n    num = 0;\n    i++;\n  } else {\n    var neg = str[i] === '0';\n    i++;\n    var numAsString = '';\n    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n    if (neg) {\n      magnitude = -magnitude;\n    }\n    i += MAGNITUDE_DIGITS;\n    while (true) {\n      var ch = str[i];\n      if (ch === '\\u0000') {\n        break;\n      } else {\n        numAsString += ch;\n      }\n      i++;\n    }\n    numAsString = numAsString.split('.');\n    if (numAsString.length === 1) {\n      num = parseInt(numAsString, 10);\n    } else {\n      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n    }\n    if (neg) {\n      num = num - 10;\n    }\n    if (magnitude !== 0) {\n      // parseFloat is more reliable than pow due to rounding errors\n      // e.g. Number.MAX_VALUE would return Infinity if we did\n      // num * Math.pow(10, magnitude);\n      num = parseFloat(num + 'e' + magnitude);\n    }\n  }\n  return {num: num, length : i - originalIdx};\n}\n\n// move up the stack while parsing\n// this function moved outside of parseIndexableString for performance\nfunction pop(stack, metaStack) {\n  var obj = stack.pop();\n\n  if (metaStack.length) {\n    var lastMetaElement = metaStack[metaStack.length - 1];\n    if (obj === lastMetaElement.element) {\n      // popping a meta-element, e.g. an object whose value is another object\n      metaStack.pop();\n      lastMetaElement = metaStack[metaStack.length - 1];\n    }\n    var element = lastMetaElement.element;\n    var lastElementIndex = lastMetaElement.index;\n    if (Array.isArray(element)) {\n      element.push(obj);\n    } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n      var key = stack.pop();\n      element[key] = obj;\n    } else {\n      stack.push(obj); // obj with key only\n    }\n  }\n}\n\nexports.parseIndexableString = function (str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n\n  while (true) {\n    var collationIndex = str[i++];\n    if (collationIndex === '\\u0000') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case '1':\n        stack.push(null);\n        break;\n      case '2':\n        stack.push(str[i] === '1');\n        i++;\n        break;\n      case '3':\n        var parsedNum = parseNumber(str, i);\n        stack.push(parsedNum.num);\n        i += parsedNum.length;\n        break;\n      case '4':\n        var parsedStr = '';\n        while (true) {\n          var ch = str[i];\n          if (ch === '\\u0000') {\n            break;\n          }\n          parsedStr += ch;\n          i++;\n        }\n        // perform the reverse of the order-preserving replacement\n        // algorithm (see above)\n        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000')\n          .replace(/\\u0001\\u0002/g, '\\u0001')\n          .replace(/\\u0002\\u0002/g, '\\u0002');\n        stack.push(parsedStr);\n        break;\n      case '5':\n        var arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '6':\n        var objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      default:\n        throw new Error(\n          'bad collationIndex or unexpectedly reached end of input: ' + collationIndex);\n    }\n  }\n};\n\nfunction arrayCollate(a, b) {\n  var len = Math.min(a.length, b.length);\n  for (var i = 0; i < len; i++) {\n    var sort = exports.collate(a[i], b[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n  }\n  return (a.length === b.length) ? 0 :\n    (a.length > b.length) ? 1 : -1;\n}\nfunction stringCollate(a, b) {\n  // See: https://github.com/daleharvey/pouchdb/issues/40\n  // This is incompatible with the CouchDB implementation, but its the\n  // best we can do for now\n  return (a === b) ? 0 : ((a > b) ? 1 : -1);\n}\nfunction objectCollate(a, b) {\n  var ak = Object.keys(a), bk = Object.keys(b);\n  var len = Math.min(ak.length, bk.length);\n  for (var i = 0; i < len; i++) {\n    // First sort the keys\n    var sort = exports.collate(ak[i], bk[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n    // if the keys are equal sort the values\n    sort = exports.collate(a[ak[i]], b[bk[i]]);\n    if (sort !== 0) {\n      return sort;\n    }\n\n  }\n  return (ak.length === bk.length) ? 0 :\n    (ak.length > bk.length) ? 1 : -1;\n}\n// The collation is defined by erlangs ordered terms\n// the atoms null, true, false come first, then numbers, strings,\n// arrays, then objects\n// null/undefined/NaN/Infinity/-Infinity are all considered null\nfunction collationIndex(x) {\n  var id = ['boolean', 'number', 'string', 'object'];\n  var idx = id.indexOf(typeof x);\n  //false if -1 otherwise true, but fast!!!!1\n  if (~idx) {\n    if (x === null) {\n      return 1;\n    }\n    if (Array.isArray(x)) {\n      return 5;\n    }\n    return idx < 3 ? (idx + 2) : (idx + 3);\n  }\n  if (Array.isArray(x)) {\n    return 5;\n  }\n}\n\n// conversion:\n// x yyy zz...zz\n// x = 0 for negative, 1 for 0, 2 for positive\n// y = exponent (for negative numbers negated) moved so that it's >= 0\n// z = mantisse\nfunction numToIndexableString(num) {\n\n  if (num === 0) {\n    return '1';\n  }\n\n  // convert number to exponential format for easier and\n  // more succinct string sorting\n  var expFormat = num.toExponential().split(/e\\+?/);\n  var magnitude = parseInt(expFormat[1], 10);\n\n  var neg = num < 0;\n\n  var result = neg ? '0' : '2';\n\n  // first sort by magnitude\n  // it's easier if all magnitudes are positive\n  var magForComparison = ((neg ? -magnitude : magnitude) - MIN_MAGNITUDE);\n  var magString = utils.padLeft((magForComparison).toString(), '0', MAGNITUDE_DIGITS);\n\n  result += SEP + magString;\n\n  // then sort by the factor\n  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n  if (neg) { // for negative reverse ordering\n    factor = 10 - factor;\n  }\n\n  var factorStr = factor.toFixed(20);\n\n  // strip zeros from the end\n  factorStr = factorStr.replace(/\\.?0+$/, '');\n\n  result += SEP + factorStr;\n\n  return result;\n}\n\n},{\"./utils\":13}],13:[function(require,module,exports){\n'use strict';\n\nfunction pad(str, padWith, upToLength) {\n  var padding = '';\n  var targetLength = upToLength - str.length;\n  while (padding.length < targetLength) {\n    padding += padWith;\n  }\n  return padding;\n}\n\nexports.padLeft = function (str, padWith, upToLength) {\n  var padding = pad(str, padWith, upToLength);\n  return padding + str;\n};\n\nexports.padRight = function (str, padWith, upToLength) {\n  var padding = pad(str, padWith, upToLength);\n  return str + padding;\n};\n\nexports.stringLexCompare = function (a, b) {\n\n  var aLen = a.length;\n  var bLen = b.length;\n\n  var i;\n  for (i = 0; i < aLen; i++) {\n    if (i === bLen) {\n      // b is shorter substring of a\n      return 1;\n    }\n    var aChar = a.charAt(i);\n    var bChar = b.charAt(i);\n    if (aChar !== bChar) {\n      return aChar < bChar ? -1 : 1;\n    }\n  }\n\n  if (aLen < bLen) {\n    // a is shorter substring of b\n    return -1;\n  }\n\n  return 0;\n};\n\n/*\n * returns the decimal form for the given integer, i.e. writes\n * out all the digits (in base-10) instead of using scientific notation\n */\nexports.intToDecimalForm = function (int) {\n\n  var isNeg = int < 0;\n  var result = '';\n\n  do {\n    var remainder = isNeg ? -Math.ceil(int % 10) : Math.floor(int % 10);\n\n    result = remainder + result;\n    int = isNeg ? Math.ceil(int / 10) : Math.floor(int / 10);\n  } while (int);\n\n\n  if (isNeg && result !== '0') {\n    result = '-' + result;\n  }\n\n  return result;\n};\n},{}],14:[function(require,module,exports){\n'use strict';\nexports.Map = LazyMap; // TODO: use ES6 map\nexports.Set = LazySet; // TODO: use ES6 set\n// based on https://github.com/montagejs/collections\nfunction LazyMap() {\n  this.store = {};\n}\nLazyMap.prototype.mangle = function (key) {\n  if (typeof key !== \"string\") {\n    throw new TypeError(\"key must be a string but Got \" + key);\n  }\n  return '$' + key;\n};\nLazyMap.prototype.unmangle = function (key) {\n  return key.substring(1);\n};\nLazyMap.prototype.get = function (key) {\n  var mangled = this.mangle(key);\n  if (mangled in this.store) {\n    return this.store[mangled];\n  }\n  return void 0;\n};\nLazyMap.prototype.set = function (key, value) {\n  var mangled = this.mangle(key);\n  this.store[mangled] = value;\n  return true;\n};\nLazyMap.prototype.has = function (key) {\n  var mangled = this.mangle(key);\n  return mangled in this.store;\n};\nLazyMap.prototype.delete = function (key) {\n  var mangled = this.mangle(key);\n  if (mangled in this.store) {\n    delete this.store[mangled];\n    return true;\n  }\n  return false;\n};\nLazyMap.prototype.forEach = function (cb) {\n  var keys = Object.keys(this.store);\n  for (var i = 0, len = keys.length; i < len; i++) {\n    var key = keys[i];\n    var value = this.store[key];\n    key = this.unmangle(key);\n    cb(value, key);\n  }\n};\n\nfunction LazySet(array) {\n  this.store = new LazyMap();\n\n  // init with an array\n  if (array && Array.isArray(array)) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      this.add(array[i]);\n    }\n  }\n}\nLazySet.prototype.add = function (key) {\n  return this.store.set(key, true);\n};\nLazySet.prototype.has = function (key) {\n  return this.store.has(key);\n};\nLazySet.prototype.delete = function (key) {\n  return this.store.delete(key);\n};\n\n},{}],15:[function(require,module,exports){\n'use strict';\n\n// allow external plugins to require('pouchdb/extras/promise')\nmodule.exports = require('../lib/deps/promise');\n},{\"../lib/deps/promise\":81}],16:[function(require,module,exports){\n(function (process){\n\"use strict\";\n\nvar utils = require('./utils');\nvar errors = require('./deps/errors');\nvar EventEmitter = require('events').EventEmitter;\nvar upsert = require('./deps/upsert');\nvar Changes = require('./changes');\nvar bulkGetShim = require('./deps/bulkGetShim');\nvar Promise = utils.Promise;\nvar isDeleted = require('./deps/docs/isDeleted');\nvar isLocalId = require('./deps/docs/isLocalId');\nvar traverseRevTree = require('./deps/merge/traverseRevTree');\nvar collectLeaves = require('./deps/merge/collectLeaves');\nvar rootToLeaf = require('./deps/merge/rootToLeaf');\nvar collectConflicts = require('./deps/merge/collectConflicts');\n\n/*\n * A generic pouch adapter\n */\n\n// returns first element of arr satisfying callback predicate\nfunction arrayFirst(arr, callback) {\n  for (var i = 0; i < arr.length; i++) {\n    if (callback(arr[i], i) === true) {\n      return arr[i];\n    }\n  }\n  return false;\n}\n\n// Wrapper for functions that call the bulkdocs api with a single doc,\n// if the first result is an error, return an error\nfunction yankError(callback) {\n  return function (err, results) {\n    if (err || (results[0] && results[0].error)) {\n      callback(err || results[0]);\n    } else {\n      callback(null, results.length ? results[0]  : results);\n    }\n  };\n}\n\n// clean docs given to us by the user\nfunction cleanDocs(docs) {\n  for (var i = 0; i < docs.length; i++) {\n    var doc = docs[i];\n    if (doc._deleted) {\n      delete doc._attachments; // ignore atts for deleted docs\n    } else if (doc._attachments) {\n      // filter out extraneous keys from _attachments\n      var atts = Object.keys(doc._attachments);\n      for (var j = 0; j < atts.length; j++) {\n        var att = atts[j];\n        doc._attachments[att] = utils.pick(doc._attachments[att],\n          ['data', 'digest', 'content_type', 'length', 'revpos', 'stub']);\n      }\n    }\n  }\n}\n\n// compare two docs, first by _id then by _rev\nfunction compareByIdThenRev(a, b) {\n  var idCompare = utils.compare(a._id, b._id);\n  if (idCompare !== 0) {\n    return idCompare;\n  }\n  var aStart = a._revisions ? a._revisions.start : 0;\n  var bStart = b._revisions ? b._revisions.start : 0;\n  return utils.compare(aStart, bStart);\n}\n\n// for every node in a revision tree computes its distance from the closest\n// leaf\nfunction computeHeight(revs) {\n  var height = {};\n  var edges = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, prnt) {\n    var rev = pos + \"-\" + id;\n    if (isLeaf) {\n      height[rev] = 0;\n    }\n    if (prnt !== undefined) {\n      edges.push({from: prnt, to: rev});\n    }\n    return rev;\n  });\n\n  edges.reverse();\n  edges.forEach(function (edge) {\n    if (height[edge.from] === undefined) {\n      height[edge.from] = 1 + height[edge.to];\n    } else {\n      height[edge.from] = Math.min(height[edge.from], 1 + height[edge.to]);\n    }\n  });\n  return height;\n}\n\nfunction allDocsKeysQuery(api, opts, callback) {\n  var keys =  ('limit' in opts) ?\n      opts.keys.slice(opts.skip, opts.limit + opts.skip) :\n      (opts.skip > 0) ? opts.keys.slice(opts.skip) : opts.keys;\n  if (opts.descending) {\n    keys.reverse();\n  }\n  if (!keys.length) {\n    return api._allDocs({limit: 0}, callback);\n  }\n  var finalResults = {\n    offset: opts.skip\n  };\n  return Promise.all(keys.map(function (key) {\n    var subOpts = utils.extend({key: key, deleted: 'ok'}, opts);\n    ['limit', 'skip', 'keys'].forEach(function (optKey) {\n      delete subOpts[optKey];\n    });\n    return new Promise(function (resolve, reject) {\n      api._allDocs(subOpts, function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        finalResults.total_rows = res.total_rows;\n        resolve(res.rows[0] || {key: key, error: 'not_found'});\n      });\n    });\n  })).then(function (results) {\n    finalResults.rows = results;\n    return finalResults;\n  });\n}\n\n// all compaction is done in a queue, to avoid attaching\n// too many listeners at once\nfunction doNextCompaction(self) {\n  var task = self._compactionQueue[0];\n  var opts = task.opts;\n  var callback = task.callback;\n  self.get('_local/compaction').catch(function () {\n    return false;\n  }).then(function (doc) {\n    if (doc && doc.last_seq) {\n      opts.last_seq = doc.last_seq;\n    }\n    self._compact(opts, function (err, res) {\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, res);\n      }\n      process.nextTick(function () {\n        self._compactionQueue.shift();\n        if (self._compactionQueue.length) {\n          doNextCompaction(self);\n        }\n      });\n    });\n  });\n}\n\nfunction attachmentNameError(name) {\n  if (name.charAt(0) === '_') {\n    return name + 'is not a valid attachment name, attachment ' +\n      'names cannot start with \\'_\\'';\n  }\n  return false;\n}\n\nutils.inherits(AbstractPouchDB, EventEmitter);\nmodule.exports = AbstractPouchDB;\n\nfunction AbstractPouchDB() {\n  EventEmitter.call(this);\n}\n\nAbstractPouchDB.prototype.post =\n  utils.adapterFun('post', function (doc, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return callback(errors.error(errors.NOT_AN_OBJECT));\n  }\n  this.bulkDocs({docs: [doc]}, opts, yankError(callback));\n});\n\nAbstractPouchDB.prototype.put =\n  utils.adapterFun('put', utils.getArguments(function (args) {\n  var temp, temptype, opts, callback;\n  var doc = args.shift();\n  var id = '_id' in doc;\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    callback = args.pop();\n    return callback(errors.error(errors.NOT_AN_OBJECT));\n  }\n  while (true) {\n    temp = args.shift();\n    temptype = typeof temp;\n    if (temptype === \"string\" && !id) {\n      doc._id = temp;\n      id = true;\n    } else if (temptype === \"string\" && id && !('_rev' in doc)) {\n      doc._rev = temp;\n    } else if (temptype === \"object\") {\n      opts = temp;\n    } else if (temptype === \"function\") {\n      callback = temp;\n    }\n    if (!args.length) {\n      break;\n    }\n  }\n  opts = opts || {};\n  var error = utils.invalidIdError(doc._id);\n  if (error) {\n    return callback(error);\n  }\n  if (isLocalId(doc._id) && typeof this._putLocal === 'function') {\n    if (doc._deleted) {\n      return this._removeLocal(doc, callback);\n    } else {\n      return this._putLocal(doc, callback);\n    }\n  }\n  this.bulkDocs({docs: [doc]}, opts, yankError(callback));\n}));\n\nAbstractPouchDB.prototype.putAttachment =\n  utils.adapterFun('putAttachment', function (docId, attachmentId, rev,\n                                              blob, type, callback) {\n  var api = this;\n  if (typeof type === 'function') {\n    callback = type;\n    type = blob;\n    blob = rev;\n    rev = null;\n  }\n  if (typeof type === 'undefined') {\n    type = blob;\n    blob = rev;\n    rev = null;\n  }\n\n  function createAttachment(doc) {\n    doc._attachments = doc._attachments || {};\n    doc._attachments[attachmentId] = {\n      content_type: type,\n      data: blob\n    };\n    return api.put(doc);\n  }\n\n  return api.get(docId).then(function (doc) {\n    if (doc._rev !== rev) {\n      throw errors.error(errors.REV_CONFLICT);\n    }\n\n    return createAttachment(doc);\n  }, function (err) {\n     // create new doc\n    if (err.reason === errors.MISSING_DOC.message) {\n      return createAttachment({_id: docId});\n    } else {\n      throw err;\n    }\n  });\n});\n\nAbstractPouchDB.prototype.removeAttachment =\n  utils.adapterFun('removeAttachment', function (docId, attachmentId, rev,\n                                                 callback) {\n  var self = this;\n  self.get(docId, function (err, obj) {\n    if (err) {\n      callback(err);\n      return;\n    }\n    if (obj._rev !== rev) {\n      callback(errors.error(errors.REV_CONFLICT));\n      return;\n    }\n    if (!obj._attachments) {\n      return callback();\n    }\n    delete obj._attachments[attachmentId];\n    if (Object.keys(obj._attachments).length === 0) {\n      delete obj._attachments;\n    }\n    self.put(obj, callback);\n  });\n});\n\nAbstractPouchDB.prototype.remove =\n  utils.adapterFun('remove', function (docOrId, optsOrRev, opts, callback) {\n  var doc;\n  if (typeof optsOrRev === 'string') {\n    // id, rev, opts, callback style\n    doc = {\n      _id: docOrId,\n      _rev: optsOrRev\n    };\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n  } else {\n    // doc, opts, callback style\n    doc = docOrId;\n    if (typeof optsOrRev === 'function') {\n      callback = optsOrRev;\n      opts = {};\n    } else {\n      callback = opts;\n      opts = optsOrRev;\n    }\n  }\n  opts = opts || {};\n  opts.was_delete = true;\n  var newDoc = {_id: doc._id, _rev: (doc._rev || opts.rev)};\n  newDoc._deleted = true;\n  if (isLocalId(newDoc._id) && typeof this._removeLocal === 'function') {\n    return this._removeLocal(doc, callback);\n  }\n  this.bulkDocs({docs: [newDoc]}, opts, yankError(callback));\n});\n\nAbstractPouchDB.prototype.revsDiff =\n  utils.adapterFun('revsDiff', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  var ids = Object.keys(req);\n\n  if (!ids.length) {\n    return callback(null, {});\n  }\n\n  var count = 0;\n  var missing = new utils.Map();\n\n  function addToMissing(id, revId) {\n    if (!missing.has(id)) {\n      missing.set(id, {missing: []});\n    }\n    missing.get(id).missing.push(revId);\n  }\n\n  function processDoc(id, rev_tree) {\n    // Is this fast enough? Maybe we should switch to a set simulated by a map\n    var missingForId = req[id].slice(0);\n    traverseRevTree(rev_tree, function (isLeaf, pos, revHash, ctx,\n      opts) {\n        var rev = pos + '-' + revHash;\n        var idx = missingForId.indexOf(rev);\n        if (idx === -1) {\n          return;\n        }\n\n        missingForId.splice(idx, 1);\n        if (opts.status !== 'available') {\n          addToMissing(id, rev);\n        }\n      });\n\n    // Traversing the tree is synchronous, so now `missingForId` contains\n    // revisions that were not found in the tree\n    missingForId.forEach(function (rev) {\n      addToMissing(id, rev);\n    });\n  }\n\n  ids.map(function (id) {\n    this._getRevisionTree(id, function (err, rev_tree) {\n      if (err && err.status === 404 && err.message === 'missing') {\n        missing.set(id, {missing: req[id]});\n      } else if (err) {\n        return callback(err);\n      } else {\n        processDoc(id, rev_tree);\n      }\n\n      if (++count === ids.length) {\n        // convert LazyMap to object\n        var missingObj = {};\n        missing.forEach(function (value, key) {\n          missingObj[key] = value;\n        });\n        return callback(null, missingObj);\n      }\n    });\n  }, this);\n});\n\n// _bulk_get API for faster replication, as described in\n// https://github.com/apache/couchdb-chttpd/pull/33\n// At the \"abstract\" level, it will just run multiple get()s in\n// parallel, because this isn't much of a performance cost\n// for local databases (except the cost of multiple transactions, which is\n// small). The http adapter overrides this in order\n// to do a more efficient single HTTP request.\nAbstractPouchDB.prototype.bulkGet =\n  utils.adapterFun('bulkGet', function (opts, callback) {\n  bulkGetShim(this, opts, callback);\n});\n\n// compact one document and fire callback\n// by compacting we mean removing all revisions which\n// are further from the leaf in revision tree than max_height\nAbstractPouchDB.prototype.compactDocument =\n  utils.adapterFun('compactDocument', function (docId, maxHeight, callback) {\n  var self = this;\n  this._getRevisionTree(docId, function (err, revTree) {\n    if (err) {\n      return callback(err);\n    }\n    var height = computeHeight(revTree);\n    var candidates = [];\n    var revs = [];\n    Object.keys(height).forEach(function (rev) {\n      if (height[rev] > maxHeight) {\n        candidates.push(rev);\n      }\n    });\n\n    traverseRevTree(revTree, function (isLeaf, pos, revHash, ctx, opts) {\n      var rev = pos + '-' + revHash;\n      if (opts.status === 'available' && candidates.indexOf(rev) !== -1) {\n        revs.push(rev);\n      }\n    });\n    self._doCompaction(docId, revs, callback);\n  });\n});\n\n// compact the whole database using single document\n// compaction\nAbstractPouchDB.prototype.compact =\n  utils.adapterFun('compact', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  self._compactionQueue = self._compactionQueue || [];\n  self._compactionQueue.push({opts: opts, callback: callback});\n  if (self._compactionQueue.length === 1) {\n    doNextCompaction(self);\n  }\n});\nAbstractPouchDB.prototype._compact = function (opts, callback) {\n  var self = this;\n  var changesOpts = {\n    returnDocs: false,\n    last_seq: opts.last_seq || 0\n  };\n  var promises = [];\n\n  function onChange(row) {\n    promises.push(self.compactDocument(row.id, 0));\n  }\n  function onComplete(resp) {\n    var lastSeq = resp.last_seq;\n    Promise.all(promises).then(function () {\n      return upsert(self, '_local/compaction', function deltaFunc(doc) {\n        if (!doc.last_seq || doc.last_seq < lastSeq) {\n          doc.last_seq = lastSeq;\n          return doc;\n        }\n        return false; // somebody else got here first, don't update\n      });\n    }).then(function () {\n      callback(null, {ok: true});\n    }).catch(callback);\n  }\n  self.changes(changesOpts)\n    .on('change', onChange)\n    .on('complete', onComplete)\n    .on('error', callback);\n};\n/* Begin api wrappers. Specific functionality to storage belongs in the\n   _[method] */\nAbstractPouchDB.prototype.get =\n  utils.adapterFun('get', function (id, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof id !== 'string') {\n    return callback(errors.error(errors.INVALID_ID));\n  }\n  if (isLocalId(id) && typeof this._getLocal === 'function') {\n    return this._getLocal(id, callback);\n  }\n  var leaves = [], self = this;\n\n  function finishOpenRevs() {\n    var result = [];\n    var count = leaves.length;\n    if (!count) {\n      return callback(null, result);\n    }\n    // order with open_revs is unspecified\n    leaves.forEach(function (leaf) {\n      self.get(id, {\n        rev: leaf,\n        revs: opts.revs,\n        attachments: opts.attachments\n      }, function (err, doc) {\n        if (!err) {\n          result.push({ok: doc});\n        } else {\n          result.push({missing: leaf});\n        }\n        count--;\n        if (!count) {\n          callback(null, result);\n        }\n      });\n    });\n  }\n\n  if (opts.open_revs) {\n    if (opts.open_revs === \"all\") {\n      this._getRevisionTree(id, function (err, rev_tree) {\n        if (err) {\n          return callback(err);\n        }\n        leaves = collectLeaves(rev_tree).map(function (leaf) {\n          return leaf.rev;\n        });\n        finishOpenRevs();\n      });\n    } else {\n      if (Array.isArray(opts.open_revs)) {\n        leaves = opts.open_revs;\n        for (var i = 0; i < leaves.length; i++) {\n          var l = leaves[i];\n          // looks like it's the only thing couchdb checks\n          if (!(typeof(l) === \"string\" && /^\\d+-/.test(l))) {\n            return callback(errors.error(errors.INVALID_REV));\n          }\n        }\n        finishOpenRevs();\n      } else {\n        return callback(errors.error(errors.UNKNOWN_ERROR,\n          'function_clause'));\n      }\n    }\n    return; // open_revs does not like other options\n  }\n\n  return this._get(id, opts, function (err, result) {\n    if (err) {\n      return callback(err);\n    }\n\n    var doc = result.doc;\n    var metadata = result.metadata;\n    var ctx = result.ctx;\n\n    if (opts.conflicts) {\n      var conflicts = collectConflicts(metadata);\n      if (conflicts.length) {\n        doc._conflicts = conflicts;\n      }\n    }\n\n    if (isDeleted(metadata, doc._rev)) {\n      doc._deleted = true;\n    }\n\n    if (opts.revs || opts.revs_info) {\n      var paths = rootToLeaf(metadata.rev_tree);\n      var path = arrayFirst(paths, function (arr) {\n        return arr.ids.map(function (x) { return x.id; })\n          .indexOf(doc._rev.split('-')[1]) !== -1;\n      });\n\n      var indexOfRev = path.ids.map(function (x) {return x.id; })\n        .indexOf(doc._rev.split('-')[1]) + 1;\n      var howMany = path.ids.length - indexOfRev;\n      path.ids.splice(indexOfRev, howMany);\n      path.ids.reverse();\n\n      if (opts.revs) {\n        doc._revisions = {\n          start: (path.pos + path.ids.length) - 1,\n          ids: path.ids.map(function (rev) {\n            return rev.id;\n          })\n        };\n      }\n      if (opts.revs_info) {\n        var pos =  path.pos + path.ids.length;\n        doc._revs_info = path.ids.map(function (rev) {\n          pos--;\n          return {\n            rev: pos + '-' + rev.id,\n            status: rev.opts.status\n          };\n        });\n      }\n    }\n\n    if (opts.attachments && doc._attachments) {\n      var attachments = doc._attachments;\n      var count = Object.keys(attachments).length;\n      if (count === 0) {\n        return callback(null, doc);\n      }\n      Object.keys(attachments).forEach(function (key) {\n        this._getAttachment(attachments[key], {\n          binary: opts.binary,\n          ctx: ctx\n        }, function (err, data) {\n          var att = doc._attachments[key];\n          att.data = data;\n          delete att.stub;\n          delete att.length;\n          if (!--count) {\n            callback(null, doc);\n          }\n        });\n      }, self);\n    } else {\n      if (doc._attachments) {\n        for (var key in doc._attachments) {\n          /* istanbul ignore else */\n          if (doc._attachments.hasOwnProperty(key)) {\n            doc._attachments[key].stub = true;\n          }\n        }\n      }\n      callback(null, doc);\n    }\n  });\n});\n\nAbstractPouchDB.prototype.getAttachment =\n  utils.adapterFun('getAttachment', function (docId, attachmentId, opts,\n                                              callback) {\n  var self = this;\n  if (opts instanceof Function) {\n    callback = opts;\n    opts = {};\n  }\n  this._get(docId, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (res.doc._attachments && res.doc._attachments[attachmentId]) {\n      opts.ctx = res.ctx;\n      opts.binary = true;\n      self._getAttachment(res.doc._attachments[attachmentId], opts, callback);\n    } else {\n      return callback(errors.error(errors.MISSING_DOC));\n    }\n  });\n});\n\nAbstractPouchDB.prototype.allDocs =\n  utils.adapterFun('allDocs', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts.skip = typeof opts.skip !== 'undefined' ? opts.skip : 0;\n  if (opts.start_key) {\n    opts.startkey = opts.start_key;\n  }\n  if (opts.end_key) {\n    opts.endkey = opts.end_key;\n  }\n  if ('keys' in opts) {\n    if (!Array.isArray(opts.keys)) {\n      return callback(new TypeError('options.keys must be an array'));\n    }\n    var incompatibleOpt =\n      ['startkey', 'endkey', 'key'].filter(function (incompatibleOpt) {\n      return incompatibleOpt in opts;\n    })[0];\n    if (incompatibleOpt) {\n      callback(errors.error(errors.QUERY_PARSE_ERROR,\n        'Query parameter `' + incompatibleOpt +\n        '` is not compatible with multi-get'\n      ));\n      return;\n    }\n    if (this.type() !== 'http') {\n      return allDocsKeysQuery(this, opts, callback);\n    }\n  }\n\n  return this._allDocs(opts, callback);\n});\n\nAbstractPouchDB.prototype.changes = function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return new Changes(this, opts, callback);\n};\n\nAbstractPouchDB.prototype.close =\n  utils.adapterFun('close', function (callback) {\n  this._closed = true;\n  return this._close(callback);\n});\n\nAbstractPouchDB.prototype.info = utils.adapterFun('info', function (callback) {\n  var self = this;\n  this._info(function (err, info) {\n    if (err) {\n      return callback(err);\n    }\n    // assume we know better than the adapter, unless it informs us\n    info.db_name = info.db_name || self._db_name;\n    info.auto_compaction = !!(self.auto_compaction && self.type() !== 'http');\n    info.adapter = self.type();\n    callback(null, info);\n  });\n});\n\nAbstractPouchDB.prototype.id = utils.adapterFun('id', function (callback) {\n  return this._id(callback);\n});\n\nAbstractPouchDB.prototype.type = function () {\n  return (typeof this._type === 'function') ? this._type() : this.adapter;\n};\n\nAbstractPouchDB.prototype.bulkDocs =\n  utils.adapterFun('bulkDocs', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  if (Array.isArray(req)) {\n    req = {\n      docs: req\n    };\n  }\n\n  if (!req || !req.docs || !Array.isArray(req.docs)) {\n    return callback(errors.error(errors.MISSING_BULK_DOCS));\n  }\n\n  for (var i = 0; i < req.docs.length; ++i) {\n    if (typeof req.docs[i] !== 'object' || Array.isArray(req.docs[i])) {\n      return callback(errors.error(errors.NOT_AN_OBJECT));\n    }\n  }\n\n  var attachmentError;\n  req.docs.forEach(function(doc) {\n    if (doc._attachments) {\n      Object.keys(doc._attachments).forEach(function (name) {\n        attachmentError = attachmentError || attachmentNameError(name);\n      });\n    }\n  });\n\n  if (attachmentError) {\n    return callback(errors.error(errors.BAD_REQUEST, attachmentError));\n  }\n\n  if (!('new_edits' in opts)) {\n    if ('new_edits' in req) {\n      opts.new_edits = req.new_edits;\n    } else {\n      opts.new_edits = true;\n    }\n  }\n\n  if (!opts.new_edits && this.type() !== 'http') {\n    // ensure revisions of the same doc are sorted, so that\n    // the local adapter processes them correctly (#2935)\n    req.docs.sort(compareByIdThenRev);\n  }\n\n  cleanDocs(req.docs);\n\n  return this._bulkDocs(req, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (!opts.new_edits) {\n      // this is what couch does when new_edits is false\n      res = res.filter(function (x) {\n        return x.error;\n      });\n    }\n    callback(null, res);\n  });\n});\n\nAbstractPouchDB.prototype.registerDependentDatabase =\n  utils.adapterFun('registerDependentDatabase', function (dependentDb,\n                                                          callback) {\n  var depDB = new this.constructor(dependentDb, this.__opts);\n\n  function diffFun(doc) {\n    doc.dependentDbs = doc.dependentDbs || {};\n    if (doc.dependentDbs[dependentDb]) {\n      return false; // no update required\n    }\n    doc.dependentDbs[dependentDb] = true;\n    return doc;\n  }\n  upsert(this, '_local/_pouch_dependentDbs', diffFun)\n    .then(function () {\n      callback(null, {db: depDB});\n    }).catch(callback);\n});\n\nAbstractPouchDB.prototype.destroy =\n  utils.adapterFun('destroy', function (opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  var usePrefix = 'use_prefix' in self ? self.use_prefix : true;\n\n  function destroyDb() {\n    // call destroy method of the particular adaptor\n    self._destroy(opts, function (err, resp) {\n      if (err) {\n        return callback(err);\n      }\n      self.emit('destroyed');\n      callback(null, resp || { 'ok': true });\n    });\n  }\n\n  if (self.type() === 'http') {\n    // no need to check for dependent DBs if it's a remote DB\n    return destroyDb();\n  }\n\n  self.get('_local/_pouch_dependentDbs', function (err, localDoc) {\n    if (err) {\n      if (err.status !== 404) {\n        return callback(err);\n      } else { // no dependencies\n        return destroyDb();\n      }\n    }\n    var dependentDbs = localDoc.dependentDbs;\n    var PouchDB = self.constructor;\n    var deletedMap = Object.keys(dependentDbs).map(function (name) {\n      var trueName = usePrefix ?\n        name.replace(new RegExp('^' + PouchDB.prefix), '') : name;\n      return new PouchDB(trueName, self.__opts).destroy();\n    });\n    Promise.all(deletedMap).then(destroyDb, function (error) {\n      callback(error);\n    });\n  });\n});\n\n}).call(this,require('_process'))\n},{\"./changes\":29,\"./deps/bulkGetShim\":54,\"./deps/docs/isDeleted\":56,\"./deps/docs/isLocalId\":57,\"./deps/errors\":66,\"./deps/merge/collectConflicts\":70,\"./deps/merge/collectLeaves\":71,\"./deps/merge/rootToLeaf\":74,\"./deps/merge/traverseRevTree\":75,\"./deps/upsert\":83,\"./utils\":104,\"_process\":108,\"events\":9}],17:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  idb: require('./adapters/idb'),\n  websql: require('./adapters/websql')\n};\n},{\"./adapters/idb\":23,\"./adapters/websql\":27}],18:[function(require,module,exports){\n\"use strict\";\n\nvar CHANGES_BATCH_SIZE = 25;\nvar MAX_SIMULTANEOUS_REVS = 50;\n\nvar supportsBulkGetMap = {};\n\n// according to http://stackoverflow.com/a/417184/680742,\n// the de facto URL length limit is 2000 characters.\n// but since most of our measurements don't take the full\n// URL into account, we fudge it a bit.\n// TODO: we could measure the full URL to enforce exactly 2000 chars\nvar MAX_URL_LENGTH = 1800;\n\nvar binStringToBluffer =\n  require('../../deps/binary/binaryStringToBlobOrBuffer');\nvar b64StringToBluffer =\n  require('../../deps/binary/base64StringToBlobOrBuffer');\nvar utils = require('../../utils');\nvar Promise = utils.Promise;\nvar clone = utils.clone;\nvar base64 = require('../../deps/binary/base64');\nvar btoa = base64.btoa;\nvar atob = base64.atob;\nvar errors = require('../../deps/errors');\nvar log = require('debug')('pouchdb:http');\nvar createMultipart = require('../../deps/ajax/multipart');\nvar blufferToBase64 = require('../../deps/binary/blobOrBufferToBase64');\nvar parseDoc = require('../../deps/docs/parseDoc');\nvar bulkGetShim = require('../../deps/bulkGetShim');\nvar flatten = require('../../deps/flatten');\n\nfunction readAttachmentsAsBlobOrBuffer(row) {\n  var atts = row.doc && row.doc._attachments;\n  if (!atts) {\n    return;\n  }\n  Object.keys(atts).forEach(function (filename) {\n    var att = atts[filename];\n    att.data = b64StringToBluffer(att.data, att.content_type);\n  });\n}\n\nfunction encodeDocId(id) {\n  if (/^_design/.test(id)) {\n    return '_design/' + encodeURIComponent(id.slice(8));\n  }\n  if (/^_local/.test(id)) {\n    return '_local/' + encodeURIComponent(id.slice(7));\n  }\n  return encodeURIComponent(id);\n}\n\nfunction preprocessAttachments(doc) {\n  if (!doc._attachments || !Object.keys(doc._attachments)) {\n    return Promise.resolve();\n  }\n\n  return Promise.all(Object.keys(doc._attachments).map(function (key) {\n    var attachment = doc._attachments[key];\n    if (attachment.data && typeof attachment.data !== 'string') {\n      return blufferToBase64(attachment.data).then(function (b64) {\n        attachment.data = b64;\n      });\n    }\n  }));\n}\n\n// Get all the information you possibly can about the URI given by name and\n// return it as a suitable object.\nfunction getHost(name) {\n  // Prase the URI into all its little bits\n  var uri = utils.parseUri(name);\n\n  // Store the user and password as a separate auth object\n  if (uri.user || uri.password) {\n    uri.auth = {username: uri.user, password: uri.password};\n  }\n\n  // Split the path part of the URI into parts using '/' as the delimiter\n  // after removing any leading '/' and any trailing '/'\n  var parts = uri.path.replace(/(^\\/|\\/$)/g, '').split('/');\n\n  // Store the first part as the database name and remove it from the parts\n  // array\n  uri.db = parts.pop();\n\n  // Restore the path by joining all the remaining parts (all the parts\n  // except for the database name) with '/'s\n  uri.path = parts.join('/');\n\n  return uri;\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genDBUrl(opts, path) {\n  return genUrl(opts, opts.db + '/' + path);\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genUrl(opts, path) {\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  var pathDel = !opts.path ? '' : '/';\n\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  return opts.protocol + '://' + opts.host + ':' + opts.port + '/' +\n         opts.path + pathDel + path;\n}\n\n// Implements the PouchDB API for dealing with CouchDB instances over HTTP\nfunction HttpPouch(opts, callback) {\n  // The functions that will be publicly available for HttpPouch\n  var api = this;\n\n  // Parse the URI given by opts.name into an easy-to-use object\n  var getHostFun = getHost;\n\n  // TODO: this seems to only be used by yarong for the Thali project.\n  // Verify whether or not it's still needed.\n  /* istanbul ignore:next */\n  if (opts.getHost) {\n    getHostFun = opts.getHost;\n  }\n\n  var host = getHostFun(opts.name, opts);\n  var dbUrl = genDBUrl(host, '');\n\n  opts = clone(opts);\n  var ajaxOpts = opts.ajax || {};\n\n  api.getUrl = function () { return dbUrl; };\n  api.getHeaders = function () { return ajaxOpts.headers || {}; };\n\n  if (opts.auth || host.auth) {\n    var nAuth = opts.auth || host.auth;\n    var token = btoa(nAuth.username + ':' + nAuth.password);\n    ajaxOpts.headers = ajaxOpts.headers || {};\n    ajaxOpts.headers.Authorization = 'Basic ' + token;\n  }\n\n  function ajax(userOpts, options, callback) {\n    var reqAjax = userOpts.ajax || {};\n    var reqOpts = utils.extend(clone(ajaxOpts), reqAjax, options);\n    log(reqOpts.method + ' ' + reqOpts.url);\n    return utils.ajax(reqOpts, callback);\n  }\n\n  function ajaxPromise(userOpts, opts) {\n    return new Promise(function (resolve, reject) {\n      ajax(userOpts, opts, function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  function adapterFun(name, fun) {\n    return utils.adapterFun(name, utils.getArguments(function (args) {\n      setup().then(function (res) {\n        return fun.apply(this, args);\n      }).catch(function(e) {\n        var callback = args.pop();\n        callback(e);\n      });\n    }));\n  }\n\n  var setupPromise;\n\n  function setup() {\n    // TODO: Remove `skipSetup` in favor of `skip_setup` in a future release\n    if (opts.skipSetup || opts.skip_setup) {\n      return Promise.resolve();\n    }\n\n    // If there is a setup in process or previous successful setup\n    // done then we will use that\n    // If previous setups have been rejected we will try again\n    if (setupPromise) {\n      return setupPromise;\n    }\n\n    var checkExists = {method: 'GET', url: dbUrl};\n    var create = {method: 'PUT', url: dbUrl};\n    setupPromise = ajaxPromise({}, checkExists).catch(function(err) {\n      if (err && err.status && err.status === 404) {\n        // Doesnt exist, create it\n        utils.explain404('PouchDB is just detecting if the remote exists.');\n        return ajaxPromise({}, create);\n      } else {\n        return Promise.reject(err);\n      }\n    }).catch(function(err) {\n      // If we get an authorisation error\n      if (err && err.status && err.status === 401) {\n        return ajaxPromise({}, checkExists);\n      }\n      // If we try to create a database that already exists\n      if (err && err.status && err.status === 412) {\n        return true;\n      }\n      return Promise.reject(err);\n    });\n\n    setupPromise.catch(function() {\n      setupPromise = null;\n    });\n\n    return setupPromise;\n  }\n\n  setTimeout(function() {\n    callback(null, api);\n  });\n\n  api.type = function () {\n    return 'http';\n  };\n\n  api.id = adapterFun('id', function (callback) {\n    ajax({}, {method: 'GET', url: genUrl(host, '')}, function (err, result) {\n      var uuid = (result && result.uuid) ?\n        (result.uuid + host.db) : genDBUrl(host, '');\n      callback(null, uuid);\n    });\n  });\n\n  api.request = adapterFun('request', function (options, callback) {\n    options.url = genDBUrl(host, options.url);\n    ajax({}, options, callback);\n  });\n\n  // Sends a POST request to the host calling the couchdb _compact function\n  //    version: The version of CouchDB it is running\n  api.compact = adapterFun('compact', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n    ajax(opts, {\n      url: genDBUrl(host, '_compact'),\n      method: 'POST'\n    }, function () {\n      function ping() {\n        api.info(function (err, res) {\n          if (!res.compact_running) {\n            callback(null, {ok: true});\n          } else {\n            setTimeout(ping, opts.interval || 200);\n          }\n        });\n      }\n      // Ping the http if it's finished compaction\n      ping();\n    });\n  });\n\n  api.bulkGet = utils.adapterFun('bulkGet', function (opts, callback) {\n    var self = this;\n\n    function doBulkGet(cb) {\n      var params = [];\n      if (opts.revs) {\n        params.push('revs=true');\n      }\n      if (opts.attachments) {\n        params.push('attachments=true');\n      }\n      params = params.join('&');\n      if (params !== '') {\n        params = '?' + params;\n      }\n\n      ajax({}, {\n        headers: host.headers,\n        url: genDBUrl(host, '_bulk_get' + params),\n        method: 'POST',\n        body: { docs: opts.docs}\n      }, cb);\n    }\n\n    function doBulkGetShim() {\n      if (!opts.docs.length) {\n        return callback(null, {results: []});\n      }\n\n      // avoid \"url too long error\" by splitting up into multiple requests\n      var batchSize = MAX_SIMULTANEOUS_REVS;\n      var numBatches = Math.ceil(opts.docs.length / batchSize);\n      var numDone = 0;\n      var results = new Array(numBatches);\n\n      function onResult(batchNum) {\n        return function (err, res) {\n          // err is impossible because shim returns a list of errs in that case\n          results[batchNum] = res.results;\n          if (++numDone === numBatches) {\n            callback(null, {results: flatten(results)});\n          }\n        };\n      }\n\n      for (var i = 0; i < numBatches; i++) {\n        var subOpts = utils.pick(opts, ['revs', 'attachments']);\n        subOpts.docs = opts.docs.slice(i * batchSize,\n          Math.min(opts.docs.length, (i + 1) * batchSize));\n        bulkGetShim(self, subOpts, onResult(i));\n      }\n    }\n\n    // mark the whole database as either supporting or not supporting _bulk_get\n    var dbUrl = genUrl(host, '');\n    var supportsBulkGet = supportsBulkGetMap[dbUrl];\n\n    if (typeof supportsBulkGet !== 'boolean') {\n      // check if this database supports _bulk_get\n      doBulkGet(function (err, res) {\n        if (err) {\n          if (Math.floor(err.status / 100) === 4) { // 40x\n            supportsBulkGetMap[dbUrl] = false;\n            doBulkGetShim();\n          } else {\n            callback(err);\n          }\n        } else {\n          supportsBulkGetMap[dbUrl] = true;\n          callback(null, res);\n        }\n      });\n    } else if (supportsBulkGet) {\n      doBulkGet(callback);\n    } else {\n      doBulkGetShim();\n    }\n  });\n\n  // Calls GET on the host, which gets back a JSON string containing\n  //    couchdb: A welcome string\n  //    version: The version of CouchDB it is running\n  api._info = function (callback) {\n    setup().then(function() {\n      ajax({}, {\n        method: 'GET',\n        url: genDBUrl(host, '')\n      }, function (err, res) {\n        /* istanbul ignore next */\n        if (err) {\n        return callback(err);\n        }\n        res.host = genDBUrl(host, '');\n        callback(null, res);\n      });\n    }).catch(callback);\n  };\n\n  // Get the document with the given id from the database given by host.\n  // The id could be solely the _id in the database, or it may be a\n  // _design/ID or _local/ID path\n  api.get = adapterFun('get', function (id, opts, callback) {\n    // If no options were given, set the callback to the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = [];\n\n    // If it exists, add the opts.revs value to the list of parameters.\n    // If revs=true then the resulting JSON will include a field\n    // _revisions containing an array of the revision IDs.\n    if (opts.revs) {\n      params.push('revs=true');\n    }\n\n    // If it exists, add the opts.revs_info value to the list of parameters.\n    // If revs_info=true then the resulting JSON will include the field\n    // _revs_info containing an array of objects in which each object\n    // representing an available revision.\n    if (opts.revs_info) {\n      params.push('revs_info=true');\n    }\n\n    // If it exists, add the opts.open_revs value to the list of parameters.\n    // If open_revs=all then the resulting JSON will include all the leaf\n    // revisions. If open_revs=[\"rev1\", \"rev2\",...] then the resulting JSON\n    // will contain an array of objects containing data of all revisions\n    if (opts.open_revs) {\n      if (opts.open_revs !== \"all\") {\n        opts.open_revs = JSON.stringify(opts.open_revs);\n      }\n      params.push('open_revs=' + opts.open_revs);\n    }\n\n    // If it exists, add the opts.rev value to the list of parameters.\n    // If rev is given a revision number then get the specified revision.\n    if (opts.rev) {\n      params.push('rev=' + opts.rev);\n    }\n\n    // If it exists, add the opts.conflicts value to the list of parameters.\n    // If conflicts=true then the resulting JSON will include the field\n    // _conflicts containing all the conflicting revisions.\n    if (opts.conflicts) {\n      params.push('conflicts=' + opts.conflicts);\n    }\n\n    // Format the list of parameters into a valid URI query string\n    params = params.join('&');\n    params = params === '' ? '' : '?' + params;\n\n    id = encodeDocId(id);\n\n    // Set the options for the ajax call\n    var options = {\n      method: 'GET',\n      url: genDBUrl(host, id + params)\n    };\n\n    function fetchAttachments(doc) {\n      var atts = doc._attachments;\n      var filenames = atts && Object.keys(atts);\n      if (!atts || !filenames.length) {\n        return;\n      }\n      // we fetch these manually in separate XHRs, because\n      // Sync Gateway would normally send it back as multipart/mixed,\n      // which we cannot parse. Also, this is more efficient than\n      // receiving attachments as base64-encoded strings.\n      return Promise.all(filenames.map(function (filename) {\n        var att = atts[filename];\n        var path = encodeDocId(doc._id) + '/' + encodeAttachmentId(filename) +\n          '?rev=' + doc._rev;\n        return ajaxPromise(opts, {\n          method: 'GET',\n          url: genDBUrl(host, path),\n          binary: true\n        }).then(function (blob) {\n          if (opts.binary) {\n            return blob;\n          }\n          return blufferToBase64(blob);\n        }).then(function (data) {\n          delete att.stub;\n          delete att.length;\n          att.data = data;\n        });\n      }));\n    }\n\n    function fetchAllAttachments(docOrDocs) {\n      if (Array.isArray(docOrDocs)) {\n        return Promise.all(docOrDocs.map(function (doc) {\n          if (doc.ok) {\n            return fetchAttachments(doc.ok);\n          }\n        }));\n      }\n      return fetchAttachments(docOrDocs);\n    }\n\n    ajaxPromise(opts, options).then(function (res) {\n      return Promise.resolve().then(function () {\n        if (opts.attachments) {\n          return fetchAllAttachments(res);\n        }\n      }).then(function () {\n        callback(null, res);\n      });\n    }).catch(callback);\n  });\n\n  // Delete the document given by doc from the database given by host.\n  api.remove = adapterFun('remove',\n      function (docOrId, optsOrRev, opts, callback) {\n    var doc;\n    if (typeof optsOrRev === 'string') {\n      // id, rev, opts, callback style\n      doc = {\n        _id: docOrId,\n        _rev: optsOrRev\n      };\n      if (typeof opts === 'function') {\n        callback = opts;\n        opts = {};\n      }\n    } else {\n      // doc, opts, callback style\n      doc = docOrId;\n      if (typeof optsOrRev === 'function') {\n        callback = optsOrRev;\n        opts = {};\n      } else {\n        callback = opts;\n        opts = optsOrRev;\n      }\n    }\n\n    var rev = (doc._rev || opts.rev);\n\n    // Delete the document\n    ajax(opts, {\n      method: 'DELETE',\n      url: genDBUrl(host, encodeDocId(doc._id)) + '?rev=' + rev\n    }, callback);\n  });\n\n  function encodeAttachmentId(attachmentId) {\n    return attachmentId.split(\"/\").map(encodeURIComponent).join(\"/\");\n  }\n\n  // Get the attachment\n  api.getAttachment =\n    adapterFun('getAttachment', function (docId, attachmentId, opts,\n                                                callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var params = opts.rev ? ('?rev=' + opts.rev) : '';\n    var url = genDBUrl(host, encodeDocId(docId)) + '/' +\n      encodeAttachmentId(attachmentId) + params;\n    ajax(opts, {\n      method: 'GET',\n      url: url,\n      binary: true\n    }, callback);\n  });\n\n  // Remove the attachment given by the id and rev\n  api.removeAttachment =\n    adapterFun('removeAttachment', function (docId, attachmentId, rev,\n                                                   callback) {\n\n    var url = genDBUrl(host, encodeDocId(docId) + '/' +\n      encodeAttachmentId(attachmentId)) + '?rev=' + rev;\n\n    ajax({}, {\n      method: 'DELETE',\n      url: url\n    }, callback);\n  });\n\n  // Add the attachment given by blob and its contentType property\n  // to the document with the given id, the revision given by rev, and\n  // add it to the database given by host.\n  api.putAttachment =\n    adapterFun('putAttachment', function (docId, attachmentId, rev, blob,\n                                                type, callback) {\n    if (typeof type === 'function') {\n      callback = type;\n      type = blob;\n      blob = rev;\n      rev = null;\n    }\n    var id = encodeDocId(docId) + '/' + encodeAttachmentId(attachmentId);\n    var url = genDBUrl(host, id);\n    if (rev) {\n      url += '?rev=' + rev;\n    }\n\n    if (typeof blob === 'string') {\n      var binary;\n      try {\n        binary = atob(blob);\n      } catch (err) {\n        // it's not base64-encoded, so throw error\n        return callback(errors.error(errors.BAD_ARG,\n                        'Attachments need to be base64 encoded'));\n      }\n      blob = binary ? binStringToBluffer(binary, type) : '';\n    }\n\n    var opts = {\n      headers: {'Content-Type': type},\n      method: 'PUT',\n      url: url,\n      processData: false,\n      body: blob,\n      timeout: ajaxOpts.timeout || 60000\n    };\n    // Add the attachment\n    ajax({}, opts, callback);\n  });\n\n  // Add the document given by doc (in JSON string format) to the database\n  // given by host. This fails if the doc has no _id field.\n  api.put = adapterFun('put', utils.getArguments(function (args) {\n    var temp, temptype, opts;\n    var doc = args.shift();\n    var callback = args.pop();\n\n    if (typeof doc !== 'object' || Array.isArray(doc)) {\n      return callback(errors.error(errors.NOT_AN_OBJECT));\n    }\n\n    var id = '_id' in doc;\n    doc = clone(doc);\n\n    preprocessAttachments(doc).then(function () {\n      while (true) {\n        temp = args.shift();\n        temptype = typeof temp;\n        if (temptype === \"string\" && !id) {\n          doc._id = temp;\n          id = true;\n        } else if (temptype === \"string\" && id && !('_rev' in doc)) {\n          doc._rev = temp;\n        } else if (temptype === \"object\") {\n          opts = clone(temp);\n        }\n        if (!args.length) {\n          break;\n        }\n      }\n      opts = opts || {};\n\n      // check for any errors\n      // TODO: rename this function\n      parseDoc.invalidIdError(doc._id);\n\n      // List of parameter to add to the PUT request\n      var params = [];\n\n      // If it exists, add the opts.new_edits value to the list of parameters.\n      // If new_edits = false then the database will NOT assign this document a\n      // new revision number\n      if (opts && typeof opts.new_edits !== 'undefined') {\n        params.push('new_edits=' + opts.new_edits);\n      }\n\n      // Format the list of parameters into a valid URI query string\n      params = params.join('&');\n      if (params !== '') {\n        params = '?' + params;\n      }\n\n      var ajaxOpts = {\n        method: 'PUT',\n        url: genDBUrl(host, encodeDocId(doc._id)) + params,\n        body: doc\n      };\n\n      return Promise.resolve().then(function () {\n        var hasNonStubAttachments = doc._attachments &&\n          Object.keys(doc._attachments).filter(function (att) {\n            return !doc._attachments[att].stub;\n          }).length;\n        if (hasNonStubAttachments) {\n          // use multipart/related for more efficient attachment uploading\n          var multipart = createMultipart(doc);\n          ajaxOpts.body = multipart.body;\n          ajaxOpts.processData = false;\n          ajaxOpts.headers = multipart.headers;\n        }\n      }).catch(function () {\n        throw new Error('Did you forget to base64-encode an attachment?');\n      }).then(function () {\n        return ajaxPromise(opts, ajaxOpts);\n      }).then(function (res) {\n        res.ok = true; // smooths out cloudant not doing this\n        callback(null, res);\n      });\n    }).catch(callback);\n  }));\n\n  // Add the document given by doc (in JSON string format) to the database\n  // given by host. This does not assume that doc is a new document\n  // (i.e. does not have a _id or a _rev field.)\n  api.post = adapterFun('post', function (doc, opts, callback) {\n    // If no options were given, set the callback to be the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n    if (typeof doc !== 'object') {\n      return callback(errors.error(errors.NOT_AN_OBJECT));\n    }\n    if (! (\"_id\" in doc)) {\n      doc._id = utils.uuid();\n    }\n    api.put(doc, opts, function (err, res) {\n      if (err) {\n        return callback(err);\n      }\n      res.ok = true;\n      callback(null, res);\n    });\n  });\n\n  // Update/create multiple documents given by req in the database\n  // given by host.\n  api._bulkDocs = function (req, opts, callback) {\n    // If new_edits=false then it prevents the database from creating\n    // new revision numbers for the documents. Instead it just uses\n    // the old ones. This is used in database replication.\n    req.new_edits = opts.new_edits;\n\n    setup().then(function () {\n      return Promise.all(req.docs.map(preprocessAttachments));\n    }).then(function () {\n      // Update/create the documents\n      ajax(opts, {\n        method: 'POST',\n        url: genDBUrl(host, '_bulk_docs'),\n        body: req\n      }, function (err, results) {\n        if (err) {\n          return callback(err);\n        }\n        results.forEach(function (result) {\n          result.ok = true; // smooths out cloudant not adding this\n        });\n        callback(null, results);\n      });\n    }).catch(callback);\n  };\n\n  // Get a listing of the documents in the database given\n  // by host and ordered by increasing id.\n  api.allDocs = adapterFun('allDocs', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n    // List of parameters to add to the GET request\n    var params = [];\n    var body;\n    var method = 'GET';\n\n    if (opts.conflicts) {\n      params.push('conflicts=true');\n    }\n\n    // If opts.descending is truthy add it to params\n    if (opts.descending) {\n      params.push('descending=true');\n    }\n\n    // If opts.include_docs exists, add the include_docs value to the\n    // list of parameters.\n    // If include_docs=true then include the associated document with each\n    // result.\n    if (opts.include_docs) {\n      params.push('include_docs=true');\n    }\n\n    if (opts.attachments) {\n      // added in CouchDB 1.6.0\n      params.push('attachments=true');\n    }\n\n    if (opts.key) {\n      params.push('key=' + encodeURIComponent(JSON.stringify(opts.key)));\n    }\n\n    if (opts.start_key) {\n      opts.startkey = opts.start_key;\n    }\n\n    // If opts.startkey exists, add the startkey value to the list of\n    // parameters.\n    // If startkey is given then the returned list of documents will\n    // start with the document whose id is startkey.\n    if (opts.startkey) {\n      params.push('startkey=' +\n        encodeURIComponent(JSON.stringify(opts.startkey)));\n    }\n\n    if (opts.end_key) {\n      opts.endkey = opts.end_key;\n    }\n\n    // If opts.endkey exists, add the endkey value to the list of parameters.\n    // If endkey is given then the returned list of docuemnts will\n    // end with the document whose id is endkey.\n    if (opts.endkey) {\n      params.push('endkey=' + encodeURIComponent(JSON.stringify(opts.endkey)));\n    }\n\n    if (typeof opts.inclusive_end !== 'undefined') {\n      params.push('inclusive_end=' + !!opts.inclusive_end);\n    }\n\n    // If opts.limit exists, add the limit value to the parameter list.\n    if (typeof opts.limit !== 'undefined') {\n      params.push('limit=' + opts.limit);\n    }\n\n    if (typeof opts.skip !== 'undefined') {\n      params.push('skip=' + opts.skip);\n    }\n\n    // Format the list of parameters into a valid URI query string\n    params = params.join('&');\n    if (params !== '') {\n      params = '?' + params;\n    }\n\n    if (typeof opts.keys !== 'undefined') {\n\n      var keysAsString =\n        'keys=' + encodeURIComponent(JSON.stringify(opts.keys));\n      if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {\n        // If the keys are short enough, do a GET. we do this to work around\n        // Safari not understanding 304s on POSTs (see issue #1239)\n        params += (params.indexOf('?') !== -1 ? '&' : '?') + keysAsString;\n      } else {\n        // If keys are too long, issue a POST request to circumvent GET\n        // query string limits\n        // see http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n        method = 'POST';\n        body = {keys: opts.keys};\n      }\n    }\n\n    // Get the document listing\n    ajaxPromise(opts, {\n      method: method,\n      url: genDBUrl(host, '_all_docs' + params),\n      body: body\n    }).then(function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        res.rows.forEach(readAttachmentsAsBlobOrBuffer);\n      }\n      callback(null, res);\n    }).catch(callback);\n  });\n\n  // Get a list of changes made to documents in the database given by host.\n  // TODO According to the README, there should be two other methods here,\n  // api.changes.addListener and api.changes.removeListener.\n  api._changes = function (opts) {\n\n    // We internally page the results of a changes request, this means\n    // if there is a large set of changes to be returned we can start\n    // processing them quicker instead of waiting on the entire\n    // set of changes to return and attempting to process them at once\n    var batchSize = 'batch_size' in opts ? opts.batch_size : CHANGES_BATCH_SIZE;\n\n    opts = clone(opts);\n    opts.timeout = opts.timeout || ajaxOpts.timeout || 30 * 1000;\n\n    // We give a 5 second buffer for CouchDB changes to respond with\n    // an ok timeout\n    var params = { timeout: opts.timeout - (5 * 1000) };\n    var limit = (typeof opts.limit !== 'undefined') ? opts.limit : false;\n    var returnDocs;\n    if ('returnDocs' in opts) {\n      returnDocs = opts.returnDocs;\n    } else {\n      returnDocs = true;\n    }\n    //\n    var leftToFetch = limit;\n\n    if (opts.style) {\n      params.style = opts.style;\n    }\n\n    if (opts.include_docs || opts.filter && typeof opts.filter === 'function') {\n      params.include_docs = true;\n    }\n\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.continuous) {\n      params.feed = 'longpoll';\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    // Default hearbeat to 10 seconds\n    params.heartbeat = opts.heartbeat || 10000;\n\n    if (opts.filter && typeof opts.filter === 'string') {\n      params.filter = opts.filter;\n      if (opts.filter === '_view' &&\n          opts.view &&\n          typeof opts.view === 'string') {\n        params.view = opts.view;\n      }\n    }\n\n    // If opts.query_params exists, pass it through to the changes request.\n    // These parameters may be used by the filter on the source database.\n    if (opts.query_params && typeof opts.query_params === 'object') {\n      for (var param_name in opts.query_params) {\n        /* istanbul ignore else */\n        if (opts.query_params.hasOwnProperty(param_name)) {\n          params[param_name] = opts.query_params[param_name];\n        }\n      }\n    }\n\n    var method = 'GET';\n    var body;\n\n    if (opts.doc_ids) {\n      // set this automagically for the user; it's annoying that couchdb\n      // requires both a \"filter\" and a \"doc_ids\" param.\n      params.filter = '_doc_ids';\n\n      var docIdsJson = JSON.stringify(opts.doc_ids);\n\n      if (docIdsJson.length < MAX_URL_LENGTH) {\n        params.doc_ids = docIdsJson;\n      } else {\n        // anything greater than ~2000 is unsafe for gets, so\n        // use POST instead\n        method = 'POST';\n        body = {doc_ids: opts.doc_ids };\n      }\n    }\n\n    var xhr;\n    var lastFetchedSeq;\n\n    // Get all the changes starting wtih the one immediately after the\n    // sequence number given by since.\n    var fetch = function (since, callback) {\n      if (opts.aborted) {\n        return;\n      }\n      params.since = since;\n      // \"since\" can be any kind of json object in Coudant/CouchDB 2.x\n      /* istanbul ignore next */\n      if (typeof params.since === \"object\") {\n        params.since = JSON.stringify(params.since);\n      }\n\n      if (opts.descending) {\n        if (limit) {\n          params.limit = leftToFetch;\n        }\n      } else {\n        params.limit = (!limit || leftToFetch > batchSize) ?\n          batchSize : leftToFetch;\n      }\n\n      var paramStr = '?' + Object.keys(params).map(function (k) {\n        return k + '=' + encodeURIComponent(params[k]);\n      }).join('&');\n\n      // Set the options for the ajax call\n      var xhrOpts = {\n        method: method,\n        url: genDBUrl(host, '_changes' + paramStr),\n        // _changes can take a long time to generate, especially when filtered\n        timeout: opts.timeout,\n        body: body\n      };\n      lastFetchedSeq = since;\n\n      if (opts.aborted) {\n        return;\n      }\n\n      // Get the changes\n      setup().then(function() {\n        xhr = ajax(opts, xhrOpts, callback);\n      }).catch(callback);\n    };\n\n    // If opts.since exists, get all the changes from the sequence\n    // number given by opts.since. Otherwise, get all the changes\n    // from the sequence number 0.\n    var fetchTimeout = 10;\n    var fetchRetryCount = 0;\n\n    var results = {results: []};\n\n    var fetched = function (err, res) {\n      if (opts.aborted) {\n        return;\n      }\n      var raw_results_length = 0;\n      // If the result of the ajax call (res) contains changes (res.results)\n      if (res && res.results) {\n        raw_results_length = res.results.length;\n        results.last_seq = res.last_seq;\n        // For each change\n        var req = {};\n        req.query = opts.query_params;\n        res.results = res.results.filter(function (c) {\n          leftToFetch--;\n          var ret = utils.filterChange(opts)(c);\n          if (ret) {\n            if (opts.include_docs && opts.attachments && opts.binary) {\n              readAttachmentsAsBlobOrBuffer(c);\n            }\n            if (returnDocs) {\n              results.results.push(c);\n            }\n            opts.onChange(c);\n          }\n          return ret;\n        });\n      } else if (err) {\n        // In case of an error, stop listening for changes and call\n        // opts.complete\n        opts.aborted = true;\n        opts.complete(err);\n        return;\n      }\n\n      // The changes feed may have timed out with no results\n      // if so reuse last update sequence\n      if (res && res.last_seq) {\n        lastFetchedSeq = res.last_seq;\n      }\n\n      var finished = (limit && leftToFetch <= 0) ||\n        (res && raw_results_length < batchSize) ||\n        (opts.descending);\n\n      if ((opts.continuous && !(limit && leftToFetch <= 0)) || !finished) {\n        // Increase retry delay exponentially as long as errors persist\n        if (err) {\n          fetchRetryCount += 1;\n        } else {\n          fetchRetryCount = 0;\n        }\n        var timeoutMultiplier = 1 << fetchRetryCount;\n        var retryWait = fetchTimeout * timeoutMultiplier;\n        var maximumWait = opts.maximumWait || 30000;\n\n        if (retryWait > maximumWait) {\n          opts.complete(err || errors.error(errors.UNKNOWN_ERROR));\n          return;\n        }\n\n        // Queue a call to fetch again with the newest sequence number\n        setTimeout(function () { fetch(lastFetchedSeq, fetched); }, retryWait);\n      } else {\n        // We're done, call the callback\n        opts.complete(null, results);\n      }\n    };\n\n    fetch(opts.since || 0, fetched);\n\n    // Return a method to cancel this method from processing any more\n    return {\n      cancel: function () {\n        opts.aborted = true;\n        if (xhr) {\n          xhr.abort();\n        }\n      }\n    };\n  };\n\n  // Given a set of document/revision IDs (given by req), tets the subset of\n  // those that do NOT correspond to revisions stored in the database.\n  // See http://wiki.apache.org/couchdb/HttpPostRevsDiff\n  api.revsDiff = adapterFun('revsDiff', function (req, opts, callback) {\n    // If no options were given, set the callback to be the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    // Get the missing document/revision IDs\n    ajax(opts, {\n      method: 'POST',\n      url: genDBUrl(host, '_revs_diff'),\n      body: req\n    }, callback);\n  });\n\n  api._close = function (callback) {\n    callback();\n  };\n\n  api._destroy = function (options, callback) {\n    setup().then(function() {\n      ajax(options, {\n        url: genDBUrl(host, ''),\n        method: 'DELETE'\n      }, function (err, resp) {\n        /* istanbul ignore next */\n        if (err) {\n          api.emit('error', err);\n          return callback(err);\n        }\n        api.emit('destroyed');\n        api.constructor.emit('destroyed', opts.name);\n        callback(null, resp);\n      });\n    }).catch(callback);\n  };\n}\n\n// HttpPouch is a valid adapter.\nHttpPouch.valid = function () {\n  return true;\n};\n\nmodule.exports = HttpPouch;\n\n},{\"../../deps/ajax/multipart\":39,\"../../deps/binary/base64\":43,\"../../deps/binary/base64StringToBlobOrBuffer\":44,\"../../deps/binary/binaryStringToBlobOrBuffer\":46,\"../../deps/binary/blobOrBufferToBase64\":48,\"../../deps/bulkGetShim\":54,\"../../deps/docs/parseDoc\":60,\"../../deps/errors\":66,\"../../deps/flatten\":68,\"../../utils\":104,\"debug\":7}],19:[function(require,module,exports){\n'use strict';\n\nvar errors = require('../../deps/errors');\nvar idbUtils = require('./utils');\nvar idbConstants = require('./constants');\nvar collectConflicts = require('../../deps/merge/collectConflicts');\n\nvar ATTACH_STORE = idbConstants.ATTACH_STORE;\nvar BY_SEQ_STORE = idbConstants.BY_SEQ_STORE;\nvar DOC_STORE = idbConstants.DOC_STORE;\n\nvar decodeDoc = idbUtils.decodeDoc;\nvar decodeMetadata = idbUtils.decodeMetadata;\nvar fetchAttachmentsIfNecessary = idbUtils.fetchAttachmentsIfNecessary;\nvar postProcessAttachments = idbUtils.postProcessAttachments;\nvar openTransactionSafely = idbUtils.openTransactionSafely;\n\nfunction createKeyRange(start, end, inclusiveEnd, key, descending) {\n  try {\n    if (start && end) {\n      if (descending) {\n        return IDBKeyRange.bound(end, start, !inclusiveEnd, false);\n      } else {\n        return IDBKeyRange.bound(start, end, false, !inclusiveEnd);\n      }\n    } else if (start) {\n      if (descending) {\n        return IDBKeyRange.upperBound(start);\n      } else {\n        return IDBKeyRange.lowerBound(start);\n      }\n    } else if (end) {\n      if (descending) {\n        return IDBKeyRange.lowerBound(end, !inclusiveEnd);\n      } else {\n        return IDBKeyRange.upperBound(end, !inclusiveEnd);\n      }\n    } else if (key) {\n      return IDBKeyRange.only(key);\n    }\n  } catch (e) {\n    return {error: e};\n  }\n  return null;\n}\n\nfunction handleKeyRangeError(api, opts, err, callback) {\n  if (err.name === \"DataError\" && err.code === 0) {\n    // data error, start is less than end\n    return callback(null, {\n      total_rows: api._meta.docCount,\n      offset: opts.skip,\n      rows: []\n    });\n  }\n  callback(errors.error(errors.IDB_ERROR, err.name, err.message));\n}\n\nfunction idbAllDocs(opts, api, idb, callback) {\n\n  function allDocsQuery(opts, callback) {\n    var start = 'startkey' in opts ? opts.startkey : false;\n    var end = 'endkey' in opts ? opts.endkey : false;\n    var key = 'key' in opts ? opts.key : false;\n    var skip = opts.skip || 0;\n    var limit = typeof opts.limit === 'number' ? opts.limit : -1;\n    var inclusiveEnd = opts.inclusive_end !== false;\n    var descending = 'descending' in opts && opts.descending ? 'prev' : null;\n\n    var keyRange = createKeyRange(start, end, inclusiveEnd, key, descending);\n    if (keyRange && keyRange.error) {\n      return handleKeyRangeError(api, opts, keyRange.error, callback);\n    }\n\n    var stores = [DOC_STORE, BY_SEQ_STORE];\n\n    if (opts.attachments) {\n      stores.push(ATTACH_STORE);\n    }\n    var txnResult = openTransactionSafely(idb, stores, 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    var docStore = txn.objectStore(DOC_STORE);\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n    var cursor = descending ?\n      docStore.openCursor(keyRange, descending) :\n      docStore.openCursor(keyRange);\n    var docIdRevIndex = seqStore.index('_doc_id_rev');\n    var results = [];\n    var docCount = 0;\n\n    // if the user specifies include_docs=true, then we don't\n    // want to block the main cursor while we're fetching the doc\n    function fetchDocAsynchronously(metadata, row, winningRev) {\n      var key = metadata.id + \"::\" + winningRev;\n      docIdRevIndex.get(key).onsuccess =  function onGetDoc(e) {\n        row.doc = decodeDoc(e.target.result);\n        if (opts.conflicts) {\n          row.doc._conflicts = collectConflicts(metadata);\n        }\n        fetchAttachmentsIfNecessary(row.doc, opts, txn);\n      };\n    }\n\n    function allDocsInner(cursor, winningRev, metadata) {\n      var row = {\n        id: metadata.id,\n        key: metadata.id,\n        value: {\n          rev: winningRev\n        }\n      };\n      var deleted = metadata.deleted;\n      if (opts.deleted === 'ok') {\n        results.push(row);\n        // deleted docs are okay with \"keys\" requests\n        if (deleted) {\n          row.value.deleted = true;\n          row.doc = null;\n        } else if (opts.include_docs) {\n          fetchDocAsynchronously(metadata, row, winningRev);\n        }\n      } else if (!deleted && skip-- <= 0) {\n        results.push(row);\n        if (opts.include_docs) {\n          fetchDocAsynchronously(metadata, row, winningRev);\n        }\n        if (--limit === 0) {\n          return;\n        }\n      }\n      cursor.continue();\n    }\n\n    function onGetCursor(e) {\n      docCount = api._meta.docCount; // do this within the txn for consistency\n      var cursor = e.target.result;\n      if (!cursor) {\n        return;\n      }\n      var metadata = decodeMetadata(cursor.value);\n      var winningRev = metadata.winningRev;\n\n      allDocsInner(cursor, winningRev, metadata);\n    }\n\n    function onResultsReady() {\n      callback(null, {\n        total_rows: docCount,\n        offset: opts.skip,\n        rows: results\n      });\n    }\n\n    function onTxnComplete() {\n      if (opts.attachments) {\n        postProcessAttachments(results, opts.binary).then(onResultsReady);\n      } else {\n        onResultsReady();\n      }\n    }\n\n    txn.oncomplete = onTxnComplete;\n    cursor.onsuccess = onGetCursor;\n  }\n\n  function allDocs(opts, callback) {\n\n    if (opts.limit === 0) {\n      return callback(null, {\n        total_rows: api._meta.docCount,\n        offset: opts.skip,\n        rows: []\n      });\n    }\n    allDocsQuery(opts, callback);\n  }\n\n  allDocs(opts, callback);\n}\n\nmodule.exports = idbAllDocs;\n},{\"../../deps/errors\":66,\"../../deps/merge/collectConflicts\":70,\"./constants\":22,\"./utils\":24}],20:[function(require,module,exports){\n'use strict';\n\nvar utils = require('../../utils');\nvar createBlob = require('../../deps/binary/blob');\n\nvar idbConstants = require('./constants');\nvar DETECT_BLOB_SUPPORT_STORE = idbConstants.DETECT_BLOB_SUPPORT_STORE;\n\n//\n// Detect blob support. Chrome didn't support it until version 38.\n// In version 37 they had a broken version where PNGs (and possibly\n// other binary types) aren't stored correctly, because when you fetch\n// them, the content type is always null.\n//\n// Furthermore, they have some outstanding bugs where blobs occasionally\n// are read by FileReader as null, or by ajax as 404s.\n//\n// Sadly we use the 404 bug to detect the FileReader bug, so if they\n// get fixed independently and released in different versions of Chrome,\n// then the bug could come back. So it's worthwhile to watch these issues:\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\nfunction checkBlobSupport(txn, idb) {\n  return new utils.Promise(function (resolve, reject) {\n    var blob = createBlob([''], {type: 'image/png'});\n    txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n    txn.onabort = function (e) {\n      // If the transaction aborts now its due to not being able to\n      // write to the database, likely due to the disk being full\n      e.preventDefault();\n      e.stopPropagation();\n      resolve(false);\n    };\n\n    txn.oncomplete = function () {\n      // have to do it in a separate transaction, else the correct\n      // content type is always returned\n      var blobTxn = idb.transaction([DETECT_BLOB_SUPPORT_STORE],\n        'readwrite');\n      var getBlobReq = blobTxn.objectStore(\n        DETECT_BLOB_SUPPORT_STORE).get('key');\n      getBlobReq.onerror = reject;\n      getBlobReq.onsuccess = function (e) {\n\n        var storedBlob = e.target.result;\n        var url = URL.createObjectURL(storedBlob);\n\n        utils.ajax({\n          url: url,\n          cache: true,\n          binary: true\n        }, function (err, res) {\n          if (err && err.status === 405) {\n            // firefox won't let us do that. but firefox doesn't\n            // have the blob type bug that Chrome does, so that's ok\n            resolve(true);\n          } else {\n            resolve(!!(res && res.type === 'image/png'));\n            if (err && err.status === 404) {\n              utils.explain404('PouchDB is just detecting blob URL support.');\n            }\n          }\n          URL.revokeObjectURL(url);\n        });\n      };\n    };\n  }).catch(function () {\n    return false; // error, so assume unsupported\n  });\n}\n\nmodule.exports = checkBlobSupport;\n\n},{\"../../deps/binary/blob\":47,\"../../utils\":104,\"./constants\":22}],21:[function(require,module,exports){\n'use strict';\n\nvar utils = require('../../utils');\nvar errors = require('../../deps/errors');\nvar preprocessAttachments =\n  require('../../deps/docs/preprocessAttachments');\nvar processDocs = require('../../deps/docs/processDocs');\nvar isLocalId = require('../../deps/docs/isLocalId');\nvar idbUtils = require('./utils');\nvar idbConstants = require('./constants');\n\nvar ATTACH_AND_SEQ_STORE = idbConstants.ATTACH_AND_SEQ_STORE;\nvar ATTACH_STORE = idbConstants.ATTACH_STORE;\nvar BY_SEQ_STORE = idbConstants.BY_SEQ_STORE;\nvar DOC_STORE = idbConstants.DOC_STORE;\nvar LOCAL_STORE = idbConstants.LOCAL_STORE;\nvar META_STORE = idbConstants.META_STORE;\n\nvar compactRevs = idbUtils.compactRevs;\nvar decodeMetadata = idbUtils.decodeMetadata;\nvar encodeMetadata = idbUtils.encodeMetadata;\nvar idbError = idbUtils.idbError;\nvar openTransactionSafely = idbUtils.openTransactionSafely;\n\nfunction idbBulkDocs(req, opts, api, idb, Changes, callback) {\n  var docInfos = req.docs;\n  var txn;\n  var docStore;\n  var bySeqStore;\n  var attachStore;\n  var attachAndSeqStore;\n  var docInfoError;\n  var docCountDelta = 0;\n\n  for (var i = 0, len = docInfos.length; i < len; i++) {\n    var doc = docInfos[i];\n    if (doc._id && isLocalId(doc._id)) {\n      continue;\n    }\n    doc = docInfos[i] = utils.parseDoc(doc, opts.new_edits);\n    if (doc.error && !docInfoError) {\n      docInfoError = doc;\n    }\n  }\n\n  if (docInfoError) {\n    return callback(docInfoError);\n  }\n\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new utils.Map();\n  var preconditionErrored = false;\n  var blobType = api._meta.blobSupport ? 'blob' : 'base64';\n\n  preprocessAttachments(docInfos, blobType, function (err) {\n    if (err) {\n      return callback(err);\n    }\n    startTransaction();\n  });\n\n  function startTransaction() {\n\n    var stores = [\n      DOC_STORE, BY_SEQ_STORE,\n      ATTACH_STORE, META_STORE,\n      LOCAL_STORE, ATTACH_AND_SEQ_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    txn = txnResult.txn;\n    txn.onabort = idbError(callback);\n    txn.ontimeout = idbError(callback);\n    txn.oncomplete = complete;\n    docStore = txn.objectStore(DOC_STORE);\n    bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    attachStore = txn.objectStore(ATTACH_STORE);\n    attachAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\n    verifyAttachments(function (err) {\n      if (err) {\n        preconditionErrored = true;\n        return callback(err);\n      }\n      fetchExistingDocs();\n    });\n  }\n\n  function idbProcessDocs() {\n\n    processDocs(docInfos, api, fetchedDocs, txn, results, writeDoc, opts);\n  }\n\n  function fetchExistingDocs() {\n\n    if (!docInfos.length) {\n      return;\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        idbProcessDocs();\n      }\n    }\n\n    function readMetadata(event) {\n      var metadata = decodeMetadata(event.target.result);\n\n      if (metadata) {\n        fetchedDocs.set(metadata.id, metadata);\n      }\n      checkDone();\n    }\n\n    for (var i = 0, len = docInfos.length; i < len; i++) {\n      var docInfo = docInfos[i];\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        checkDone(); // skip local docs\n        continue;\n      }\n      var req = docStore.get(docInfo.metadata.id);\n      req.onsuccess = readMetadata;\n    }\n  }\n\n  function complete() {\n    if (preconditionErrored) {\n      return;\n    }\n\n    Changes.notify(api._meta.name);\n    api._meta.docCount += docCountDelta;\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n\n    var req = attachStore.get(digest);\n    req.onsuccess = function (e) {\n      if (!e.target.result) {\n        var err = errors.error(errors.MISSING_STUB,\n          'unknown stub attachment with digest ' +\n          digest);\n        err.status = 412;\n        callback(err);\n      } else {\n        callback();\n      }\n    };\n  }\n\n  function verifyAttachments(finish) {\n\n\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev, winningRevIsDeleted, newRevIsDeleted,\n                    isUpdate, delta, resultsIdx, callback) {\n\n    docCountDelta += delta;\n\n    docInfo.metadata.winningRev = winningRev;\n    docInfo.metadata.deleted = winningRevIsDeleted;\n\n    var doc = docInfo.data;\n    doc._id = docInfo.metadata.id;\n    doc._rev = docInfo.metadata.rev;\n\n    if (newRevIsDeleted) {\n      doc._deleted = true;\n    }\n\n    var hasAttachments = doc._attachments &&\n      Object.keys(doc._attachments).length;\n    if (hasAttachments) {\n      return writeAttachments(docInfo, winningRev, winningRevIsDeleted,\n        isUpdate, resultsIdx, callback);\n    }\n\n    finishDoc(docInfo, winningRev, winningRevIsDeleted,\n      isUpdate, resultsIdx, callback);\n  }\n\n  function autoCompact(docInfo) {\n\n    var revsToDelete = utils.compactTree(docInfo.metadata);\n    compactRevs(revsToDelete, docInfo.metadata.id, txn);\n  }\n\n  function finishDoc(docInfo, winningRev, winningRevIsDeleted,\n                     isUpdate, resultsIdx, callback) {\n\n    var doc = docInfo.data;\n    var metadata = docInfo.metadata;\n\n    doc._doc_id_rev = metadata.id + '::' + metadata.rev;\n    delete doc._id;\n    delete doc._rev;\n\n    function afterPutDoc(e) {\n      if (isUpdate && api.auto_compaction) {\n        autoCompact(docInfo);\n      }\n      metadata.seq = e.target.result;\n      // Current _rev is calculated from _rev_tree on read\n      delete metadata.rev;\n      var metadataToStore = encodeMetadata(metadata, winningRev,\n        winningRevIsDeleted);\n      var metaDataReq = docStore.put(metadataToStore);\n      metaDataReq.onsuccess = afterPutMetadata;\n    }\n\n    function afterPutDocError(e) {\n      // ConstraintError, need to update, not put (see #1638 for details)\n      e.preventDefault(); // avoid transaction abort\n      e.stopPropagation(); // avoid transaction onerror\n      var index = bySeqStore.index('_doc_id_rev');\n      var getKeyReq = index.getKey(doc._doc_id_rev);\n      getKeyReq.onsuccess = function (e) {\n        var putReq = bySeqStore.put(doc, e.target.result);\n        putReq.onsuccess = afterPutDoc;\n      };\n    }\n\n    function afterPutMetadata() {\n      results[resultsIdx] = {\n        ok: true,\n        id: metadata.id,\n        rev: winningRev\n      };\n      fetchedDocs.set(docInfo.metadata.id, docInfo.metadata);\n      insertAttachmentMappings(docInfo, metadata.seq, callback);\n    }\n\n    var putReq = bySeqStore.put(doc);\n\n    putReq.onsuccess = afterPutDoc;\n    putReq.onerror = afterPutDocError;\n  }\n\n  function writeAttachments(docInfo, winningRev, winningRevIsDeleted,\n                            isUpdate, resultsIdx, callback) {\n\n\n    var doc = docInfo.data;\n\n    var numDone = 0;\n    var attachments = Object.keys(doc._attachments);\n\n    function collectResults() {\n      if (numDone === attachments.length) {\n        finishDoc(docInfo, winningRev, winningRevIsDeleted,\n          isUpdate, resultsIdx, callback);\n      }\n    }\n\n    function attachmentSaved() {\n      numDone++;\n      collectResults();\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        numDone++;\n        collectResults();\n      }\n    });\n  }\n\n  // map seqs to attachment digests, which\n  // we will need later during compaction\n  function insertAttachmentMappings(docInfo, seq, callback) {\n\n    var attsAdded = 0;\n    var attsToAdd = Object.keys(docInfo.data._attachments || {});\n\n    if (!attsToAdd.length) {\n      return callback();\n    }\n\n    function checkDone() {\n      if (++attsAdded === attsToAdd.length) {\n        callback();\n      }\n    }\n\n    function add(att) {\n      var digest = docInfo.data._attachments[att].digest;\n      var req = attachAndSeqStore.put({\n        seq: seq,\n        digestSeq: digest + '::' + seq\n      });\n\n      req.onsuccess = checkDone;\n      req.onerror = function (e) {\n        // this callback is for a constaint error, which we ignore\n        // because this docid/rev has already been associated with\n        // the digest (e.g. when new_edits == false)\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n        checkDone();\n      };\n    }\n    for (var i = 0; i < attsToAdd.length; i++) {\n      add(attsToAdd[i]); // do in parallel\n    }\n  }\n\n  function saveAttachment(digest, data, callback) {\n\n\n    var getKeyReq = attachStore.count(digest);\n    getKeyReq.onsuccess = function(e) {\n      var count = e.target.result;\n      if (count) {\n        return callback(); // already exists\n      }\n      var newAtt = {\n        digest: digest,\n        body: data\n      };\n      var putReq = attachStore.put(newAtt);\n      putReq.onsuccess = callback;\n    };\n  }\n}\n\nmodule.exports = idbBulkDocs;\n\n},{\"../../deps/docs/isLocalId\":57,\"../../deps/docs/preprocessAttachments\":61,\"../../deps/docs/processDocs\":62,\"../../deps/errors\":66,\"../../utils\":104,\"./constants\":22,\"./utils\":24}],22:[function(require,module,exports){\n'use strict';\n\n// IndexedDB requires a versioned database structure, so we use the\n// version here to manage migrations.\nexports.ADAPTER_VERSION = 5;\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\n// Keyed by document id\nexports. DOC_STORE = 'document-store';\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nexports.BY_SEQ_STORE = 'by-sequence';\n// Where we store attachments\nexports.ATTACH_STORE = 'attach-store';\n// Where we store many-to-many relations\n// between attachment digests and seqs\nexports.ATTACH_AND_SEQ_STORE = 'attach-seq-store';\n\n// Where we store database-wide meta data in a single record\n// keyed by id: META_STORE\nexports.META_STORE = 'meta-store';\n// Where we store local documents\nexports.LOCAL_STORE = 'local-store';\n// Where we detect blob support\nexports.DETECT_BLOB_SUPPORT_STORE = 'detect-blob-support';\n},{}],23:[function(require,module,exports){\n(function (process){\n'use strict';\n\nvar utils = require('../../utils');\nvar isDeleted = require('../../deps/docs/isDeleted');\nvar isLocalId = require('../../deps/docs/isLocalId');\nvar errors = require('../../deps/errors');\nvar idbUtils = require('./utils');\nvar idbConstants = require('./constants');\nvar idbBulkDocs = require('./bulkDocs');\nvar idbAllDocs = require('./allDocs');\nvar checkBlobSupport = require('./blobSupport');\nvar hasLocalStorage = require('../../deps/env/hasLocalStorage');\nvar calculateWinningRev = require('../../deps/merge/winningRev');\nvar traverseRevTree = require('../../deps/merge/traverseRevTree');\n\nvar ADAPTER_VERSION = idbConstants.ADAPTER_VERSION;\nvar ATTACH_AND_SEQ_STORE = idbConstants.ATTACH_AND_SEQ_STORE;\nvar ATTACH_STORE = idbConstants.ATTACH_STORE;\nvar BY_SEQ_STORE = idbConstants.BY_SEQ_STORE;\nvar DETECT_BLOB_SUPPORT_STORE = idbConstants.DETECT_BLOB_SUPPORT_STORE;\nvar DOC_STORE = idbConstants.DOC_STORE;\nvar LOCAL_STORE = idbConstants.LOCAL_STORE;\nvar META_STORE = idbConstants.META_STORE;\n\nvar applyNext = idbUtils.applyNext;\nvar compactRevs = idbUtils.compactRevs;\nvar decodeDoc = idbUtils.decodeDoc;\nvar decodeMetadata = idbUtils.decodeMetadata;\nvar encodeMetadata = idbUtils.encodeMetadata;\nvar fetchAttachmentsIfNecessary = idbUtils.fetchAttachmentsIfNecessary;\nvar idbError = idbUtils.idbError;\nvar postProcessAttachments = idbUtils.postProcessAttachments;\nvar readBlobData = idbUtils.readBlobData;\nvar taskQueue = idbUtils.taskQueue;\nvar openTransactionSafely = idbUtils.openTransactionSafely;\n\nvar cachedDBs = {};\nvar blobSupportPromise;\n\nfunction IdbPouch(opts, callback) {\n  var api = this;\n\n  taskQueue.queue.push({\n    action: function (thisCallback) {\n      init(api, opts, thisCallback);\n    },\n    callback: callback\n  });\n  applyNext();\n}\n\nfunction init(api, opts, callback) {\n\n  var dbName = opts.name;\n\n  var idb = null;\n  api._meta = null;\n\n  // called when creating a fresh new database\n  function createSchema(db) {\n    var docStore = db.createObjectStore(DOC_STORE, {keyPath : 'id'});\n    db.createObjectStore(BY_SEQ_STORE, {autoIncrement: true})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n    db.createObjectStore(ATTACH_STORE, {keyPath: 'digest'});\n    db.createObjectStore(META_STORE, {keyPath: 'id', autoIncrement: false});\n    db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n\n    // added in v2\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    // added in v3\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'});\n\n    // added in v4\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 2\n  // unfortunately \"deletedOrLocal\" is a misnomer now that we no longer\n  // store local docs in the main doc-store, but whaddyagonnado\n  function addDeletedOrLocalIndex(txn, callback) {\n    var docStore = txn.objectStore(DOC_STORE);\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    docStore.openCursor().onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var deleted = isDeleted(metadata);\n        metadata.deletedOrLocal = deleted ? \"1\" : \"0\";\n        docStore.put(metadata);\n        cursor.continue();\n      } else {\n        callback();\n      }\n    };\n  }\n\n  // migration to version 3 (part 1)\n  function createLocalStoreSchema(db) {\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n  }\n\n  // migration to version 3 (part 2)\n  function migrateLocalStore(txn, cb) {\n    var localStore = txn.objectStore(LOCAL_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var docId = metadata.id;\n        var local = isLocalId(docId);\n        var rev = calculateWinningRev(metadata);\n        if (local) {\n          var docIdRev = docId + \"::\" + rev;\n          // remove all seq entries\n          // associated with this docId\n          var start = docId + \"::\";\n          var end = docId + \"::~\";\n          var index = seqStore.index('_doc_id_rev');\n          var range = IDBKeyRange.bound(start, end, false, false);\n          var seqCursor = index.openCursor(range);\n          seqCursor.onsuccess = function (e) {\n            seqCursor = e.target.result;\n            if (!seqCursor) {\n              // done\n              docStore.delete(cursor.primaryKey);\n              cursor.continue();\n            } else {\n              var data = seqCursor.value;\n              if (data._doc_id_rev === docIdRev) {\n                localStore.put(data);\n              }\n              seqStore.delete(seqCursor.primaryKey);\n              seqCursor.continue();\n            }\n          };\n        } else {\n          cursor.continue();\n        }\n      } else if (cb) {\n        cb();\n      }\n    };\n  }\n\n  // migration to version 4 (part 1)\n  function addAttachAndSeqStore(db) {\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 4 (part 2)\n  function migrateAttsAndSeqs(txn, callback) {\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n    var attStore = txn.objectStore(ATTACH_STORE);\n    var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\n    // need to actually populate the table. this is the expensive part,\n    // so as an optimization, check first that this database even\n    // contains attachments\n    var req = attStore.count();\n    req.onsuccess = function (e) {\n      var count = e.target.result;\n      if (!count) {\n        return callback(); // done\n      }\n\n      seqStore.openCursor().onsuccess = function (e) {\n        var cursor = e.target.result;\n        if (!cursor) {\n          return callback(); // done\n        }\n        var doc = cursor.value;\n        var seq = cursor.primaryKey;\n        var atts = Object.keys(doc._attachments || {});\n        var digestMap = {};\n        for (var j = 0; j < atts.length; j++) {\n          var att = doc._attachments[atts[j]];\n          digestMap[att.digest] = true; // uniq digests, just in case\n        }\n        var digests = Object.keys(digestMap);\n        for (j = 0; j < digests.length; j++) {\n          var digest = digests[j];\n          attAndSeqStore.put({\n            seq: seq,\n            digestSeq: digest + '::' + seq\n          });\n        }\n        cursor.continue();\n      };\n    };\n  }\n\n  // migration to version 5\n  // Instead of relying on on-the-fly migration of metadata,\n  // this brings the doc-store to its modern form:\n  // - metadata.winningrev\n  // - metadata.seq\n  // - stringify the metadata when storing it\n  function migrateMetadata(txn) {\n\n    function decodeMetadataCompat(storedObject) {\n      if (!storedObject.data) {\n        // old format, when we didn't store it stringified\n        storedObject.deleted = storedObject.deletedOrLocal === '1';\n        return storedObject;\n      }\n      return decodeMetadata(storedObject);\n    }\n\n    // ensure that every metadata has a winningRev and seq,\n    // which was previously created on-the-fly but better to migrate\n    var bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (e) {\n      var cursor = e.target.result;\n      if (!cursor) {\n        return; // done\n      }\n      var metadata = decodeMetadataCompat(cursor.value);\n\n      metadata.winningRev = metadata.winningRev ||\n        calculateWinningRev(metadata);\n\n      function fetchMetadataSeq() {\n        // metadata.seq was added post-3.2.0, so if it's missing,\n        // we need to fetch it manually\n        var start = metadata.id + '::';\n        var end = metadata.id + '::\\uffff';\n        var req = bySeqStore.index('_doc_id_rev').openCursor(\n          IDBKeyRange.bound(start, end));\n\n        var metadataSeq = 0;\n        req.onsuccess = function (e) {\n          var cursor = e.target.result;\n          if (!cursor) {\n            metadata.seq = metadataSeq;\n            return onGetMetadataSeq();\n          }\n          var seq = cursor.primaryKey;\n          if (seq > metadataSeq) {\n            metadataSeq = seq;\n          }\n          cursor.continue();\n        };\n      }\n\n      function onGetMetadataSeq() {\n        var metadataToStore = encodeMetadata(metadata,\n          metadata.winningRev, metadata.deleted);\n\n        var req = docStore.put(metadataToStore);\n        req.onsuccess = function () {\n          cursor.continue();\n        };\n      }\n\n      if (metadata.seq) {\n        return onGetMetadataSeq();\n      }\n\n      fetchMetadataSeq();\n    };\n\n  }\n\n  api.type = function () {\n    return 'idb';\n  };\n\n  api._id = utils.toPromise(function (callback) {\n    callback(null, api._meta.instanceId);\n  });\n\n  api._bulkDocs = function idb_bulkDocs(req, opts, callback) {\n    idbBulkDocs(req, opts, api, idb, IdbPouch.Changes, callback);\n  };\n\n  // First we look up the metadata in the ids database, then we fetch the\n  // current revision(s) from the by sequence store\n  api._get = function idb_get(id, opts, callback) {\n    var doc;\n    var metadata;\n    var err;\n    var txn = opts.ctx;\n    if (!txn) {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n\n    function finish() {\n      callback(err, {doc: doc, metadata: metadata, ctx: txn});\n    }\n\n    txn.objectStore(DOC_STORE).get(id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      // we can determine the result here if:\n      // 1. there is no such document\n      // 2. the document is deleted and we don't ask about specific rev\n      // When we ask with opts.rev we expect the answer to be either\n      // doc (possibly with _deleted=true) or missing error\n      if (!metadata) {\n        err = errors.error(errors.MISSING_DOC, 'missing');\n        return finish();\n      }\n      if (isDeleted(metadata) && !opts.rev) {\n        err = errors.error(errors.MISSING_DOC, \"deleted\");\n        return finish();\n      }\n      var objectStore = txn.objectStore(BY_SEQ_STORE);\n\n      var rev = opts.rev || metadata.winningRev;\n      var key = metadata.id + '::' + rev;\n\n      objectStore.index('_doc_id_rev').get(key).onsuccess = function (e) {\n        doc = e.target.result;\n        if (doc) {\n          doc = decodeDoc(doc);\n        }\n        if (!doc) {\n          err = errors.error(errors.MISSING_DOC, 'missing');\n          return finish();\n        }\n        finish();\n      };\n    };\n  };\n\n  api._getAttachment = function (attachment, opts, callback) {\n    var txn;\n    if (opts.ctx) {\n      txn = opts.ctx;\n    } else {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n\n    txn.objectStore(ATTACH_STORE).get(digest).onsuccess = function (e) {\n      var body = e.target.result.body;\n      readBlobData(body, type, opts.binary, function (blobData) {\n        callback(null, blobData);\n      });\n    };\n  };\n\n  api._info = function idb_info(callback) {\n\n    if (idb === null || !cachedDBs[dbName]) {\n      var error = new Error('db isn\\'t open');\n      error.id = 'idbNull';\n      return callback(error);\n    }\n    var updateSeq;\n    var docCount;\n\n    var txnResult = openTransactionSafely(idb, [BY_SEQ_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    var cursor = txn.objectStore(BY_SEQ_STORE).openCursor(null, 'prev');\n    cursor.onsuccess = function (event) {\n      var cursor = event.target.result;\n      updateSeq = cursor ? cursor.key : 0;\n      // count within the same txn for consistency\n      docCount = api._meta.docCount;\n    };\n\n    txn.oncomplete = function () {\n      callback(null, {\n        doc_count: docCount,\n        update_seq: updateSeq,\n        // for debugging\n        idb_attachment_format: (api._meta.blobSupport ? 'binary' : 'base64')\n      });\n    };\n  };\n\n  api._allDocs = function idb_allDocs(opts, callback) {\n    idbAllDocs(opts, api, idb, callback);\n  };\n\n  api._changes = function (opts) {\n    opts = utils.clone(opts);\n\n    if (opts.continuous) {\n      var id = dbName + ':' + utils.uuid();\n      IdbPouch.Changes.addListener(dbName, id, api, opts);\n      IdbPouch.Changes.notify(dbName);\n      return {\n        cancel: function () {\n          IdbPouch.Changes.removeListener(dbName, id);\n        }\n      };\n    }\n\n    var docIds = opts.doc_ids && new utils.Set(opts.doc_ids);\n\n    opts.since = opts.since || 0;\n    var lastSeq = opts.since;\n\n    var limit = 'limit' in opts ? opts.limit : -1;\n    if (limit === 0) {\n      limit = 1; // per CouchDB _changes spec\n    }\n    var returnDocs;\n    if ('returnDocs' in opts) {\n      returnDocs = opts.returnDocs;\n    } else {\n      returnDocs = true;\n    }\n\n    var results = [];\n    var numResults = 0;\n    var filter = utils.filterChange(opts);\n    var docIdsToMetadata = new utils.Map();\n\n    var txn;\n    var bySeqStore;\n    var docStore;\n    var docIdRevIndex;\n\n    function onGetCursor(cursor) {\n\n      var doc = decodeDoc(cursor.value);\n      var seq = cursor.key;\n\n      if (docIds && !docIds.has(doc._id)) {\n        return cursor.continue();\n      }\n\n      var metadata;\n\n      function onGetMetadata() {\n        if (metadata.seq !== seq) {\n          // some other seq is later\n          return cursor.continue();\n        }\n\n        lastSeq = seq;\n\n        if (metadata.winningRev === doc._rev) {\n          return onGetWinningDoc(doc);\n        }\n\n        fetchWinningDoc();\n      }\n\n      function fetchWinningDoc() {\n        var docIdRev = doc._id + '::' + metadata.winningRev;\n        var req = docIdRevIndex.get(docIdRev);\n        req.onsuccess = function (e) {\n          onGetWinningDoc(decodeDoc(e.target.result));\n        };\n      }\n\n      function onGetWinningDoc(winningDoc) {\n\n        var change = opts.processChange(winningDoc, metadata, opts);\n        change.seq = metadata.seq;\n\n        var filtered = filter(change);\n        if (typeof filtered === 'object') {\n          return opts.complete(filtered);\n        }\n\n        if (filtered) {\n          numResults++;\n          if (returnDocs) {\n            results.push(change);\n          }\n          // process the attachment immediately\n          // for the benefit of live listeners\n          if (opts.attachments && opts.include_docs) {\n            fetchAttachmentsIfNecessary(winningDoc, opts, txn, function () {\n              postProcessAttachments([change], opts.binary).then(function () {\n                opts.onChange(change);\n              });\n            });\n          } else {\n            opts.onChange(change);\n          }\n        }\n        if (numResults !== limit) {\n          cursor.continue();\n        }\n      }\n\n      metadata = docIdsToMetadata.get(doc._id);\n      if (metadata) { // cached\n        return onGetMetadata();\n      }\n      // metadata not cached, have to go fetch it\n      docStore.get(doc._id).onsuccess = function (event) {\n        metadata = decodeMetadata(event.target.result);\n        docIdsToMetadata.set(doc._id, metadata);\n        onGetMetadata();\n      };\n    }\n\n    function onsuccess(event) {\n      var cursor = event.target.result;\n\n      if (!cursor) {\n        return;\n      }\n      onGetCursor(cursor);\n    }\n\n    function fetchChanges() {\n      var objectStores = [DOC_STORE, BY_SEQ_STORE];\n      if (opts.attachments) {\n        objectStores.push(ATTACH_STORE);\n      }\n      var txnResult = openTransactionSafely(idb, objectStores, 'readonly');\n      if (txnResult.error) {\n        return opts.complete(txnResult.error);\n      }\n      txn = txnResult.txn;\n      txn.onabort = idbError(opts.complete);\n      txn.oncomplete = onTxnComplete;\n\n      bySeqStore = txn.objectStore(BY_SEQ_STORE);\n      docStore = txn.objectStore(DOC_STORE);\n      docIdRevIndex = bySeqStore.index('_doc_id_rev');\n\n      var req;\n\n      if (opts.descending) {\n        req = bySeqStore.openCursor(null, 'prev');\n      } else {\n        req = bySeqStore.openCursor(IDBKeyRange.lowerBound(opts.since, true));\n      }\n\n      req.onsuccess = onsuccess;\n    }\n\n    fetchChanges();\n\n    function onTxnComplete() {\n\n      function finish() {\n        opts.complete(null, {\n          results: results,\n          last_seq: lastSeq\n        });\n      }\n\n      if (!opts.continuous && opts.attachments) {\n        // cannot guarantee that postProcessing was already done,\n        // so do it again\n        postProcessAttachments(results).then(finish);\n      } else {\n        finish();\n      }\n    }\n  };\n\n  api._close = function (callback) {\n    if (idb === null) {\n      return callback(errors.error(errors.NOT_OPEN));\n    }\n\n    // https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase#close\n    // \"Returns immediately and closes the connection in a separate thread...\"\n    idb.close();\n    delete cachedDBs[dbName];\n    idb = null;\n    callback();\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    var txnResult = openTransactionSafely(idb, [DOC_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    var req = txn.objectStore(DOC_STORE).get(docId);\n    req.onsuccess = function (event) {\n      var doc = decodeMetadata(event.target.result);\n      if (!doc) {\n        callback(errors.error(errors.MISSING_DOC));\n      } else {\n        callback(null, doc.rev_tree);\n      }\n    };\n  };\n\n  // This function removes revisions of document docId\n  // which are listed in revs and sets this document\n  // revision to to rev_tree\n  api._doCompaction = function (docId, revs, callback) {\n    var stores = [\n      DOC_STORE,\n      BY_SEQ_STORE,\n      ATTACH_STORE,\n      ATTACH_AND_SEQ_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n\n    var docStore = txn.objectStore(DOC_STORE);\n\n    docStore.get(docId).onsuccess = function (event) {\n      var metadata = decodeMetadata(event.target.result);\n      traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                         revHash, ctx, opts) {\n        var rev = pos + '-' + revHash;\n        if (revs.indexOf(rev) !== -1) {\n          opts.status = 'missing';\n        }\n      });\n      compactRevs(revs, docId, txn);\n      var winningRev = metadata.winningRev;\n      var deleted = metadata.deleted;\n      txn.objectStore(DOC_STORE).put(\n        encodeMetadata(metadata, winningRev, deleted));\n    };\n    txn.onabort = idbError(callback);\n    txn.oncomplete = function () {\n      callback();\n    };\n  };\n\n\n  api._getLocal = function (id, callback) {\n    var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var tx = txnResult.txn;\n    var req = tx.objectStore(LOCAL_STORE).get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var doc = e.target.result;\n      if (!doc) {\n        callback(errors.error(errors.MISSING_DOC));\n      } else {\n        delete doc['_doc_id_rev']; // for backwards compat\n        callback(null, doc);\n      }\n    };\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    if (!oldRev) {\n      doc._rev = '0-1';\n    } else {\n      doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n\n    var tx = opts.ctx;\n    var ret;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.onerror = idbError(callback);\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req;\n    if (oldRev) {\n      req = oStore.get(id);\n      req.onsuccess = function (e) {\n        var oldDoc = e.target.result;\n        if (!oldDoc || oldDoc._rev !== oldRev) {\n          callback(errors.error(errors.REV_CONFLICT));\n        } else { // update\n          var req = oStore.put(doc);\n          req.onsuccess = function () {\n            ret = {ok: true, id: doc._id, rev: doc._rev};\n            if (opts.ctx) { // return immediately\n              callback(null, ret);\n            }\n          };\n        }\n      };\n    } else { // new doc\n      req = oStore.add(doc);\n      req.onerror = function (e) {\n        // constraint error, already exists\n        callback(errors.error(errors.REV_CONFLICT));\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n      };\n      req.onsuccess = function () {\n        ret = {ok: true, id: doc._id, rev: doc._rev};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      };\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var tx = opts.ctx;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n    var ret;\n    var id = doc._id;\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req = oStore.get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var oldDoc = e.target.result;\n      if (!oldDoc || oldDoc._rev !== doc._rev) {\n        callback(errors.error(errors.MISSING_DOC));\n      } else {\n        oStore.delete(id);\n        ret = {ok: true, id: id, rev: '0-0'};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      }\n    };\n  };\n\n  api._destroy = function (opts, callback) {\n    IdbPouch.Changes.removeAllListeners(dbName);\n\n    //Close open request for \"dbName\" database to fix ie delay.\n    if (IdbPouch.openReqList[dbName] && IdbPouch.openReqList[dbName].result) {\n      IdbPouch.openReqList[dbName].result.close();\n      delete cachedDBs[dbName];\n    }\n    var req = indexedDB.deleteDatabase(dbName);\n\n    req.onsuccess = function () {\n      //Remove open request from the list.\n      if (IdbPouch.openReqList[dbName]) {\n        IdbPouch.openReqList[dbName] = null;\n      }\n      if (hasLocalStorage() && (dbName in localStorage)) {\n        delete localStorage[dbName];\n      }\n      callback(null, { 'ok': true });\n    };\n\n    req.onerror = idbError(callback);\n  };\n\n  var cached = cachedDBs[dbName];\n\n  if (cached) {\n    idb = cached.idb;\n    api._meta = cached.global;\n    process.nextTick(function () {\n      callback(null, api);\n    });\n    return;\n  }\n\n  var req;\n  if (opts.storage) {\n    req = indexedDB.open(dbName, {\n      version: ADAPTER_VERSION,\n      storage: opts.storage\n    });\n  } else {\n    req = indexedDB.open(dbName, ADAPTER_VERSION);\n  }\n\n  if (!('openReqList' in IdbPouch)) {\n    IdbPouch.openReqList = {};\n  }\n  IdbPouch.openReqList[dbName] = req;\n\n  req.onupgradeneeded = function (e) {\n    var db = e.target.result;\n    if (e.oldVersion < 1) {\n      return createSchema(db); // new db, initial schema\n    }\n    // do migrations\n\n    var txn = e.currentTarget.transaction;\n    // these migrations have to be done in this function, before\n    // control is returned to the event loop, because IndexedDB\n\n    if (e.oldVersion < 3) {\n      createLocalStoreSchema(db); // v2 -> v3\n    }\n    if (e.oldVersion < 4) {\n      addAttachAndSeqStore(db); // v3 -> v4\n    }\n\n    var migrations = [\n      addDeletedOrLocalIndex, // v1 -> v2\n      migrateLocalStore,      // v2 -> v3\n      migrateAttsAndSeqs,     // v3 -> v4\n      migrateMetadata         // v4 -> v5\n    ];\n\n    var i = e.oldVersion;\n\n    function next() {\n      var migration = migrations[i - 1];\n      i++;\n      if (migration) {\n        migration(txn, next);\n      }\n    }\n\n    next();\n  };\n\n  req.onsuccess = function (e) {\n\n    idb = e.target.result;\n\n    idb.onversionchange = function () {\n      idb.close();\n      delete cachedDBs[dbName];\n    };\n\n    idb.onabort = function (e) {\n      console.error('Database has a global failure', e.target.error);\n      idb.close();\n      delete cachedDBs[dbName];\n    };\n\n    var txn = idb.transaction([\n      META_STORE,\n      DETECT_BLOB_SUPPORT_STORE,\n      DOC_STORE\n    ], 'readwrite');\n\n    var req = txn.objectStore(META_STORE).get(META_STORE);\n\n    var blobSupport = null;\n    var docCount = null;\n    var instanceId = null;\n\n    req.onsuccess = function (e) {\n\n      var checkSetupComplete = function () {\n        if (blobSupport === null || docCount === null ||\n            instanceId === null) {\n          return;\n        } else {\n          api._meta = {\n            name: dbName,\n            instanceId: instanceId,\n            blobSupport: blobSupport,\n            docCount: docCount\n          };\n\n          cachedDBs[dbName] = {\n            idb: idb,\n            global: api._meta\n          };\n          callback(null, api);\n        }\n      };\n\n      //\n      // fetch/store the id\n      //\n\n      var meta = e.target.result || {id: META_STORE};\n      if (dbName  + '_id' in meta) {\n        instanceId = meta[dbName + '_id'];\n        checkSetupComplete();\n      } else {\n        instanceId = utils.uuid();\n        meta[dbName + '_id'] = instanceId;\n        txn.objectStore(META_STORE).put(meta).onsuccess = function () {\n          checkSetupComplete();\n        };\n      }\n\n      //\n      // check blob support\n      //\n\n      if (!blobSupportPromise) {\n        // make sure blob support is only checked once\n        blobSupportPromise = checkBlobSupport(txn, idb);\n      }\n\n      blobSupportPromise.then(function (val) {\n        blobSupport = val;\n        checkSetupComplete();\n      });\n\n      //\n      // count docs\n      //\n\n      var index = txn.objectStore(DOC_STORE).index('deletedOrLocal');\n      index.count(IDBKeyRange.only('0')).onsuccess = function (e) {\n        docCount = e.target.result;\n        checkSetupComplete();\n      };\n\n    };\n  };\n\n  req.onerror = function(e) {\n    var msg = 'Failed to open indexedDB, are you in private browsing mode?';\n    console.error(msg);\n    callback(errors.error(errors.IDB_ERROR, msg));\n  };\n}\n\nIdbPouch.valid = function () {\n  // Issue #2533, we finally gave up on doing bug\n  // detection instead of browser sniffing. Safari brought us\n  // to our knees.\n  var isSafari = typeof openDatabase !== 'undefined' &&\n    /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) &&\n    !/Chrome/.test(navigator.userAgent) &&\n    !/BlackBerry/.test(navigator.platform);\n\n  // some outdated implementations of IDB that appear on Samsung\n  // and HTC Android devices <4.4 are missing IDBKeyRange\n  return !isSafari && typeof indexedDB !== 'undefined' &&\n    typeof IDBKeyRange !== 'undefined';\n};\n\nIdbPouch.Changes = new utils.Changes();\n\nmodule.exports = IdbPouch;\n\n}).call(this,require('_process'))\n},{\"../../deps/docs/isDeleted\":56,\"../../deps/docs/isLocalId\":57,\"../../deps/env/hasLocalStorage\":64,\"../../deps/errors\":66,\"../../deps/merge/traverseRevTree\":75,\"../../deps/merge/winningRev\":76,\"../../utils\":104,\"./allDocs\":19,\"./blobSupport\":20,\"./bulkDocs\":21,\"./constants\":22,\"./utils\":24,\"_process\":108}],24:[function(require,module,exports){\n(function (process){\n'use strict';\n\nvar errors = require('../../deps/errors');\nvar utils = require('../../utils');\nvar base64 = require('../../deps/binary/base64');\nvar btoa = base64.btoa;\nvar constants = require('./constants');\nvar readAsBinaryString = require('../../deps/binary/readAsBinaryString');\nvar b64StringToBlob = require('../../deps/binary/base64StringToBlobOrBuffer');\nvar createBlob = require('../../deps/binary/blob');\n\nfunction tryCode(fun, that, args) {\n  try {\n    fun.apply(that, args);\n  } catch (err) { // shouldn't happen\n    if (typeof PouchDB !== 'undefined') {\n      PouchDB.emit('error', err);\n    }\n  }\n}\n\nexports.taskQueue = {\n  running: false,\n  queue: []\n};\n\nexports.applyNext = function () {\n  if (exports.taskQueue.running || !exports.taskQueue.queue.length) {\n    return;\n  }\n  exports.taskQueue.running = true;\n  var item = exports.taskQueue.queue.shift();\n  item.action(function (err, res) {\n    tryCode(item.callback, this, [err, res]);\n    exports.taskQueue.running = false;\n    process.nextTick(exports.applyNext);\n  });\n};\n\nexports.idbError = function (callback) {\n  return function (evt) {\n    var message = 'unknown_error';\n    if (evt.target && evt.target.error) {\n      message = evt.target.error.name || evt.target.error.message;\n    }\n    callback(errors.error(errors.IDB_ERROR, message, evt.type));\n  };\n};\n\n// Unfortunately, the metadata has to be stringified\n// when it is put into the database, because otherwise\n// IndexedDB can throw errors for deeply-nested objects.\n// Originally we just used JSON.parse/JSON.stringify; now\n// we use this custom vuvuzela library that avoids recursion.\n// If we could do it all over again, we'd probably use a\n// format for the revision trees other than JSON.\nexports.encodeMetadata = function (metadata, winningRev, deleted) {\n  return {\n    data: utils.safeJsonStringify(metadata),\n    winningRev: winningRev,\n    deletedOrLocal: deleted ? '1' : '0',\n    seq: metadata.seq, // highest seq for this doc\n    id: metadata.id\n  };\n};\n\nexports.decodeMetadata = function (storedObject) {\n  if (!storedObject) {\n    return null;\n  }\n  var metadata = utils.safeJsonParse(storedObject.data);\n  metadata.winningRev = storedObject.winningRev;\n  metadata.deleted = storedObject.deletedOrLocal === '1';\n  metadata.seq = storedObject.seq;\n  return metadata;\n};\n\n// read the doc back out from the database. we don't store the\n// _id or _rev because we already have _doc_id_rev.\nexports.decodeDoc = function (doc) {\n  if (!doc) {\n    return doc;\n  }\n  var idx = doc._doc_id_rev.lastIndexOf(':');\n  doc._id = doc._doc_id_rev.substring(0, idx - 1);\n  doc._rev = doc._doc_id_rev.substring(idx + 1);\n  delete doc._doc_id_rev;\n  return doc;\n};\n\n// Read a blob from the database, encoding as necessary\n// and translating from base64 if the IDB doesn't support\n// native Blobs\nexports.readBlobData = function (body, type, asBlob, callback) {\n  if (asBlob) {\n    if (!body) {\n      callback(createBlob([''], {type: type}));\n    } else if (typeof body !== 'string') { // we have blob support\n      callback(body);\n    } else { // no blob support\n      callback(b64StringToBlob(body, type));\n    }\n  } else { // as base64 string\n    if (!body) {\n      callback('');\n    } else if (typeof body !== 'string') { // we have blob support\n      readAsBinaryString(body, function (binary) {\n        callback(btoa(binary));\n      });\n    } else { // no blob support\n      callback(body);\n    }\n  }\n};\n\nexports.fetchAttachmentsIfNecessary = function (doc, opts, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var digest = attObj.digest;\n    var req = txn.objectStore(constants.ATTACH_STORE).get(digest);\n    req.onsuccess = function (e) {\n      attObj.body = e.target.result.body;\n      checkDone();\n    };\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n};\n\n// IDB-specific postprocessing necessary because\n// we don't know whether we stored a true Blob or\n// a base64-encoded string, and if it's a Blob it\n// needs to be read outside of the transaction context\nexports.postProcessAttachments = function (results, asBlob) {\n  return utils.Promise.all(results.map(function (row) {\n    if (row.doc && row.doc._attachments) {\n      var attNames = Object.keys(row.doc._attachments);\n      return utils.Promise.all(attNames.map(function (att) {\n        var attObj = row.doc._attachments[att];\n        if (!('body' in attObj)) { // already processed\n          return;\n        }\n        var body = attObj.body;\n        var type = attObj.content_type;\n        return new utils.Promise(function (resolve) {\n          exports.readBlobData(body, type, asBlob, function (data) {\n            row.doc._attachments[att] = utils.extend(\n              utils.pick(attObj, ['digest', 'content_type']),\n              {data: data}\n            );\n            resolve();\n          });\n        });\n      }));\n    }\n  }));\n};\n\nexports.compactRevs = function (revs, docId, txn) {\n\n  var possiblyOrphanedDigests = [];\n  var seqStore = txn.objectStore(constants.BY_SEQ_STORE);\n  var attStore = txn.objectStore(constants.ATTACH_STORE);\n  var attAndSeqStore = txn.objectStore(constants.ATTACH_AND_SEQ_STORE);\n  var count = revs.length;\n\n  function checkDone() {\n    count--;\n    if (!count) { // done processing all revs\n      deleteOrphanedAttachments();\n    }\n  }\n\n  function deleteOrphanedAttachments() {\n    if (!possiblyOrphanedDigests.length) {\n      return;\n    }\n    possiblyOrphanedDigests.forEach(function (digest) {\n      var countReq = attAndSeqStore.index('digestSeq').count(\n        IDBKeyRange.bound(\n          digest + '::', digest + '::\\uffff', false, false));\n      countReq.onsuccess = function (e) {\n        var count = e.target.result;\n        if (!count) {\n          // orphaned\n          attStore.delete(digest);\n        }\n      };\n    });\n  }\n\n  revs.forEach(function (rev) {\n    var index = seqStore.index('_doc_id_rev');\n    var key = docId + \"::\" + rev;\n    index.getKey(key).onsuccess = function (e) {\n      var seq = e.target.result;\n      if (typeof seq !== 'number') {\n        return checkDone();\n      }\n      seqStore.delete(seq);\n\n      var cursor = attAndSeqStore.index('seq')\n        .openCursor(IDBKeyRange.only(seq));\n\n      cursor.onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n          var digest = cursor.value.digestSeq.split('::')[0];\n          possiblyOrphanedDigests.push(digest);\n          attAndSeqStore.delete(cursor.primaryKey);\n          cursor.continue();\n        } else { // done\n          checkDone();\n        }\n      };\n    };\n  });\n};\n\nexports.openTransactionSafely = function (idb, stores, mode) {\n  try {\n    return {\n      txn: idb.transaction(stores, mode)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n};\n\n}).call(this,require('_process'))\n},{\"../../deps/binary/base64\":43,\"../../deps/binary/base64StringToBlobOrBuffer\":44,\"../../deps/binary/blob\":47,\"../../deps/binary/readAsBinaryString\":53,\"../../deps/errors\":66,\"../../utils\":104,\"./constants\":22,\"_process\":108}],25:[function(require,module,exports){\n'use strict';\n\nvar utils = require('../../utils');\nvar errors = require('../../deps/errors');\nvar preprocessAttachments =\n  require('../../deps/docs/preprocessAttachments');\nvar isLocalId = require('../../deps/docs/isLocalId');\nvar processDocs = require('../../deps/docs/processDocs');\n\nvar websqlUtils = require('./utils');\nvar websqlConstants = require('./constants');\n\nvar DOC_STORE = websqlConstants.DOC_STORE;\nvar BY_SEQ_STORE = websqlConstants.BY_SEQ_STORE;\nvar ATTACH_STORE = websqlConstants.ATTACH_STORE;\nvar ATTACH_AND_SEQ_STORE = websqlConstants.ATTACH_AND_SEQ_STORE;\n\nvar select = websqlUtils.select;\nvar stringifyDoc = websqlUtils.stringifyDoc;\nvar compactRevs = websqlUtils.compactRevs;\nvar unknownError = websqlUtils.websqlError;\n\nfunction websqlBulkDocs(req, opts, api, db, Changes, callback) {\n  var newEdits = opts.new_edits;\n  var userDocs = req.docs;\n\n  // Parse the docs, give them a sequence number for the result\n  var docInfos = userDocs.map(function (doc) {\n    if (doc._id && isLocalId(doc._id)) {\n      return doc;\n    }\n    var newDoc = utils.parseDoc(doc, newEdits);\n    return newDoc;\n  });\n\n  var docInfoErrors = docInfos.filter(function (docInfo) {\n    return docInfo.error;\n  });\n  if (docInfoErrors.length) {\n    return callback(docInfoErrors[0]);\n  }\n\n  var tx;\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new utils.Map();\n\n  var preconditionErrored;\n  function complete() {\n    if (preconditionErrored) {\n      return callback(preconditionErrored);\n    }\n    Changes.notify(api._name);\n    api._docCount = -1; // invalidate\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n    var sql = 'SELECT count(*) as cnt FROM ' + ATTACH_STORE +\n      ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      if (result.rows.item(0).cnt === 0) {\n        var err = errors.error(errors.MISSING_STUB,\n          'unknown stub attachment with digest ' +\n          digest);\n        callback(err);\n      } else {\n        callback();\n      }\n    });\n  }\n\n  function verifyAttachments(finish) {\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev, winningRevIsDeleted, newRevIsDeleted,\n                    isUpdate, delta, resultsIdx, callback) {\n\n    function finish() {\n      var data = docInfo.data;\n      var deletedInt = newRevIsDeleted ? 1 : 0;\n\n      var id = data._id;\n      var rev = data._rev;\n      var json = stringifyDoc(data);\n      var sql = 'INSERT INTO ' + BY_SEQ_STORE +\n        ' (doc_id, rev, json, deleted) VALUES (?, ?, ?, ?);';\n      var sqlArgs = [id, rev, json, deletedInt];\n\n      // map seqs to attachment digests, which\n      // we will need later during compaction\n      function insertAttachmentMappings(seq, callback) {\n        var attsAdded = 0;\n        var attsToAdd = Object.keys(data._attachments || {});\n\n        if (!attsToAdd.length) {\n          return callback();\n        }\n        function checkDone() {\n          if (++attsAdded === attsToAdd.length) {\n            callback();\n          }\n          return false; // ack handling a constraint error\n        }\n        function add(att) {\n          var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE +\n            ' (digest, seq) VALUES (?,?)';\n          var sqlArgs = [data._attachments[att].digest, seq];\n          tx.executeSql(sql, sqlArgs, checkDone, checkDone);\n          // second callback is for a constaint error, which we ignore\n          // because this docid/rev has already been associated with\n          // the digest (e.g. when new_edits == false)\n        }\n        for (var i = 0; i < attsToAdd.length; i++) {\n          add(attsToAdd[i]); // do in parallel\n        }\n      }\n\n      tx.executeSql(sql, sqlArgs, function (tx, result) {\n        var seq = result.insertId;\n        insertAttachmentMappings(seq, function () {\n          dataWritten(tx, seq);\n        });\n      }, function () {\n        // constraint error, recover by updating instead (see #1638)\n        var fetchSql = select('seq', BY_SEQ_STORE, null,\n          'doc_id=? AND rev=?');\n        tx.executeSql(fetchSql, [id, rev], function (tx, res) {\n          var seq = res.rows.item(0).seq;\n          var sql = 'UPDATE ' + BY_SEQ_STORE +\n            ' SET json=?, deleted=? WHERE doc_id=? AND rev=?;';\n          var sqlArgs = [json, deletedInt, id, rev];\n          tx.executeSql(sql, sqlArgs, function (tx) {\n            insertAttachmentMappings(seq, function () {\n              dataWritten(tx, seq);\n            });\n          });\n        });\n        return false; // ack that we've handled the error\n      });\n    }\n\n    function collectResults(attachmentErr) {\n      if (!err) {\n        if (attachmentErr) {\n          err = attachmentErr;\n          callback(err);\n        } else if (recv === attachments.length) {\n          finish();\n        }\n      }\n    }\n\n    var err = null;\n    var recv = 0;\n\n    docInfo.data._id = docInfo.metadata.id;\n    docInfo.data._rev = docInfo.metadata.rev;\n    var attachments = Object.keys(docInfo.data._attachments || {});\n\n\n    if (newRevIsDeleted) {\n      docInfo.data._deleted = true;\n    }\n\n    function attachmentSaved(err) {\n      recv++;\n      collectResults(err);\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        recv++;\n        collectResults();\n      }\n    });\n\n    if (!attachments.length) {\n      finish();\n    }\n\n    function autoCompact() {\n      if (!isUpdate || !api.auto_compaction) {\n        return; // nothing to do\n      }\n      var id = docInfo.metadata.id;\n      var revsToDelete = utils.compactTree(docInfo.metadata);\n      compactRevs(revsToDelete, id, tx);\n    }\n\n    function dataWritten(tx, seq) {\n      autoCompact();\n      docInfo.metadata.seq = seq;\n      delete docInfo.metadata.rev;\n\n      var sql = isUpdate ?\n      'UPDATE ' + DOC_STORE +\n      ' SET json=?, max_seq=?, winningseq=' +\n      '(SELECT seq FROM ' + BY_SEQ_STORE +\n      ' WHERE doc_id=' + DOC_STORE + '.id AND rev=?) WHERE id=?'\n        : 'INSERT INTO ' + DOC_STORE +\n      ' (id, winningseq, max_seq, json) VALUES (?,?,?,?);';\n      var metadataStr = utils.safeJsonStringify(docInfo.metadata);\n      var id = docInfo.metadata.id;\n      var params = isUpdate ?\n        [metadataStr, seq, winningRev, id] :\n        [id, seq, seq, metadataStr];\n      tx.executeSql(sql, params, function () {\n        results[resultsIdx] = {\n          ok: true,\n          id: docInfo.metadata.id,\n          rev: winningRev\n        };\n        fetchedDocs.set(id, docInfo.metadata);\n        callback();\n      });\n    }\n  }\n\n  function websqlProcessDocs() {\n    processDocs(docInfos, api, fetchedDocs, tx, results, writeDoc, opts);\n  }\n\n  function fetchExistingDocs(callback) {\n    if (!docInfos.length) {\n      return callback();\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        callback();\n      }\n    }\n\n    docInfos.forEach(function (docInfo) {\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        return checkDone(); // skip local docs\n      }\n      var id = docInfo.metadata.id;\n      tx.executeSql('SELECT json FROM ' + DOC_STORE +\n      ' WHERE id = ?', [id], function (tx, result) {\n        if (result.rows.length) {\n          var metadata = utils.safeJsonParse(result.rows.item(0).json);\n          fetchedDocs.set(id, metadata);\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function saveAttachment(digest, data, callback) {\n    var sql = 'SELECT digest FROM ' + ATTACH_STORE + ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      if (result.rows.length) { // attachment already exists\n        return callback();\n      }\n      // we could just insert before selecting and catch the error,\n      // but my hunch is that it's cheaper not to serialize the blob\n      // from JS to C if we don't have to (TODO: confirm this)\n      sql = 'INSERT INTO ' + ATTACH_STORE +\n      ' (digest, body, escaped) VALUES (?,?,1)';\n      tx.executeSql(sql, [digest, websqlUtils.escapeBlob(data)], function () {\n        callback();\n      }, function () {\n        // ignore constaint errors, means it already exists\n        callback();\n        return false; // ack we handled the error\n      });\n    });\n  }\n\n  preprocessAttachments(docInfos, 'binary', function (err) {\n    if (err) {\n      return callback(err);\n    }\n    db.transaction(function (txn) {\n      tx = txn;\n      verifyAttachments(function (err) {\n        if (err) {\n          preconditionErrored = err;\n        } else {\n          fetchExistingDocs(websqlProcessDocs);\n        }\n      });\n    }, unknownError(callback), complete);\n  });\n}\n\nmodule.exports = websqlBulkDocs;\n\n},{\"../../deps/docs/isLocalId\":57,\"../../deps/docs/preprocessAttachments\":61,\"../../deps/docs/processDocs\":62,\"../../deps/errors\":66,\"../../utils\":104,\"./constants\":26,\"./utils\":28}],26:[function(require,module,exports){\n'use strict';\n\nfunction quote(str) {\n  return \"'\" + str + \"'\";\n}\n\nexports.ADAPTER_VERSION = 7; // used to manage migrations\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\nexports.DOC_STORE = quote('document-store');\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nexports.BY_SEQ_STORE = quote('by-sequence');\n// Where we store attachments\nexports.ATTACH_STORE = quote('attach-store');\nexports.LOCAL_STORE = quote('local-store');\nexports.META_STORE = quote('metadata-store');\n// where we store many-to-many relations between attachment\n// digests and seqs\nexports.ATTACH_AND_SEQ_STORE = quote('attach-seq-store');\n\n\n},{}],27:[function(require,module,exports){\n'use strict';\n\nvar utils = require('../../utils');\nvar isDeleted = require('../../deps/docs/isDeleted');\nvar isLocalId = require('../../deps/docs/isLocalId');\nvar errors = require('../../deps/errors');\nvar parseHexString = require('../../deps/parseHex');\nvar binStringToBlob = require('../../deps/binary/binaryStringToBlobOrBuffer');\nvar hasLocalStorage = require('../../deps/env/hasLocalStorage');\nvar collectConflicts = require('../../deps/merge/collectConflicts');\nvar traverseRevTree = require('../../deps/merge/traverseRevTree');\n\nvar websqlConstants = require('./constants');\nvar websqlUtils = require('./utils');\nvar websqlBulkDocs = require('./bulkDocs');\n\nvar ADAPTER_VERSION = websqlConstants.ADAPTER_VERSION;\nvar DOC_STORE = websqlConstants.DOC_STORE;\nvar BY_SEQ_STORE = websqlConstants.BY_SEQ_STORE;\nvar ATTACH_STORE = websqlConstants.ATTACH_STORE;\nvar LOCAL_STORE = websqlConstants.LOCAL_STORE;\nvar META_STORE = websqlConstants.META_STORE;\nvar ATTACH_AND_SEQ_STORE = websqlConstants.ATTACH_AND_SEQ_STORE;\n\nvar qMarks = websqlUtils.qMarks;\nvar stringifyDoc = websqlUtils.stringifyDoc;\nvar unstringifyDoc = websqlUtils.unstringifyDoc;\nvar select = websqlUtils.select;\nvar compactRevs = websqlUtils.compactRevs;\nvar websqlError = websqlUtils.websqlError;\nvar getSize = websqlUtils.getSize;\nvar openDB = websqlUtils.openDB;\n\nfunction fetchAttachmentsIfNecessary(doc, opts, api, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var attOpts = {binary: opts.binary, ctx: txn};\n    api._getAttachment(attObj, attOpts, function (_, data) {\n      doc._attachments[att] = utils.extend(\n        utils.pick(attObj, ['digest', 'content_type']),\n        { data: data }\n      );\n      checkDone();\n    });\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n}\n\nvar POUCH_VERSION = 1;\n\n// these indexes cover the ground for most allDocs queries\nvar BY_SEQ_STORE_DELETED_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'by-seq-deleted-idx\\' ON ' +\n  BY_SEQ_STORE + ' (seq, deleted)';\nvar BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL =\n  'CREATE UNIQUE INDEX IF NOT EXISTS \\'by-seq-doc-id-rev\\' ON ' +\n    BY_SEQ_STORE + ' (doc_id, rev)';\nvar DOC_STORE_WINNINGSEQ_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'doc-winningseq-idx\\' ON ' +\n  DOC_STORE + ' (winningseq)';\nvar ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'attach-seq-seq-idx\\' ON ' +\n    ATTACH_AND_SEQ_STORE + ' (seq)';\nvar ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL =\n  'CREATE UNIQUE INDEX IF NOT EXISTS \\'attach-seq-digest-idx\\' ON ' +\n    ATTACH_AND_SEQ_STORE + ' (digest, seq)';\n\nvar DOC_STORE_AND_BY_SEQ_JOINER = BY_SEQ_STORE +\n  '.seq = ' + DOC_STORE + '.winningseq';\n\nvar SELECT_DOCS = BY_SEQ_STORE + '.seq AS seq, ' +\n  BY_SEQ_STORE + '.deleted AS deleted, ' +\n  BY_SEQ_STORE + '.json AS data, ' +\n  BY_SEQ_STORE + '.rev AS rev, ' +\n  DOC_STORE + '.json AS metadata';\n\nfunction WebSqlPouch(opts, callback) {\n  var api = this;\n  var instanceId = null;\n  var size = getSize(opts);\n  var idRequests = [];\n  var encoding;\n\n  api._docCount = -1; // cache sqlite count(*) for performance\n  api._name = opts.name;\n\n  var openDBResult = openDB({\n    name: api._name,\n    version: POUCH_VERSION,\n    description: api._name,\n    size: size,\n    location: opts.location,\n    createFromLocation: opts.createFromLocation,\n    androidDatabaseImplementation: opts.androidDatabaseImplementation\n  });\n  if (openDBResult.error) {\n    return websqlError(callback)(openDBResult.error);\n  }\n  var db = openDBResult.db;\n  if (typeof db.readTransaction !== 'function') {\n    // doesn't exist in sqlite plugin\n    db.readTransaction = db.transaction;\n  }\n\n  function dbCreated() {\n    // note the db name in case the browser upgrades to idb\n    if (hasLocalStorage()) {\n      window.localStorage['_pouch__websqldb_' + api._name] = true;\n    }\n    callback(null, api);\n  }\n\n  // In this migration, we added the 'deleted' and 'local' columns to the\n  // by-seq and doc store tables.\n  // To preserve existing user data, we re-process all the existing JSON\n  // and add these values.\n  // Called migration2 because it corresponds to adapter version (db_version) #2\n  function runMigration2(tx, callback) {\n    // index used for the join in the allDocs query\n    tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n\n    tx.executeSql('ALTER TABLE ' + BY_SEQ_STORE +\n      ' ADD COLUMN deleted TINYINT(1) DEFAULT 0', [], function () {\n      tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n      tx.executeSql('ALTER TABLE ' + DOC_STORE +\n        ' ADD COLUMN local TINYINT(1) DEFAULT 0', [], function () {\n        tx.executeSql('CREATE INDEX IF NOT EXISTS \\'doc-store-local-idx\\' ON ' +\n          DOC_STORE + ' (local, id)');\n\n        var sql = 'SELECT ' + DOC_STORE + '.winningseq AS seq, ' + DOC_STORE +\n          '.json AS metadata FROM ' + BY_SEQ_STORE + ' JOIN ' + DOC_STORE +\n          ' ON ' + BY_SEQ_STORE + '.seq = ' + DOC_STORE + '.winningseq';\n\n        tx.executeSql(sql, [], function (tx, result) {\n\n          var deleted = [];\n          var local = [];\n\n          for (var i = 0; i < result.rows.length; i++) {\n            var item = result.rows.item(i);\n            var seq = item.seq;\n            var metadata = JSON.parse(item.metadata);\n            if (isDeleted(metadata)) {\n              deleted.push(seq);\n            }\n            if (isLocalId(metadata.id)) {\n              local.push(metadata.id);\n            }\n          }\n          tx.executeSql('UPDATE ' + DOC_STORE + 'SET local = 1 WHERE id IN ' +\n            qMarks(local.length), local, function () {\n            tx.executeSql('UPDATE ' + BY_SEQ_STORE +\n              ' SET deleted = 1 WHERE seq IN ' +\n              qMarks(deleted.length), deleted, callback);\n          });\n        });\n      });\n    });\n  }\n\n  // in this migration, we make all the local docs unversioned\n  function runMigration3(tx, callback) {\n    var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE +\n      ' (id UNIQUE, rev, json)';\n    tx.executeSql(local, [], function () {\n      var sql = 'SELECT ' + DOC_STORE + '.id AS id, ' +\n        BY_SEQ_STORE + '.json AS data ' +\n        'FROM ' + BY_SEQ_STORE + ' JOIN ' +\n        DOC_STORE + ' ON ' + BY_SEQ_STORE + '.seq = ' +\n        DOC_STORE + '.winningseq WHERE local = 1';\n      tx.executeSql(sql, [], function (tx, res) {\n        var rows = [];\n        for (var i = 0; i < res.rows.length; i++) {\n          rows.push(res.rows.item(i));\n        }\n        function doNext() {\n          if (!rows.length) {\n            return callback(tx);\n          }\n          var row = rows.shift();\n          var rev = JSON.parse(row.data)._rev;\n          tx.executeSql('INSERT INTO ' + LOCAL_STORE +\n              ' (id, rev, json) VALUES (?,?,?)',\n              [row.id, rev, row.data], function (tx) {\n            tx.executeSql('DELETE FROM ' + DOC_STORE + ' WHERE id=?',\n                [row.id], function (tx) {\n              tx.executeSql('DELETE FROM ' + BY_SEQ_STORE + ' WHERE seq=?',\n                  [row.seq], function () {\n                doNext();\n              });\n            });\n          });\n        }\n        doNext();\n      });\n    });\n  }\n\n  // in this migration, we remove doc_id_rev and just use rev\n  function runMigration4(tx, callback) {\n\n    function updateRows(rows) {\n      function doNext() {\n        if (!rows.length) {\n          return callback(tx);\n        }\n        var row = rows.shift();\n        var doc_id_rev = parseHexString(row.hex, encoding);\n        var idx = doc_id_rev.lastIndexOf('::');\n        var doc_id = doc_id_rev.substring(0, idx);\n        var rev = doc_id_rev.substring(idx + 2);\n        var sql = 'UPDATE ' + BY_SEQ_STORE +\n          ' SET doc_id=?, rev=? WHERE doc_id_rev=?';\n        tx.executeSql(sql, [doc_id, rev, doc_id_rev], function () {\n          doNext();\n        });\n      }\n      doNext();\n    }\n\n    var sql = 'ALTER TABLE ' + BY_SEQ_STORE + ' ADD COLUMN doc_id';\n    tx.executeSql(sql, [], function (tx) {\n      var sql = 'ALTER TABLE ' + BY_SEQ_STORE + ' ADD COLUMN rev';\n      tx.executeSql(sql, [], function (tx) {\n        tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL, [], function (tx) {\n          var sql = 'SELECT hex(doc_id_rev) as hex FROM ' + BY_SEQ_STORE;\n          tx.executeSql(sql, [], function (tx, res) {\n            var rows = [];\n            for (var i = 0; i < res.rows.length; i++) {\n              rows.push(res.rows.item(i));\n            }\n            updateRows(rows);\n          });\n        });\n      });\n    });\n  }\n\n  // in this migration, we add the attach_and_seq table\n  // for issue #2818\n  function runMigration5(tx, callback) {\n\n    function migrateAttsAndSeqs(tx) {\n      // need to actually populate the table. this is the expensive part,\n      // so as an optimization, check first that this database even\n      // contains attachments\n      var sql = 'SELECT COUNT(*) AS cnt FROM ' + ATTACH_STORE;\n      tx.executeSql(sql, [], function (tx, res) {\n        var count = res.rows.item(0).cnt;\n        if (!count) {\n          return callback(tx);\n        }\n\n        var offset = 0;\n        var pageSize = 10;\n        function nextPage() {\n          var sql = select(\n            SELECT_DOCS + ', ' + DOC_STORE + '.id AS id',\n            [DOC_STORE, BY_SEQ_STORE],\n            DOC_STORE_AND_BY_SEQ_JOINER,\n            null,\n            DOC_STORE + '.id '\n          );\n          sql += ' LIMIT ' + pageSize + ' OFFSET ' + offset;\n          offset += pageSize;\n          tx.executeSql(sql, [], function (tx, res) {\n            if (!res.rows.length) {\n              return callback(tx);\n            }\n            var digestSeqs = {};\n            function addDigestSeq(digest, seq) {\n              // uniq digest/seq pairs, just in case there are dups\n              var seqs = digestSeqs[digest] = (digestSeqs[digest] || []);\n              if (seqs.indexOf(seq) === -1) {\n                seqs.push(seq);\n              }\n            }\n            for (var i = 0; i < res.rows.length; i++) {\n              var row = res.rows.item(i);\n              var doc = unstringifyDoc(row.data, row.id, row.rev);\n              var atts = Object.keys(doc._attachments || {});\n              for (var j = 0; j < atts.length; j++) {\n                var att = doc._attachments[atts[j]];\n                addDigestSeq(att.digest, row.seq);\n              }\n            }\n            var digestSeqPairs = [];\n            Object.keys(digestSeqs).forEach(function (digest) {\n              var seqs = digestSeqs[digest];\n              seqs.forEach(function (seq) {\n                digestSeqPairs.push([digest, seq]);\n              });\n            });\n            if (!digestSeqPairs.length) {\n              return nextPage();\n            }\n            var numDone = 0;\n            digestSeqPairs.forEach(function (pair) {\n              var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE +\n                ' (digest, seq) VALUES (?,?)';\n              tx.executeSql(sql, pair, function () {\n                if (++numDone === digestSeqPairs.length) {\n                  nextPage();\n                }\n              });\n            });\n          });\n        }\n        nextPage();\n      });\n    }\n\n    var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n      ATTACH_AND_SEQ_STORE + ' (digest, seq INTEGER)';\n    tx.executeSql(attachAndRev, [], function (tx) {\n      tx.executeSql(\n        ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL, [], function (tx) {\n          tx.executeSql(\n            ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL, [],\n            migrateAttsAndSeqs);\n        });\n    });\n  }\n\n  // in this migration, we use escapeBlob() and unescapeBlob()\n  // instead of reading out the binary as HEX, which is slow\n  function runMigration6(tx, callback) {\n    var sql = 'ALTER TABLE ' + ATTACH_STORE +\n      ' ADD COLUMN escaped TINYINT(1) DEFAULT 0';\n    tx.executeSql(sql, [], callback);\n  }\n\n  // issue #3136, in this migration we need a \"latest seq\" as well\n  // as the \"winning seq\" in the doc store\n  function runMigration7(tx, callback) {\n    var sql = 'ALTER TABLE ' + DOC_STORE +\n      ' ADD COLUMN max_seq INTEGER';\n    tx.executeSql(sql, [], function (tx) {\n      var sql = 'UPDATE ' + DOC_STORE + ' SET max_seq=(SELECT MAX(seq) FROM ' +\n        BY_SEQ_STORE + ' WHERE doc_id=id)';\n      tx.executeSql(sql, [], function (tx) {\n        // add unique index after filling, else we'll get a constraint\n        // error when we do the ALTER TABLE\n        var sql =\n          'CREATE UNIQUE INDEX IF NOT EXISTS \\'doc-max-seq-idx\\' ON ' +\n          DOC_STORE + ' (max_seq)';\n        tx.executeSql(sql, [], callback);\n      });\n    });\n  }\n\n  function checkEncoding(tx, cb) {\n    // UTF-8 on chrome/android, UTF-16 on safari < 7.1\n    tx.executeSql('SELECT HEX(\"a\") AS hex', [], function (tx, res) {\n        var hex = res.rows.item(0).hex;\n        encoding = hex.length === 2 ? 'UTF-8' : 'UTF-16';\n        cb();\n      }\n    );\n  }\n\n  function onGetInstanceId() {\n    while (idRequests.length > 0) {\n      var idCallback = idRequests.pop();\n      idCallback(null, instanceId);\n    }\n  }\n\n  function onGetVersion(tx, dbVersion) {\n    if (dbVersion === 0) {\n      // initial schema\n\n      var meta = 'CREATE TABLE IF NOT EXISTS ' + META_STORE +\n        ' (dbid, db_version INTEGER)';\n      var attach = 'CREATE TABLE IF NOT EXISTS ' + ATTACH_STORE +\n        ' (digest UNIQUE, escaped TINYINT(1), body BLOB)';\n      var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n        ATTACH_AND_SEQ_STORE + ' (digest, seq INTEGER)';\n      // TODO: migrate winningseq to INTEGER\n      var doc = 'CREATE TABLE IF NOT EXISTS ' + DOC_STORE +\n        ' (id unique, json, winningseq, max_seq INTEGER UNIQUE)';\n      var seq = 'CREATE TABLE IF NOT EXISTS ' + BY_SEQ_STORE +\n        ' (seq INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, ' +\n        'json, deleted TINYINT(1), doc_id, rev)';\n      var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE +\n        ' (id UNIQUE, rev, json)';\n\n      // creates\n      tx.executeSql(attach);\n      tx.executeSql(local);\n      tx.executeSql(attachAndRev, [], function () {\n        tx.executeSql(ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL);\n        tx.executeSql(ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL);\n      });\n      tx.executeSql(doc, [], function () {\n        tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n        tx.executeSql(seq, [], function () {\n          tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n          tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL);\n          tx.executeSql(meta, [], function () {\n            // mark the db version, and new dbid\n            var initSeq = 'INSERT INTO ' + META_STORE +\n              ' (db_version, dbid) VALUES (?,?)';\n            instanceId = utils.uuid();\n            var initSeqArgs = [ADAPTER_VERSION, instanceId];\n            tx.executeSql(initSeq, initSeqArgs, function () {\n              onGetInstanceId();\n            });\n          });\n        });\n      });\n    } else { // version > 0\n\n      var setupDone = function () {\n        var migrated = dbVersion < ADAPTER_VERSION;\n        if (migrated) {\n          // update the db version within this transaction\n          tx.executeSql('UPDATE ' + META_STORE + ' SET db_version = ' +\n            ADAPTER_VERSION);\n        }\n        // notify db.id() callers\n        var sql = 'SELECT dbid FROM ' + META_STORE;\n        tx.executeSql(sql, [], function (tx, result) {\n          instanceId = result.rows.item(0).dbid;\n          onGetInstanceId();\n        });\n      };\n\n      // would love to use promises here, but then websql\n      // ends the transaction early\n      var tasks = [\n        runMigration2,\n        runMigration3,\n        runMigration4,\n        runMigration5,\n        runMigration6,\n        runMigration7,\n        setupDone\n      ];\n\n      // run each migration sequentially\n      var i = dbVersion;\n      var nextMigration = function (tx) {\n        tasks[i - 1](tx, nextMigration);\n        i++;\n      };\n      nextMigration(tx);\n    }\n  }\n\n  function setup() {\n    db.transaction(function (tx) {\n      // first check the encoding\n      checkEncoding(tx, function () {\n        // then get the version\n        fetchVersion(tx);\n      });\n    }, websqlError(callback), dbCreated);\n  }\n\n  function fetchVersion(tx) {\n    var sql = 'SELECT sql FROM sqlite_master WHERE tbl_name = ' + META_STORE;\n    tx.executeSql(sql, [], function (tx, result) {\n      if (!result.rows.length) {\n        // database hasn't even been created yet (version 0)\n        onGetVersion(tx, 0);\n      } else if (!/db_version/.test(result.rows.item(0).sql)) {\n        // table was created, but without the new db_version column,\n        // so add it.\n        tx.executeSql('ALTER TABLE ' + META_STORE +\n          ' ADD COLUMN db_version INTEGER', [], function () {\n          // before version 2, this column didn't even exist\n          onGetVersion(tx, 1);\n        });\n      } else { // column exists, we can safely get it\n        tx.executeSql('SELECT db_version FROM ' + META_STORE,\n          [], function (tx, result) {\n          var dbVersion = result.rows.item(0).db_version;\n          onGetVersion(tx, dbVersion);\n        });\n      }\n    });\n  }\n\n  if (utils.isCordova()) {\n    //to wait until custom api is made in pouch.adapters before doing setup\n    window.addEventListener(api._name + '_pouch', function cordova_init() {\n      window.removeEventListener(api._name + '_pouch', cordova_init, false);\n      setup();\n    }, false);\n  } else {\n    setup();\n  }\n\n  api.type = function () {\n    return 'websql';\n  };\n\n  api._id = utils.toPromise(function (callback) {\n    callback(null, instanceId);\n  });\n\n  api._info = function (callback) {\n    db.readTransaction(function (tx) {\n      countDocs(tx, function (docCount) {\n        var sql = 'SELECT MAX(seq) AS seq FROM ' + BY_SEQ_STORE;\n        tx.executeSql(sql, [], function (tx, res) {\n          var updateSeq = res.rows.item(0).seq || 0;\n          callback(null, {\n            doc_count: docCount,\n            update_seq: updateSeq,\n            // for debugging\n            sqlite_plugin: db._sqlitePlugin,\n            websql_encoding: encoding\n          });\n        });\n      });\n    }, websqlError(callback));\n  };\n\n  api._bulkDocs = function (req, opts, callback) {\n    websqlBulkDocs(req, opts, api, db, WebSqlPouch.Changes, callback);\n  };\n\n  api._get = function (id, opts, callback) {\n    var doc;\n    var metadata;\n    var err;\n    var tx = opts.ctx;\n    if (!tx) {\n      return db.readTransaction(function (txn) {\n        api._get(id, utils.extend({ctx: txn}, opts), callback);\n      });\n    }\n\n    function finish() {\n      callback(err, {doc: doc, metadata: metadata, ctx: tx});\n    }\n\n    var sql;\n    var sqlArgs;\n    if (opts.rev) {\n      sql = select(\n        SELECT_DOCS,\n        [DOC_STORE, BY_SEQ_STORE],\n        DOC_STORE + '.id=' + BY_SEQ_STORE + '.doc_id',\n        [BY_SEQ_STORE + '.doc_id=?', BY_SEQ_STORE + '.rev=?']);\n      sqlArgs = [id, opts.rev];\n    } else {\n      sql = select(\n        SELECT_DOCS,\n        [DOC_STORE, BY_SEQ_STORE],\n        DOC_STORE_AND_BY_SEQ_JOINER,\n        DOC_STORE + '.id=?');\n      sqlArgs = [id];\n    }\n    tx.executeSql(sql, sqlArgs, function (a, results) {\n      if (!results.rows.length) {\n        err = errors.error(errors.MISSING_DOC, 'missing');\n        return finish();\n      }\n      var item = results.rows.item(0);\n      metadata = utils.safeJsonParse(item.metadata);\n      if (item.deleted && !opts.rev) {\n        err = errors.error(errors.MISSING_DOC, 'deleted');\n        return finish();\n      }\n      doc = unstringifyDoc(item.data, metadata.id, item.rev);\n      finish();\n    });\n  };\n\n  function countDocs(tx, callback) {\n\n    if (api._docCount !== -1) {\n      return callback(api._docCount);\n    }\n\n    // count the total rows\n    var sql = select(\n      'COUNT(' + DOC_STORE + '.id) AS \\'num\\'',\n      [DOC_STORE, BY_SEQ_STORE],\n      DOC_STORE_AND_BY_SEQ_JOINER,\n      BY_SEQ_STORE + '.deleted=0');\n\n    tx.executeSql(sql, [], function (tx, result) {\n      api._docCount = result.rows.item(0).num;\n      callback(api._docCount);\n    });\n  }\n\n  api._allDocs = function (opts, callback) {\n    var results = [];\n    var totalRows;\n\n    var start = 'startkey' in opts ? opts.startkey : false;\n    var end = 'endkey' in opts ? opts.endkey : false;\n    var key = 'key' in opts ? opts.key : false;\n    var descending = 'descending' in opts ? opts.descending : false;\n    var limit = 'limit' in opts ? opts.limit : -1;\n    var offset = 'skip' in opts ? opts.skip : 0;\n    var inclusiveEnd = opts.inclusive_end !== false;\n\n    var sqlArgs = [];\n    var criteria = [];\n\n    if (key !== false) {\n      criteria.push(DOC_STORE + '.id = ?');\n      sqlArgs.push(key);\n    } else if (start !== false || end !== false) {\n      if (start !== false) {\n        criteria.push(DOC_STORE + '.id ' + (descending ? '<=' : '>=') + ' ?');\n        sqlArgs.push(start);\n      }\n      if (end !== false) {\n        var comparator = descending ? '>' : '<';\n        if (inclusiveEnd) {\n          comparator += '=';\n        }\n        criteria.push(DOC_STORE + '.id ' + comparator + ' ?');\n        sqlArgs.push(end);\n      }\n      if (key !== false) {\n        criteria.push(DOC_STORE + '.id = ?');\n        sqlArgs.push(key);\n      }\n    }\n\n    if (opts.deleted !== 'ok') {\n      // report deleted if keys are specified\n      criteria.push(BY_SEQ_STORE + '.deleted = 0');\n    }\n\n    db.readTransaction(function (tx) {\n\n      // first count up the total rows\n      countDocs(tx, function (count) {\n        totalRows = count;\n\n        if (limit === 0) {\n          return;\n        }\n\n        // then actually fetch the documents\n        var sql = select(\n          SELECT_DOCS,\n          [DOC_STORE, BY_SEQ_STORE],\n          DOC_STORE_AND_BY_SEQ_JOINER,\n          criteria,\n          DOC_STORE + '.id ' + (descending ? 'DESC' : 'ASC')\n          );\n        sql += ' LIMIT ' + limit + ' OFFSET ' + offset;\n\n        tx.executeSql(sql, sqlArgs, function (tx, result) {\n          for (var i = 0, l = result.rows.length; i < l; i++) {\n            var item = result.rows.item(i);\n            var metadata = utils.safeJsonParse(item.metadata);\n            var id = metadata.id;\n            var data = unstringifyDoc(item.data, id, item.rev);\n            var winningRev = data._rev;\n            var doc = {\n              id: id,\n              key: id,\n              value: {rev: winningRev}\n            };\n            if (opts.include_docs) {\n              doc.doc = data;\n              doc.doc._rev = winningRev;\n              if (opts.conflicts) {\n                doc.doc._conflicts = collectConflicts(metadata);\n              }\n              fetchAttachmentsIfNecessary(doc.doc, opts, api, tx);\n            }\n            if (item.deleted) {\n              if (opts.deleted === 'ok') {\n                doc.value.deleted = true;\n                doc.doc = null;\n              } else {\n                continue;\n              }\n            }\n            results.push(doc);\n          }\n        });\n      });\n    }, websqlError(callback), function () {\n      callback(null, {\n        total_rows: totalRows,\n        offset: opts.skip,\n        rows: results\n      });\n    });\n  };\n\n  api._changes = function (opts) {\n    opts = utils.clone(opts);\n\n    if (opts.continuous) {\n      var id = api._name + ':' + utils.uuid();\n      WebSqlPouch.Changes.addListener(api._name, id, api, opts);\n      WebSqlPouch.Changes.notify(api._name);\n      return {\n        cancel: function () {\n          WebSqlPouch.Changes.removeListener(api._name, id);\n        }\n      };\n    }\n\n    var descending = opts.descending;\n\n    // Ignore the `since` parameter when `descending` is true\n    opts.since = opts.since && !descending ? opts.since : 0;\n\n    var limit = 'limit' in opts ? opts.limit : -1;\n    if (limit === 0) {\n      limit = 1; // per CouchDB _changes spec\n    }\n\n    var returnDocs;\n    if ('returnDocs' in opts) {\n      returnDocs = opts.returnDocs;\n    } else {\n      returnDocs = true;\n    }\n    var results = [];\n    var numResults = 0;\n\n    function fetchChanges() {\n\n      var selectStmt =\n        DOC_STORE + '.json AS metadata, ' +\n        DOC_STORE + '.max_seq AS maxSeq, ' +\n        BY_SEQ_STORE + '.json AS winningDoc, ' +\n        BY_SEQ_STORE + '.rev AS winningRev ';\n\n      var from = DOC_STORE + ' JOIN ' + BY_SEQ_STORE;\n\n      var joiner = DOC_STORE + '.id=' + BY_SEQ_STORE + '.doc_id' +\n        ' AND ' + DOC_STORE + '.winningseq=' + BY_SEQ_STORE + '.seq';\n\n      var criteria = ['maxSeq > ?'];\n      var sqlArgs = [opts.since];\n\n      if (opts.doc_ids) {\n        criteria.push(DOC_STORE + '.id IN ' + qMarks(opts.doc_ids.length));\n        sqlArgs = sqlArgs.concat(opts.doc_ids);\n      }\n\n      var orderBy = 'maxSeq ' + (descending ? 'DESC' : 'ASC');\n\n      var sql = select(selectStmt, from, joiner, criteria, orderBy);\n\n      var filter = utils.filterChange(opts);\n      if (!opts.view && !opts.filter) {\n        // we can just limit in the query\n        sql += ' LIMIT ' + limit;\n      }\n\n      var lastSeq = opts.since || 0;\n      db.readTransaction(function (tx) {\n        tx.executeSql(sql, sqlArgs, function (tx, result) {\n          function reportChange(change) {\n            return function () {\n              opts.onChange(change);\n            };\n          }\n          for (var i = 0, l = result.rows.length; i < l; i++) {\n            var item = result.rows.item(i);\n            var metadata = utils.safeJsonParse(item.metadata);\n            lastSeq = item.maxSeq;\n\n            var doc = unstringifyDoc(item.winningDoc, metadata.id,\n              item.winningRev);\n            var change = opts.processChange(doc, metadata, opts);\n            change.seq = item.maxSeq;\n\n            var filtered = filter(change);\n            if (typeof filtered === 'object') {\n              return opts.complete(filtered);\n            }\n\n            if (filtered) {\n              numResults++;\n              if (returnDocs) {\n                results.push(change);\n              }\n              // process the attachment immediately\n              // for the benefit of live listeners\n              if (opts.attachments && opts.include_docs) {\n                fetchAttachmentsIfNecessary(doc, opts, api, tx,\n                  reportChange(change));\n              } else {\n                reportChange(change)();\n              }\n            }\n            if (numResults === limit) {\n              break;\n            }\n          }\n        });\n      }, websqlError(opts.complete), function () {\n        if (!opts.continuous) {\n          opts.complete(null, {\n            results: results,\n            last_seq: lastSeq\n          });\n        }\n      });\n    }\n\n    fetchChanges();\n  };\n\n  api._close = function (callback) {\n    //WebSQL databases do not need to be closed\n    callback();\n  };\n\n  api._getAttachment = function (attachment, opts, callback) {\n    var res;\n    var tx = opts.ctx;\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n    var sql = 'SELECT escaped, ' +\n      'CASE WHEN escaped = 1 THEN body ELSE HEX(body) END AS body FROM ' +\n      ATTACH_STORE + ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      // websql has a bug where \\u0000 causes early truncation in strings\n      // and blobs. to work around this, we used to use the hex() function,\n      // but that's not performant. after migration 6, we remove \\u0000\n      // and add it back in afterwards\n      var item = result.rows.item(0);\n      var data = item.escaped ? websqlUtils.unescapeBlob(item.body) :\n        parseHexString(item.body, encoding);\n      if (opts.binary) {\n        res = binStringToBlob(data, type);\n      } else {\n        res = utils.btoa(data);\n      }\n      callback(null, res);\n    });\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    db.readTransaction(function (tx) {\n      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE + ' WHERE id = ?';\n      tx.executeSql(sql, [docId], function (tx, result) {\n        if (!result.rows.length) {\n          callback(errors.error(errors.MISSING_DOC));\n        } else {\n          var data = utils.safeJsonParse(result.rows.item(0).metadata);\n          callback(null, data.rev_tree);\n        }\n      });\n    });\n  };\n\n  api._doCompaction = function (docId, revs, callback) {\n    if (!revs.length) {\n      return callback();\n    }\n    db.transaction(function (tx) {\n\n      // update doc store\n      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE + ' WHERE id = ?';\n      tx.executeSql(sql, [docId], function (tx, result) {\n        var metadata = utils.safeJsonParse(result.rows.item(0).metadata);\n        traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                           revHash, ctx, opts) {\n          var rev = pos + '-' + revHash;\n          if (revs.indexOf(rev) !== -1) {\n            opts.status = 'missing';\n          }\n        });\n\n        var sql = 'UPDATE ' + DOC_STORE + ' SET json = ? WHERE id = ?';\n        tx.executeSql(sql, [utils.safeJsonStringify(metadata), docId]);\n      });\n\n      compactRevs(revs, docId, tx);\n    }, websqlError(callback), function () {\n      callback();\n    });\n  };\n\n  api._getLocal = function (id, callback) {\n    db.readTransaction(function (tx) {\n      var sql = 'SELECT json, rev FROM ' + LOCAL_STORE + ' WHERE id=?';\n      tx.executeSql(sql, [id], function (tx, res) {\n        if (res.rows.length) {\n          var item = res.rows.item(0);\n          var doc = unstringifyDoc(item.json, id, item.rev);\n          callback(null, doc);\n        } else {\n          callback(errors.error(errors.MISSING_DOC));\n        }\n      });\n    });\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    var newRev;\n    if (!oldRev) {\n      newRev = doc._rev = '0-1';\n    } else {\n      newRev = doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n    var json = stringifyDoc(doc);\n\n    var ret;\n    function putLocal(tx) {\n      var sql;\n      var values;\n      if (oldRev) {\n        sql = 'UPDATE ' + LOCAL_STORE + ' SET rev=?, json=? ' +\n          'WHERE id=? AND rev=?';\n        values = [newRev, json, id, oldRev];\n      } else {\n        sql = 'INSERT INTO ' + LOCAL_STORE + ' (id, rev, json) VALUES (?,?,?)';\n        values = [id, newRev, json];\n      }\n      tx.executeSql(sql, values, function (tx, res) {\n        if (res.rowsAffected) {\n          ret = {ok: true, id: id, rev: newRev};\n          if (opts.ctx) { // return immediately\n            callback(null, ret);\n          }\n        } else {\n          callback(errors.error(errors.REV_CONFLICT));\n        }\n      }, function () {\n        callback(errors.error(errors.REV_CONFLICT));\n        return false; // ack that we handled the error\n      });\n    }\n\n    if (opts.ctx) {\n      putLocal(opts.ctx);\n    } else {\n      db.transaction(putLocal, websqlError(callback), function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      });\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var ret;\n\n    function removeLocal(tx) {\n      var sql = 'DELETE FROM ' + LOCAL_STORE + ' WHERE id=? AND rev=?';\n      var params = [doc._id, doc._rev];\n      tx.executeSql(sql, params, function (tx, res) {\n        if (!res.rowsAffected) {\n          return callback(errors.error(errors.MISSING_DOC));\n        }\n        ret = {ok: true, id: doc._id, rev: '0-0'};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      });\n    }\n\n    if (opts.ctx) {\n      removeLocal(opts.ctx);\n    } else {\n      db.transaction(removeLocal, websqlError(callback), function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      });\n    }\n  };\n\n  api._destroy = function (opts, callback) {\n    WebSqlPouch.Changes.removeAllListeners(api._name);\n    db.transaction(function (tx) {\n      var stores = [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE, META_STORE,\n        LOCAL_STORE, ATTACH_AND_SEQ_STORE];\n      stores.forEach(function (store) {\n        tx.executeSql('DROP TABLE IF EXISTS ' + store, []);\n      });\n    }, websqlError(callback), function () {\n      if (hasLocalStorage()) {\n        delete window.localStorage['_pouch__websqldb_' + api._name];\n        delete window.localStorage[api._name];\n      }\n      callback(null, {'ok': true});\n    });\n  };\n}\n\nWebSqlPouch.valid = websqlUtils.valid;\n\nWebSqlPouch.Changes = new utils.Changes();\n\nmodule.exports = WebSqlPouch;\n\n},{\"../../deps/binary/binaryStringToBlobOrBuffer\":46,\"../../deps/docs/isDeleted\":56,\"../../deps/docs/isLocalId\":57,\"../../deps/env/hasLocalStorage\":64,\"../../deps/errors\":66,\"../../deps/merge/collectConflicts\":70,\"../../deps/merge/traverseRevTree\":75,\"../../deps/parseHex\":78,\"../../utils\":104,\"./bulkDocs\":25,\"./constants\":26,\"./utils\":28}],28:[function(require,module,exports){\n'use strict';\n\nvar utils = require('../../utils');\nvar errors = require('../../deps/errors');\n\nvar websqlConstants = require('./constants');\n\nvar BY_SEQ_STORE = websqlConstants.BY_SEQ_STORE;\nvar ATTACH_STORE = websqlConstants.ATTACH_STORE;\nvar ATTACH_AND_SEQ_STORE = websqlConstants.ATTACH_AND_SEQ_STORE;\n\n// escapeBlob and unescapeBlob are workarounds for a websql bug:\n// https://code.google.com/p/chromium/issues/detail?id=422690\n// https://bugs.webkit.org/show_bug.cgi?id=137637\n// The goal is to never actually insert the \\u0000 character\n// in the database.\nfunction escapeBlob(str) {\n  return str\n    .replace(/\\u0002/g, '\\u0002\\u0002')\n    .replace(/\\u0001/g, '\\u0001\\u0002')\n    .replace(/\\u0000/g, '\\u0001\\u0001');\n}\n\nfunction unescapeBlob(str) {\n  return str\n    .replace(/\\u0001\\u0001/g, '\\u0000')\n    .replace(/\\u0001\\u0002/g, '\\u0001')\n    .replace(/\\u0002\\u0002/g, '\\u0002');\n}\n\nfunction stringifyDoc(doc) {\n  // don't bother storing the id/rev. it uses lots of space,\n  // in persistent map/reduce especially\n  delete doc._id;\n  delete doc._rev;\n  return JSON.stringify(doc);\n}\n\nfunction unstringifyDoc(doc, id, rev) {\n  doc = JSON.parse(doc);\n  doc._id = id;\n  doc._rev = rev;\n  return doc;\n}\n\n// question mark groups IN queries, e.g. 3 -> '(?,?,?)'\nfunction qMarks(num) {\n  var s = '(';\n  while (num--) {\n    s += '?';\n    if (num) {\n      s += ',';\n    }\n  }\n  return s + ')';\n}\n\nfunction select(selector, table, joiner, where, orderBy) {\n  return 'SELECT ' + selector + ' FROM ' +\n    (typeof table === 'string' ? table : table.join(' JOIN ')) +\n    (joiner ? (' ON ' + joiner) : '') +\n    (where ? (' WHERE ' +\n    (typeof where === 'string' ? where : where.join(' AND '))) : '') +\n    (orderBy ? (' ORDER BY ' + orderBy) : '');\n}\n\nfunction compactRevs(revs, docId, tx) {\n\n  if (!revs.length) {\n    return;\n  }\n\n  var numDone = 0;\n  var seqs = [];\n\n  function checkDone() {\n    if (++numDone === revs.length) { // done\n      deleteOrphans();\n    }\n  }\n\n  function deleteOrphans() {\n    // find orphaned attachment digests\n\n    if (!seqs.length) {\n      return;\n    }\n\n    var sql = 'SELECT DISTINCT digest AS digest FROM ' +\n      ATTACH_AND_SEQ_STORE + ' WHERE seq IN ' + qMarks(seqs.length);\n\n    tx.executeSql(sql, seqs, function (tx, res) {\n\n      var digestsToCheck = [];\n      for (var i = 0; i < res.rows.length; i++) {\n        digestsToCheck.push(res.rows.item(i).digest);\n      }\n      if (!digestsToCheck.length) {\n        return;\n      }\n\n      var sql = 'DELETE FROM ' + ATTACH_AND_SEQ_STORE +\n        ' WHERE seq IN (' +\n        seqs.map(function () { return '?'; }).join(',') +\n        ')';\n      tx.executeSql(sql, seqs, function (tx) {\n\n        var sql = 'SELECT digest FROM ' + ATTACH_AND_SEQ_STORE +\n          ' WHERE digest IN (' +\n          digestsToCheck.map(function () { return '?'; }).join(',') +\n          ')';\n        tx.executeSql(sql, digestsToCheck, function (tx, res) {\n          var nonOrphanedDigests = new utils.Set();\n          for (var i = 0; i < res.rows.length; i++) {\n            nonOrphanedDigests.add(res.rows.item(i).digest);\n          }\n          digestsToCheck.forEach(function (digest) {\n            if (nonOrphanedDigests.has(digest)) {\n              return;\n            }\n            tx.executeSql(\n              'DELETE FROM ' + ATTACH_AND_SEQ_STORE + ' WHERE digest=?',\n              [digest]);\n            tx.executeSql(\n              'DELETE FROM ' + ATTACH_STORE + ' WHERE digest=?', [digest]);\n          });\n        });\n      });\n    });\n  }\n\n  // update by-seq and attach stores in parallel\n  revs.forEach(function (rev) {\n    var sql = 'SELECT seq FROM ' + BY_SEQ_STORE +\n      ' WHERE doc_id=? AND rev=?';\n\n    tx.executeSql(sql, [docId, rev], function (tx, res) {\n      if (!res.rows.length) { // already deleted\n        return checkDone();\n      }\n      var seq = res.rows.item(0).seq;\n      seqs.push(seq);\n\n      tx.executeSql(\n        'DELETE FROM ' + BY_SEQ_STORE + ' WHERE seq=?', [seq], checkDone);\n    });\n  });\n}\n\nfunction websqlError(callback) {\n  return function (event) {\n    console.error('WebSQL threw an error', event);\n    // event may actually be a SQLError object, so report is as such\n    var errorNameMatch = event && event.constructor.toString()\n        .match(/function ([^\\(]+)/);\n    var errorName = (errorNameMatch && errorNameMatch[1]) || event.type;\n    var errorReason = event.target || event.message;\n    callback(errors.error(errors.WSQ_ERROR, errorReason, errorName));\n  };\n}\n\nfunction getSize(opts) {\n  if ('size' in opts) {\n    // triggers immediate popup in iOS, fixes #2347\n    // e.g. 5000001 asks for 5 MB, 10000001 asks for 10 MB,\n    return opts.size * 1000000;\n  }\n  // In iOS, doesn't matter as long as it's <= 5000000.\n  // Except that if you request too much, our tests fail\n  // because of the native \"do you accept?\" popup.\n  // In Android <=4.3, this value is actually used as an\n  // honest-to-god ceiling for data, so we need to\n  // set it to a decently high number.\n  var isAndroid = /Android/.test(window.navigator.userAgent);\n  return isAndroid ? 5000000 : 1; // in PhantomJS, if you use 0 it will crash\n}\n\nfunction createOpenDBFunction() {\n  if (typeof sqlitePlugin !== 'undefined') {\n    // The SQLite Plugin started deviating pretty heavily from the\n    // standard openDatabase() function, as they started adding more features.\n    // It's better to just use their \"new\" format and pass in a big ol'\n    // options object.\n    return sqlitePlugin.openDatabase.bind(sqlitePlugin);\n  }\n\n  if (typeof openDatabase !== 'undefined') {\n    return function openDB(opts) {\n      // Traditional WebSQL API\n      return openDatabase(opts.name, opts.version, opts.description, opts.size);\n    };\n  }\n}\n\nfunction openDBSafely(openDBFunction, opts) {\n  try {\n    return {\n      db: openDBFunction(opts)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\n\nvar cachedDatabases = {};\n\nfunction openDB(opts) {\n  var cachedResult = cachedDatabases[opts.name];\n  if (!cachedResult) {\n    var openDBFun = createOpenDBFunction();\n    cachedResult = cachedDatabases[opts.name] = openDBSafely(openDBFun, opts);\n    if (cachedResult.db) {\n      cachedResult.db._sqlitePlugin = typeof sqlitePlugin !== 'undefined';\n    }\n  }\n  return cachedResult;\n}\n\nfunction valid() {\n  // SQLitePlugin leaks this global object, which we can use\n  // to detect if it's installed or not. The benefit is that it's\n  // declared immediately, before the 'deviceready' event has fired.\n  return typeof openDatabase !== 'undefined' ||\n    typeof SQLitePlugin !== 'undefined';\n}\n\nmodule.exports = {\n  escapeBlob: escapeBlob,\n  unescapeBlob: unescapeBlob,\n  stringifyDoc: stringifyDoc,\n  unstringifyDoc: unstringifyDoc,\n  qMarks: qMarks,\n  select: select,\n  compactRevs: compactRevs,\n  websqlError: websqlError,\n  getSize: getSize,\n  openDB: openDB,\n  valid: valid\n};\n},{\"../../deps/errors\":66,\"../../utils\":104,\"./constants\":26}],29:[function(require,module,exports){\n'use strict';\nvar utils = require('./utils');\nvar isDeleted = require('./deps/docs/isDeleted');\nvar errors = require('./deps/errors');\nvar EE = require('events').EventEmitter;\nvar evalFilter = require('./evalFilter');\nvar evalView = require('./evalView');\nvar parseDdocFunctionName = require('./deps/docs/parseDdocFunctionName');\nvar normalizeDdocFunctionName =\n  require('./deps/docs/normalizeDdocFunctionName');\nvar collectLeaves = require('./deps/merge/collectLeaves');\nvar collectConflicts = require('./deps/merge/collectConflicts');\nmodule.exports = Changes;\nutils.inherits(Changes, EE);\n\nfunction Changes(db, opts, callback) {\n  EE.call(this);\n  var self = this;\n  this.db = db;\n  opts = opts ? utils.clone(opts) : {};\n  var complete = opts.complete = utils.once(function (err, resp) {\n    if (err) {\n      self.emit('error', err);\n    } else {\n      self.emit('complete', resp);\n    }\n    self.removeAllListeners();\n    db.removeListener('destroyed', onDestroy);\n  });\n  if (callback) {\n    self.on('complete', function (resp) {\n      callback(null, resp);\n    });\n    self.on('error', function (err) {\n      callback(err);\n    });\n  }\n  function onDestroy() {\n    self.cancel();\n  }\n  db.once('destroyed', onDestroy);\n\n  opts.onChange = function (change) {\n    if (opts.isCancelled) {\n      return;\n    }\n    self.emit('change', change);\n    if (self.startSeq && self.startSeq <= change.seq) {\n      self.startSeq = false;\n    }\n  };\n\n  var promise = new utils.Promise(function (fulfill, reject) {\n    opts.complete = function (err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        fulfill(res);\n      }\n    };\n  });\n  self.once('cancel', function () {\n    db.removeListener('destroyed', onDestroy);\n    opts.complete(null, {status: 'cancelled'});\n  });\n  this.then = promise.then.bind(promise);\n  this['catch'] = promise['catch'].bind(promise);\n  this.then(function (result) {\n    complete(null, result);\n  }, complete);\n\n\n\n  if (!db.taskqueue.isReady) {\n    db.taskqueue.addTask(function () {\n      if (self.isCancelled) {\n        self.emit('cancel');\n      } else {\n        self.doChanges(opts);\n      }\n    });\n  } else {\n    self.doChanges(opts);\n  }\n}\nChanges.prototype.cancel = function () {\n  this.isCancelled = true;\n  if (this.db.taskqueue.isReady) {\n    this.emit('cancel');\n  }\n};\nfunction processChange(doc, metadata, opts) {\n  var changeList = [{rev: doc._rev}];\n  if (opts.style === 'all_docs') {\n    changeList = collectLeaves(metadata.rev_tree)\n    .map(function (x) { return {rev: x.rev}; });\n  }\n  var change = {\n    id: metadata.id,\n    changes: changeList,\n    doc: doc\n  };\n\n  if (isDeleted(metadata, doc._rev)) {\n    change.deleted = true;\n  }\n  if (opts.conflicts) {\n    change.doc._conflicts = collectConflicts(metadata);\n    if (!change.doc._conflicts.length) {\n      delete change.doc._conflicts;\n    }\n  }\n  return change;\n}\n\nChanges.prototype.doChanges = function (opts) {\n  var self = this;\n  var callback = opts.complete;\n\n  opts = utils.clone(opts);\n  if ('live' in opts && !('continuous' in opts)) {\n    opts.continuous = opts.live;\n  }\n  opts.processChange = processChange;\n\n  if (opts.since === 'latest') {\n    opts.since = 'now';\n  }\n  if (!opts.since) {\n    opts.since = 0;\n  }\n  if (opts.since === 'now') {\n    this.db.info().then(function (info) {\n      if (self.isCancelled) {\n        callback(null, {status: 'cancelled'});\n        return;\n      }\n      opts.since = info.update_seq;\n      self.doChanges(opts);\n    }, callback);\n    return;\n  }\n\n  if (opts.continuous && opts.since !== 'now') {\n    this.db.info().then(function (info) {\n      self.startSeq = info.update_seq;\n    }, function (err) {\n      if (err.id === 'idbNull') {\n        //db closed before this returned\n        //thats ok\n        return;\n      }\n      throw err;\n    });\n  }\n\n  if (opts.filter && typeof opts.filter === 'string') {\n    if (opts.filter === '_view') {\n      opts.view = normalizeDdocFunctionName(opts.view);\n    } else {\n      opts.filter = normalizeDdocFunctionName(opts.filter);\n    }\n\n    if (this.db.type() !== 'http' && !opts.doc_ids) {\n      return this.filterChanges(opts);\n    }\n  }\n\n  if (!('descending' in opts)) {\n    opts.descending = false;\n  }\n\n  // 0 and 1 should return 1 document\n  opts.limit = opts.limit === 0 ? 1 : opts.limit;\n  opts.complete = callback;\n  var newPromise = this.db._changes(opts);\n  if (newPromise && typeof newPromise.cancel === 'function') {\n    var cancel = self.cancel;\n    self.cancel = utils.getArguments(function (args) {\n      newPromise.cancel();\n      cancel.apply(this, args);\n    });\n  }\n};\n\nChanges.prototype.filterChanges = function (opts) {\n  var self = this;\n  var callback = opts.complete;\n  if (opts.filter === '_view') {\n    if (!opts.view || typeof opts.view !== 'string') {\n      var err = errors.error(errors.BAD_REQUEST,\n        '`view` filter parameter not found or invalid.');\n      return callback(err);\n    }\n    // fetch a view from a design doc, make it behave like a filter\n    var viewName = parseDdocFunctionName(opts.view);\n    this.db.get('_design/' + viewName[0], function (err, ddoc) {\n      if (self.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(errors.generateErrorFromResponse(err));\n      }\n      var mapFun = ddoc && ddoc.views && ddoc.views[viewName[1]] &&\n        ddoc.views[viewName[1]].map;\n      if (!mapFun) {\n        return callback(errors.error(errors.MISSING_DOC,\n          (ddoc.views ? 'missing json key: ' + viewName[1] :\n            'missing json key: views')));\n      }\n      opts.filter = evalView(mapFun);\n      self.doChanges(opts);\n    });\n  } else {\n    // fetch a filter from a design doc\n    var filterName = parseDdocFunctionName(opts.filter);\n    if (!filterName) {\n      return callback(errors.error(errors.BAD_REQUEST,\n                             '`filter` filter parameter invalid.'));\n    }\n    this.db.get('_design/' + filterName[0], function (err, ddoc) {\n      if (self.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(errors.generateErrorFromResponse(err));\n      }\n      var filterFun = ddoc && ddoc.filters && ddoc.filters[filterName[1]];\n      if (!filterFun) {\n        return callback(errors.error(errors.MISSING_DOC,\n          ((ddoc && ddoc.filters) ? 'missing json key: ' + filterName[1]\n            : 'missing json key: filters')));\n      }\n      opts.filter = evalFilter(filterFun);\n      self.doChanges(opts);\n    });\n  }\n};\n\n},{\"./deps/docs/isDeleted\":56,\"./deps/docs/normalizeDdocFunctionName\":58,\"./deps/docs/parseDdocFunctionName\":59,\"./deps/errors\":66,\"./deps/merge/collectConflicts\":70,\"./deps/merge/collectLeaves\":71,\"./evalFilter\":85,\"./evalView\":86,\"./utils\":104,\"events\":9}],30:[function(require,module,exports){\n'use strict';\n\nvar EventEmitter = require('events').EventEmitter;\nvar inherits = require('inherits');\nvar isChromeApp = require('./deps/env/isChromeApp');\nvar hasLocalStorage = require('./deps/env/hasLocalStorage');\nvar pick = require('./deps/pick');\n\ninherits(Changes, EventEmitter);\n\n/* istanbul ignore next */\nfunction attachBrowserEvents(self) {\n  if (isChromeApp()) {\n    chrome.storage.onChanged.addListener(function (e) {\n      // make sure it's event addressed to us\n      if (e.db_name != null) {\n        //object only has oldValue, newValue members\n        self.emit(e.dbName.newValue);\n      }\n    });\n  } else if (hasLocalStorage()) {\n    if (typeof addEventListener !== 'undefined') {\n      addEventListener(\"storage\", function (e) {\n        self.emit(e.key);\n      });\n    } else { // old IE\n      window.attachEvent(\"storage\", function (e) {\n        self.emit(e.key);\n      });\n    }\n  }\n}\n\nfunction Changes() {\n  EventEmitter.call(this);\n  this._listeners = {};\n\n  attachBrowserEvents(this);\n}\nChanges.prototype.addListener = function (dbName, id, db, opts) {\n  if (this._listeners[id]) {\n    return;\n  }\n  var self = this;\n  var inprogress = false;\n  function eventFunction() {\n    if (!self._listeners[id]) {\n      return;\n    }\n    if (inprogress) {\n      inprogress = 'waiting';\n      return;\n    }\n    inprogress = true;\n    var changesOpts = pick(opts, [\n      'style', 'include_docs', 'attachments', 'conflicts', 'filter',\n      'doc_ids', 'view', 'since', 'query_params', 'binary'\n    ]);\n\n    db.changes(changesOpts).on('change', function (c) {\n      if (c.seq > opts.since && !opts.cancelled) {\n        opts.since = c.seq;\n        opts.onChange(c);\n      }\n    }).on('complete', function () {\n      if (inprogress === 'waiting') {\n        setTimeout(function(){\n          eventFunction();\n        },0);\n      }\n      inprogress = false;\n    }).on('error', function () {\n      inprogress = false;\n    });\n  }\n  this._listeners[id] = eventFunction;\n  this.on(dbName, eventFunction);\n};\n\nChanges.prototype.removeListener = function (dbName, id) {\n  if (!(id in this._listeners)) {\n    return;\n  }\n  EventEmitter.prototype.removeListener.call(this, dbName,\n    this._listeners[id]);\n};\n\n\n/* istanbul ignore next */\nChanges.prototype.notifyLocalWindows = function (dbName) {\n  //do a useless change on a storage thing\n  //in order to get other windows's listeners to activate\n  if (isChromeApp()) {\n    chrome.storage.local.set({dbName: dbName});\n  } else if (hasLocalStorage()) {\n    localStorage[dbName] = (localStorage[dbName] === \"a\") ? \"b\" : \"a\";\n  }\n};\n\nChanges.prototype.notify = function (dbName) {\n  this.emit(dbName);\n  this.notifyLocalWindows(dbName);\n};\n\nmodule.exports = Changes;\n\n},{\"./deps/env/hasLocalStorage\":64,\"./deps/env/isChromeApp\":65,\"./deps/pick\":80,\"events\":9,\"inherits\":10}],31:[function(require,module,exports){\n(function (global){\n/*globals cordova */\n\"use strict\";\n\nvar debug = require('debug');\n\nvar Adapter = require('./adapter');\nvar utils = require('./utils');\nvar TaskQueue = require('./taskqueue');\nvar Promise = utils.Promise;\n\nfunction defaultCallback(err) {\n  /* istanbul ignore next */\n  if (err && global.debug) {\n    console.error(err);\n  }\n}\n\n// OK, so here's the deal. Consider this code:\n//     var db1 = new PouchDB('foo');\n//     var db2 = new PouchDB('foo');\n//     db1.destroy();\n// ^ these two both need to emit 'destroyed' events,\n// as well as the PouchDB constructor itself.\n// So we have one db object (whichever one got destroy() called on it)\n// responsible for emitting the initial event, which then gets emitted\n// by the constructor, which then broadcasts it to any other dbs\n// that may have been created with the same name.\nfunction prepareForDestruction(self, opts) {\n  var name = opts.originalName;\n  var ctor = self.constructor;\n  var destructionListeners = ctor._destructionListeners;\n\n  function onDestroyed() {\n    ctor.emit('destroyed', name);\n    //so we don't have to sift through all dbnames\n    ctor.emit(name, 'destroyed');\n  }\n\n  function onConstructorDestroyed() {\n    self.removeListener('destroyed', onDestroyed);\n    self.emit('destroyed', self);\n  }\n\n  self.once('destroyed', onDestroyed);\n\n  // in setup.js, the constructor is primed to listen for destroy events\n  if (!destructionListeners.has(name)) {\n    destructionListeners.set(name, []);\n  }\n  destructionListeners.get(name).push(onConstructorDestroyed);\n}\n\nutils.inherits(PouchDB, Adapter);\nfunction PouchDB(name, opts, callback) {\n\n  if (!(this instanceof PouchDB)) {\n    return new PouchDB(name, opts, callback);\n  }\n  var self = this;\n  if (typeof opts === 'function' || typeof opts === 'undefined') {\n    callback = opts;\n    opts = {};\n  }\n\n  if (name && typeof name === 'object') {\n    opts = name;\n    name = undefined;\n  }\n  if (typeof callback === 'undefined') {\n    callback = defaultCallback;\n  }\n  name = name || opts.name;\n  opts = utils.clone(opts);\n  // if name was specified via opts, ignore for the sake of dependentDbs\n  delete opts.name;\n  this.__opts = opts;\n  var oldCB = callback;\n  self.auto_compaction = opts.auto_compaction;\n  self.prefix = PouchDB.prefix;\n  Adapter.call(self);\n  self.taskqueue = new TaskQueue();\n  var promise = new Promise(function (fulfill, reject) {\n    callback = function (err, resp) {\n      if (err) {\n        return reject(err);\n      }\n      delete resp.then;\n      fulfill(resp);\n    };\n  \n    opts = utils.clone(opts);\n    var originalName = opts.name || name;\n    var backend, error;\n    (function () {\n      try {\n\n        if (typeof originalName !== 'string') {\n          error = new Error('Missing/invalid DB name');\n          error.code = 400;\n          throw error;\n        }\n\n        backend = PouchDB.parseAdapter(originalName, opts);\n        \n        opts.originalName = originalName;\n        opts.name = backend.name;\n        if (opts.prefix && backend.adapter !== 'http' &&\n            backend.adapter !== 'https') {\n          opts.name = opts.prefix + opts.name;\n        }\n        opts.adapter = opts.adapter || backend.adapter;\n        self._adapter = opts.adapter;\n        debug('pouchdb:adapter')('Picked adapter: ' + opts.adapter);\n\n        self._db_name = originalName;\n        if (!PouchDB.adapters[opts.adapter]) {\n          error = new Error('Adapter is missing');\n          error.code = 404;\n          throw error;\n        }\n\n        if (!PouchDB.adapters[opts.adapter].valid()) {\n          error = new Error('Invalid Adapter');\n          error.code = 404;\n          throw error;\n        }\n      } catch (err) {\n        self.taskqueue.fail(err);\n      }\n    }());\n    if (error) {\n      return reject(error); // constructor error, see above\n    }\n    self.adapter = opts.adapter;\n\n    // needs access to PouchDB;\n    self.replicate = {};\n\n    self.replicate.from = function (url, opts, callback) {\n      return self.constructor.replicate(url, self, opts, callback);\n    };\n\n    self.replicate.to = function (url, opts, callback) {\n      return self.constructor.replicate(self, url, opts, callback);\n    };\n\n    self.sync = function (dbName, opts, callback) {\n      return self.constructor.sync(self, dbName, opts, callback);\n    };\n\n    self.replicate.sync = self.sync;\n\n    PouchDB.adapters[opts.adapter].call(self, opts, function (err) {\n      if (err) {\n        self.taskqueue.fail(err);\n        callback(err);\n        return;\n      }\n      prepareForDestruction(self, opts);\n\n      self.emit('created', self);\n      PouchDB.emit('created', opts.originalName);\n      self.taskqueue.ready(self);\n      callback(null, self);\n    });\n\n    /* istanbul ignore next */\n    if (utils.isCordova()) {\n      //to inform websql adapter that we can use api\n      cordova.fireWindowEvent(opts.name + \"_pouch\", {});\n    }\n  });\n  promise.then(function (resp) {\n    oldCB(null, resp);\n  }, oldCB);\n  self.then = promise.then.bind(promise);\n  self.catch = promise.catch.bind(promise);\n}\n\nPouchDB.debug = debug;\n\nmodule.exports = PouchDB;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./adapter\":16,\"./taskqueue\":103,\"./utils\":104,\"debug\":7}],32:[function(require,module,exports){\n\"use strict\";\n\nvar request = require('request');\n\nvar errors = require('./../errors');\nvar utils = require('../../utils');\nvar applyTypeToBuffer = require('./applyTypeToBuffer');\nvar defaultBody = require('./defaultBody');\nvar explainCors = require('./explainCors');\n\nfunction ajax(options, callback) {\n\n  options = utils.clone(options);\n\n  var defaultOptions = {\n    method : \"GET\",\n    headers: {},\n    json: true,\n    processData: true,\n    timeout: 10000,\n    cache: false\n  };\n\n  options = utils.extend(defaultOptions, options);\n\n\n  function onSuccess(obj, resp, cb) {\n    if (!options.binary && !options.json && options.processData &&\n      typeof obj !== 'string') {\n      obj = JSON.stringify(obj);\n    } else if (!options.binary && options.json && typeof obj === 'string') {\n      try {\n        obj = JSON.parse(obj);\n      } catch (e) {\n        // Probably a malformed JSON from server\n        return cb(e);\n      }\n    }\n    if (Array.isArray(obj)) {\n      obj = obj.map(function (v) {\n        if (v.error || v.missing) {\n          return errors.generateErrorFromResponse(v);\n        } else {\n          return v;\n        }\n      });\n    }\n    if (options.binary) {\n      applyTypeToBuffer(obj, resp);\n    }\n    cb(null, obj, resp);\n  }\n\n  function onError(err, cb) {\n    var errParsed, errObj;\n    if (err.code && err.status) {\n      var err2 = new Error(err.message || err.code);\n      err2.status = err.status;\n      return cb(err2);\n    }\n    try {\n      errParsed = JSON.parse(err.responseText);\n      //would prefer not to have a try/catch clause\n      errObj = errors.generateErrorFromResponse(errParsed);\n    } catch (e) {\n      errObj = errors.generateErrorFromResponse(err);\n    }\n    cb(errObj);\n  }\n\n\n  if (options.json) {\n    if (!options.binary) {\n      options.headers.Accept = 'application/json';\n    }\n    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n      'application/json';\n  }\n\n  if (options.binary) {\n    options.encoding = null;\n    options.json = false;\n  }\n\n  if (!options.processData) {\n    options.json = false;\n  }\n\n  return request(options, function (err, response, body) {\n    if (err) {\n      if (response) {\n        var origin = (typeof document !== 'undefined') &&\n          document.location.origin;\n        var isCrossOrigin = origin && options.url.indexOf(origin) === 0;\n        if (isCrossOrigin && response.statusCode === 0) {\n          explainCors();\n        }\n        err.status = response.statusCode;\n      } else {\n        err.status = 400;\n      }\n      return onError(err, callback);\n    }\n\n    var error;\n    var content_type = response.headers && response.headers['content-type'];\n    var data = body || defaultBody();\n\n    // CouchDB doesn't always return the right content-type for JSON data, so\n    // we check for ^{ and }$ (ignoring leading/trailing whitespace)\n    if (!options.binary && (options.json || !options.processData) &&\n        typeof data !== 'object' &&\n        (/json/.test(content_type) ||\n         (/^[\\s]*\\{/.test(data) && /\\}[\\s]*$/.test(data)))) {\n      try {\n        data = JSON.parse(data.toString());\n      } catch (e) {}\n    }\n\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      onSuccess(data, response, callback);\n    } else {\n      error = errors.generateErrorFromResponse(data);\n      error.status = response.statusCode;\n      callback(error);\n    }\n  });\n}\n\nmodule.exports = ajax;\n\n},{\"../../utils\":104,\"./../errors\":66,\"./applyTypeToBuffer\":33,\"./defaultBody\":36,\"./explainCors\":38,\"request\":41}],33:[function(require,module,exports){\n'use strict';\n\n// the blob already has a type; do nothing\nmodule.exports = function () {};\n},{}],34:[function(require,module,exports){\n'use strict';\n\nvar createBlob = require('../binary/blob');\n\nmodule.exports = function createBlobOrBufferFromParts(parts, type) {\n  return createBlob(parts, {type: type});\n};\n},{\"../binary/blob\":47}],35:[function(require,module,exports){\n'use strict';\n\nvar binaryStringToArrayBuffer = require('../binary/binaryStringToArrayBuffer');\n\n// create a \"part\" suitable for multipart. in the browser\n// this is an ArrayBuffer; in Node it's a binary string\nmodule.exports = function createMultipartPart(data) {\n  return binaryStringToArrayBuffer(data);\n};\n},{\"../binary/binaryStringToArrayBuffer\":45}],36:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function defaultBody() {\n  return '';\n};\n},{}],37:[function(require,module,exports){\n(function (global){\n'use strict';\n\n// designed to give info to browser users, who are disturbed\n// when they see 404s in the console\nmodule.exports = function explain404(str) {\n  if ('console' in global && 'info' in console) {\n    console.info('The above 404 is totally normal. ' + str);\n  }\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],38:[function(require,module,exports){\n(function (global){\n'use strict';\n\nmodule.exports = function () {\n  if ('console' in global && 'warn' in console) {\n    console.warn('PouchDB: the remote database may not have CORS enabled.' +\n      'If not please enable CORS: ' +\n      'http://pouchdb.com/errors.html#no_access_control_allow_origin_header');\n  }\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],39:[function(require,module,exports){\n'use strict';\n\n// Create a multipart/related stream out of a document,\n// so we can upload documents in that format when\n// attachments are large. This is shamefully stolen from\n// https://github.com/sballesteros/couch-multipart-stream/\n// and https://github.com/npm/npm-fullfat-registry\n\nvar base64 = require('./../binary/base64');\nvar atob = base64.atob;\nvar uuid = require('./../uuid');\nvar utils = require('../../utils');\nvar clone = utils.clone;\n\nvar createBlufferFromParts = require('./createBlobOrBufferFromParts');\nvar createMultipartPart = require('./createMultipartPart');\n\nfunction createMultipart(doc) {\n  doc = clone(doc);\n\n  var boundary = uuid();\n\n  var nonStubAttachments = {};\n\n  Object.keys(doc._attachments).forEach(function (filename) {\n    var att = doc._attachments[filename];\n    if (att.stub) {\n      return;\n    }\n    var binData = atob(att.data);\n    nonStubAttachments[filename] = {type: att.content_type, data: binData};\n    att.length = binData.length;\n    att.follows = true;\n    delete att.digest;\n    delete att.data;\n  });\n\n  var preamble = '--' + boundary +\n    '\\r\\nContent-Type: application/json\\r\\n\\r\\n';\n\n  var parts = [preamble, JSON.stringify(doc)];\n\n  Object.keys(nonStubAttachments).forEach(function (filename) {\n    var att = nonStubAttachments[filename];\n    var preamble = '\\r\\n--' + boundary +\n      '\\r\\nContent-Disposition: attachment; filename=' +\n        JSON.stringify(filename) +\n      '\\r\\nContent-Type: ' + att.type +\n      '\\r\\nContent-Length: ' + att.data.length +\n      '\\r\\n\\r\\n';\n    parts.push(preamble);\n    parts.push(createMultipartPart(att.data));\n  });\n\n  parts.push('\\r\\n--' + boundary + '--');\n\n  var type = 'multipart/related; boundary=' + boundary;\n  var body = createBlufferFromParts(parts, type);\n\n  return {\n    headers: {\n      'Content-Type': type\n    },\n    body: body\n  };\n}\n\nmodule.exports = createMultipart;\n\n},{\"../../utils\":104,\"./../binary/base64\":43,\"./../uuid\":84,\"./createBlobOrBufferFromParts\":34,\"./createMultipartPart\":35}],40:[function(require,module,exports){\n'use strict';\n\nvar ajax = require('./ajaxCore');\n\nmodule.exports = function(opts, callback) {\n\n  // cache-buster, specifically designed to work around IE's aggressive caching\n  // see http://www.dashbay.com/2011/05/internet-explorer-caches-ajax/\n  // Also Safari caches POSTs, so we need to cache-bust those too.\n  if ((opts.method === 'POST' || opts.method === 'GET') && !opts.cache) {\n    var hasArgs = opts.url.indexOf('?') !== -1;\n    opts.url += (hasArgs ? '&' : '?') + '_nonce=' + Date.now();\n  }\n\n  return ajax(opts, callback);\n};\n\n},{\"./ajaxCore\":32}],41:[function(require,module,exports){\n/* global fetch */\n/* global Headers */\n'use strict';\n\nvar createBlob = require('./../binary/blob.js');\nvar utils = require('../../utils');\nvar readAsArrayBuffer = require('./../binary/readAsArrayBuffer');\n\nfunction wrappedFetch() {\n  var wrappedPromise = {};\n\n  var promise = new utils.Promise(function(resolve, reject) {\n    wrappedPromise.resolve = resolve;\n    wrappedPromise.reject = reject;\n  });\n\n  var args = new Array(arguments.length);\n\n  for (var i = 0; i < args.length; i++) {\n    args[i] = arguments[i];\n  }\n\n  wrappedPromise.promise = promise;\n\n  utils.Promise.resolve().then(function () {\n    return fetch.apply(null, args);\n  }).then(function(response) {\n    wrappedPromise.resolve(response);\n  }).catch(function(error) {\n    wrappedPromise.reject(error);\n  });\n\n  return wrappedPromise;\n}\n\nfunction fetchRequest(options, callback) {\n  var wrappedPromise, timer, response;\n\n  var headers = new Headers();\n\n  var fetchOptions = {\n    method: options.method,\n    credentials: 'include',\n    headers: headers\n  };\n\n  if (options.json) {\n    headers.set('Accept', 'application/json');\n    headers.set('Content-Type', options.headers['Content-Type'] ||\n      'application/json');\n  }\n\n  if (options.body && (options.body instanceof Blob)) {\n    readAsArrayBuffer(options.body, function (arrayBuffer) {\n      fetchOptions.body = arrayBuffer;\n    });\n  } else if (options.body &&\n             options.processData &&\n             typeof options.body !== 'string') {\n    fetchOptions.body = JSON.stringify(options.body);\n  } else if ('body' in options) {\n    fetchOptions.body = options.body;\n  } else {\n    fetchOptions.body = null;\n  }\n\n  Object.keys(options.headers).forEach(function(key) {\n    if (options.headers.hasOwnProperty(key)) {\n      headers.set(key, options.headers[key]);\n    }\n  });\n\n  wrappedPromise = wrappedFetch(options.url, fetchOptions);\n\n  if (options.timeout > 0) {\n    timer = setTimeout(function() {\n      wrappedPromise.reject(new Error('Load timeout for resource: ' +\n        options.url));\n    }, options.timeout);\n  }\n\n  wrappedPromise.promise.then(function(fetchResponse) {\n    response = {\n      statusCode: fetchResponse.status\n    };\n\n    if (options.timeout > 0) {\n      clearTimeout(timer);\n    }\n\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      return options.binary ? fetchResponse.blob() : fetchResponse.text();\n    }\n\n    return fetchResponse.json();\n  }).then(function(result) {\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      callback(null, response, result);\n    } else {\n      callback(result, response);\n    }\n  }).catch(function(error) {\n    callback(error, response);\n  });\n\n  return {abort: wrappedPromise.reject};\n}\n\nfunction xhRequest(options, callback) {\n\n  var xhr, timer, hasUpload;\n\n  var abortReq = function () {\n    xhr.abort();\n  };\n\n  if (options.xhr) {\n    xhr = new options.xhr();\n  } else {\n    xhr = new XMLHttpRequest();\n  }\n\n  xhr.open(options.method, options.url);\n  xhr.withCredentials = true;\n\n  if (options.method === 'GET') {\n    delete options.headers['Content-Type'];\n  } else if (options.json) {\n    options.headers.Accept = 'application/json';\n    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n      'application/json';\n    if (options.body &&\n        options.processData &&\n        typeof options.body !== \"string\") {\n      options.body = JSON.stringify(options.body);\n    }\n  }\n\n  if (options.binary) {\n    xhr.responseType = 'arraybuffer';\n  }\n\n  if (!('body' in options)) {\n    options.body = null;\n  }\n\n  for (var key in options.headers) {\n    if (options.headers.hasOwnProperty(key)) {\n      xhr.setRequestHeader(key, options.headers[key]);\n    }\n  }\n\n  if (options.timeout > 0) {\n    timer = setTimeout(abortReq, options.timeout);\n    xhr.onprogress = function () {\n      clearTimeout(timer);\n      timer = setTimeout(abortReq, options.timeout);\n    };\n    if (typeof hasUpload === 'undefined') {\n      // IE throws an error if you try to access it directly\n      hasUpload = Object.keys(xhr).indexOf('upload') !== -1 &&\n                  typeof xhr.upload !== 'undefined';\n    }\n    if (hasUpload) { // does not exist in ie9\n      xhr.upload.onprogress = xhr.onprogress;\n    }\n  }\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    var response = {\n      statusCode: xhr.status\n    };\n\n    if (xhr.status >= 200 && xhr.status < 300) {\n      var data;\n      if (options.binary) {\n        data = createBlob([xhr.response || ''], {\n          type: xhr.getResponseHeader('Content-Type')\n        });\n      } else {\n        data = xhr.responseText;\n      }\n      callback(null, response, data);\n    } else {\n      var err = {};\n      try {\n        err = JSON.parse(xhr.response);\n      } catch(e) {}\n      callback(err, response);\n    }\n  };\n\n  if (options.body && (options.body instanceof Blob)) {\n    readAsArrayBuffer(options.body, function (arrayBuffer) {\n      xhr.send(arrayBuffer);\n    });\n  } else {\n    xhr.send(options.body);\n  }\n\n  return {abort: abortReq};\n}\n\nfunction testXhr() {\n  try {\n    new XMLHttpRequest();\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nvar hasXhr = testXhr();\n\nmodule.exports = function(options, callback) {\n  if (hasXhr || options.xhr) {\n    return xhRequest(options, callback);\n  } else {\n    return fetchRequest(options, callback);\n  }\n};\n\n},{\"../../utils\":104,\"./../binary/blob.js\":47,\"./../binary/readAsArrayBuffer\":52}],42:[function(require,module,exports){\n'use strict';\n\n//Can't find original post, but this is close\n//http://stackoverflow.com/questions/6965107/ (continues on next line)\n//converting-between-strings-and-arraybuffers\nmodule.exports = function (buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  var length = bytes.byteLength;\n  for (var i = 0; i < length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return binary;\n};\n},{}],43:[function(require,module,exports){\n'use strict';\n\nvar buffer = require('./buffer');\n\n/* istanbul ignore if */\nif (typeof atob === 'function') {\n  exports.atob = function (str) {\n    /* global atob */\n    return atob(str);\n  };\n} else {\n  exports.atob = function (str) {\n    var base64 = new buffer(str, 'base64');\n    // Node.js will just skip the characters it can't encode instead of\n    // throwing and exception\n    if (base64.toString('base64') !== str) {\n      throw (\"Cannot base64 encode full string\");\n    }\n    return base64.toString('binary');\n  };\n}\n\n/* istanbul ignore if */\nif (typeof btoa === 'function') {\n  exports.btoa = function (str) {\n    /* global btoa */\n    return btoa(str);\n  };\n} else {\n  exports.btoa = function (str) {\n    return new buffer(str, 'binary').toString('base64');\n  };\n}\n},{\"./buffer\":49}],44:[function(require,module,exports){\n'use strict';\n\nvar atob = require('./base64').atob;\nvar binaryStringToBlobOrBuffer = require('./binaryStringToBlobOrBuffer');\n\nmodule.exports = function (b64, type) {\n  return binaryStringToBlobOrBuffer(atob(b64), type);\n};\n},{\"./base64\":43,\"./binaryStringToBlobOrBuffer\":46}],45:[function(require,module,exports){\n'use strict';\n\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nmodule.exports = function (bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return buf;\n};\n},{}],46:[function(require,module,exports){\n'use strict';\n\nvar createBlob = require('./blob');\nvar binaryStringToArrayBuffer = require('./binaryStringToArrayBuffer');\n\nmodule.exports = function (binString, type) {\n  return createBlob([binaryStringToArrayBuffer(binString)], {type: type});\n};\n},{\"./binaryStringToArrayBuffer\":45,\"./blob\":47}],47:[function(require,module,exports){\n\"use strict\";\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor (e.g.\n// old QtWebKit versions, Android < 4.4).\nfunction createBlob(parts, properties) {\n  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n  parts = parts || [];\n  properties = properties || {};\n  try {\n    return new Blob(parts, properties);\n  } catch (e) {\n    if (e.name !== \"TypeError\") {\n      throw e;\n    }\n    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\n                  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\n                  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder :\n                  WebKitBlobBuilder;\n    var builder = new Builder();\n    for (var i = 0; i < parts.length; i += 1) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(properties.type);\n  }\n}\n\nmodule.exports = createBlob;\n\n\n},{}],48:[function(require,module,exports){\n'use strict';\n\nvar Promise = require('../promise');\nvar readAsBinaryString = require('./readAsBinaryString');\nvar btoa = require('./base64').btoa;\n\nmodule.exports = function blobToBase64(blobOrBuffer) {\n  return new Promise(function (resolve) {\n    readAsBinaryString(blobOrBuffer, function (bin) {\n      resolve(btoa(bin));\n    });\n  });\n};\n},{\"../promise\":81,\"./base64\":43,\"./readAsBinaryString\":53}],49:[function(require,module,exports){\n// hey guess what, we don't need this in the browser\nmodule.exports = {};\n},{}],50:[function(require,module,exports){\n'use strict';\n\nfunction cloneArrayBuffer(buff) {\n  if (typeof buff.slice === 'function') {\n    return buff.slice(0);\n  }\n  // IE10-11 slice() polyfill\n  var target = new ArrayBuffer(buff.byteLength);\n  var targetArray = new Uint8Array(target);\n  var sourceArray = new Uint8Array(buff);\n  targetArray.set(sourceArray);\n  return target;\n}\n\nmodule.exports = function cloneBinaryObject(object) {\n  if (object instanceof ArrayBuffer) {\n    return cloneArrayBuffer(object);\n  }\n  var size = object.size;\n  var type = object.type;\n  // Blob\n  if (typeof object.slice === 'function') {\n    return object.slice(0, size, type);\n  }\n  // PhantomJS slice() replacement\n  return object.webkitSlice(0, size, type);\n};\n\n},{}],51:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function isBinaryObject(object) {\n  return object instanceof ArrayBuffer ||\n    (typeof Blob !== 'undefined' && object instanceof Blob);\n};\n},{}],52:[function(require,module,exports){\n'use strict';\n\n// simplified API. universal browser support is assumed\nmodule.exports = function (blob, callback) {\n  if (typeof FileReader === 'undefined') {\n    // fix for Firefox in a web worker:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n    return callback(new FileReaderSync().readAsArrayBuffer(blob));\n  }\n\n  var reader = new FileReader();\n  reader.onloadend = function (e) {\n    var result = e.target.result || new ArrayBuffer(0);\n    callback(result);\n  };\n  reader.readAsArrayBuffer(blob);\n};\n},{}],53:[function(require,module,exports){\n'use strict';\n\nvar arrayBufferToBinaryString = require('./arrayBufferToBinaryString');\n\n// shim for browsers that don't support it\nmodule.exports = function (blob, callback) {\n  if (typeof FileReader === 'undefined') {\n    // fix for Firefox in a web worker\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n    return callback(arrayBufferToBinaryString(\n      new FileReaderSync().readAsArrayBuffer(blob)));\n  }\n\n  var reader = new FileReader();\n  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n  reader.onloadend = function (e) {\n    var result = e.target.result || '';\n    if (hasBinaryString) {\n      return callback(result);\n    }\n    callback(arrayBufferToBinaryString(result));\n  };\n  if (hasBinaryString) {\n    reader.readAsBinaryString(blob);\n  } else {\n    reader.readAsArrayBuffer(blob);\n  }\n};\n},{\"./arrayBufferToBinaryString\":42}],54:[function(require,module,exports){\n'use strict';\n\nvar pick = require('../deps/pick');\n\n// shim for P/CouchDB adapters that don't directly implement _bulk_get\nfunction bulkGet(db, opts, callback) {\n  var requests = Array.isArray(opts) ? opts : opts.docs;\n  if (!requests.length) {\n    return callback(null, {results: []});\n  }\n\n  // consolidate into one request per doc if possible\n  var requestsById = {};\n  requests.forEach(function (request) {\n    if (request.id in requestsById) {\n      requestsById[request.id].push(request);\n    } else {\n      requestsById[request.id] = [request];\n    }\n  });\n\n  var numDocs = Object.keys(requestsById).length;\n  var numDone = 0;\n  var perDocResults = new Array(numDocs);\n\n  function collapseResults() {\n    var results = [];\n    perDocResults.forEach(function (res) {\n      res.docs.forEach(function (info) {\n        results.push({\n          id: res.id,\n          docs: [info]\n        });\n      });\n    });\n    callback(null, {results: results});\n  }\n\n  function checkDone() {\n    if (++numDone === numDocs) {\n      collapseResults();\n    }\n  }\n\n  function gotResult(i, id, docs) {\n    perDocResults[i] = {id: id, docs: docs};\n    checkDone();\n  }\n\n  Object.keys(requestsById).forEach(function (docId, i) {\n\n    var docRequests = requestsById[docId];\n\n    // just use the first request as the \"template\"\n    // TODO: The _bulk_get API allows for more subtle use cases than this,\n    // but for now it is unlikely that there will be a mix of different\n    // \"atts_since\" or \"attachments\" in the same request, since it's just\n    // replicate.js that is using this for the moment.\n    // Also, atts_since is aspirational, since we don't support it yet.\n    var docOpts = pick(docRequests[0], ['atts_since', 'attachments']);\n    docOpts.open_revs = docRequests.map(function (request) {\n      // rev is required, open_revs disallowed\n      return request.rev;\n    });\n    // globally-supplied options\n    ['revs', 'attachments', 'binary'].forEach(function (param) {\n      if (param in opts) {\n        docOpts[param] = opts[param];\n      }\n    });\n    db.get(docId, docOpts, function (err, res) {\n      gotResult(i, docId, err ? [{error: err}] : res);\n    });\n  });\n}\n\nmodule.exports = bulkGet;\n},{\"../deps/pick\":80}],55:[function(require,module,exports){\n'use strict';\n\nvar isBinaryObject = require('./binary/isBinaryObject');\nvar cloneBinaryObject = require('./binary/cloneBinaryObject');\n\nmodule.exports = function clone(object) {\n  var newObject;\n  var i;\n  var len;\n\n  if (!object || typeof object !== 'object') {\n    return object;\n  }\n\n  if (Array.isArray(object)) {\n    newObject = [];\n    for (i = 0, len = object.length; i < len; i++) {\n      newObject[i] = clone(object[i]);\n    }\n    return newObject;\n  }\n\n  // special case: to avoid inconsistencies between IndexedDB\n  // and other backends, we automatically stringify Dates\n  if (object instanceof Date) {\n    return object.toISOString();\n  }\n\n  if (isBinaryObject(object)) {\n    return cloneBinaryObject(object);\n  }\n\n  newObject = {};\n  for (i in object) {\n    if (Object.prototype.hasOwnProperty.call(object, i)) {\n      var value = clone(object[i]);\n      if (typeof value !== 'undefined') {\n        newObject[i] = value;\n      }\n    }\n  }\n  return newObject;\n};\n\n},{\"./binary/cloneBinaryObject\":50,\"./binary/isBinaryObject\":51}],56:[function(require,module,exports){\n'use strict';\n\nvar winningRev = require('../../deps/merge/winningRev');\n\nfunction getTrees(node) {\n  return node.ids;\n}\n\n// check if a specific revision of a doc has been deleted\n//  - metadata: the metadata object from the doc store\n//  - rev: (optional) the revision to check. defaults to winning revision\nfunction isDeleted(metadata, rev) {\n  if (!rev) {\n    rev = winningRev(metadata);\n  }\n  var id = rev.substring(rev.indexOf('-') + 1);\n  var toVisit = metadata.rev_tree.map(getTrees);\n\n  var tree;\n  while ((tree = toVisit.pop())) {\n    if (tree[0] === id) {\n      return !!tree[1].deleted;\n    }\n    toVisit = toVisit.concat(tree[2]);\n  }\n}\n\nmodule.exports = isDeleted;\n},{\"../../deps/merge/winningRev\":76}],57:[function(require,module,exports){\n'use strict';\n\nfunction isLocalId(id) {\n  return (/^_local/).test(id);\n}\n\nmodule.exports = isLocalId;\n},{}],58:[function(require,module,exports){\n'use strict';\n\nvar parseDdocFunctionName = require('./parseDdocFunctionName');\n\nmodule.exports = function normalizeDesignDocFunctionName(s) {\n  var normalized = parseDdocFunctionName(s);\n  return normalized ? normalized.join('/') : null;\n};\n},{\"./parseDdocFunctionName\":59}],59:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function parseDesignDocFunctionName(s) {\n  if (!s) {\n    return null;\n  }\n  var parts = s.split('/');\n  if (parts.length === 2) {\n    return parts;\n  }\n  if (parts.length === 1) {\n    return [s, s];\n  }\n  return null;\n};\n},{}],60:[function(require,module,exports){\n'use strict';\n\nvar errors = require('./../errors');\nvar uuid = require('./../uuid');\n\nfunction toObject(array) {\n  return array.reduce(function (obj, item) {\n    obj[item] = true;\n    return obj;\n  }, {});\n}\n// List of top level reserved words for doc\nvar reservedWords = toObject([\n  '_id',\n  '_rev',\n  '_attachments',\n  '_deleted',\n  '_revisions',\n  '_revs_info',\n  '_conflicts',\n  '_deleted_conflicts',\n  '_local_seq',\n  '_rev_tree',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats',\n  // Specific to Couchbase Sync Gateway\n  '_removed'\n]);\n\n// List of reserved words that should end up the document\nvar dataWords = toObject([\n  '_attachments',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats'\n]);\n\n// Determine id an ID is valid\n//   - invalid IDs begin with an underescore that does not begin '_design' or\n//     '_local'\n//   - any other string value is a valid id\n// Returns the specific error object for each case\nexports.invalidIdError = function (id) {\n  var err;\n  if (!id) {\n    err = errors.error(errors.MISSING_ID);\n  } else if (typeof id !== 'string') {\n    err = errors.error(errors.INVALID_ID);\n  } else if (/^_/.test(id) && !(/^_(design|local)/).test(id)) {\n    err = errors.error(errors.RESERVED_ID);\n  }\n  if (err) {\n    throw err;\n  }\n};\n\nfunction parseRevisionInfo(rev) {\n  if (!/^\\d+\\-./.test(rev)) {\n    return errors.error(errors.INVALID_REV);\n  }\n  var idx = rev.indexOf('-');\n  var left = rev.substring(0, idx);\n  var right = rev.substring(idx + 1);\n  return {\n    prefix: parseInt(left, 10),\n    id: right\n  };\n}\n\nfunction makeRevTreeFromRevisions(revisions, opts) {\n  var pos = revisions.start - revisions.ids.length + 1;\n\n  var revisionIds = revisions.ids;\n  var ids = [revisionIds[0], opts, []];\n\n  for (var i = 1, len = revisionIds.length; i < len; i++) {\n    ids = [revisionIds[i], {status: 'missing'}, [ids]];\n  }\n\n  return [{\n    pos: pos,\n    ids: ids\n  }];\n}\n\n// Preprocess documents, parse their revisions, assign an id and a\n// revision for new writes that are missing them, etc\nexports.parseDoc = function (doc, newEdits) {\n\n  var nRevNum;\n  var newRevId;\n  var revInfo;\n  var opts = {status: 'available'};\n  if (doc._deleted) {\n    opts.deleted = true;\n  }\n\n  if (newEdits) {\n    if (!doc._id) {\n      doc._id = uuid();\n    }\n    newRevId = uuid(32, 16).toLowerCase();\n    if (doc._rev) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      doc._rev_tree = [{\n        pos: revInfo.prefix,\n        ids: [revInfo.id, {status: 'missing'}, [[newRevId, opts, []]]]\n      }];\n      nRevNum = revInfo.prefix + 1;\n    } else {\n      doc._rev_tree = [{\n        pos: 1,\n        ids : [newRevId, opts, []]\n      }];\n      nRevNum = 1;\n    }\n  } else {\n    if (doc._revisions) {\n      doc._rev_tree = makeRevTreeFromRevisions(doc._revisions, opts);\n      nRevNum = doc._revisions.start;\n      newRevId = doc._revisions.ids[0];\n    }\n    if (!doc._rev_tree) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      nRevNum = revInfo.prefix;\n      newRevId = revInfo.id;\n      doc._rev_tree = [{\n        pos: nRevNum,\n        ids: [newRevId, opts, []]\n      }];\n    }\n  }\n\n  exports.invalidIdError(doc._id);\n\n  doc._rev = nRevNum + '-' + newRevId;\n\n  var result = {metadata : {}, data : {}};\n  for (var key in doc) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(doc, key)) {\n      var specialKey = key[0] === '_';\n      if (specialKey && !reservedWords[key]) {\n        var error = errors.error(errors.DOC_VALIDATION, key);\n        error.message = errors.DOC_VALIDATION.message + ': ' + key;\n        throw error;\n      } else if (specialKey && !dataWords[key]) {\n        result.metadata[key.slice(1)] = doc[key];\n      } else {\n        result.data[key] = doc[key];\n      }\n    }\n  }\n  return result;\n};\n\n},{\"./../errors\":66,\"./../uuid\":84}],61:[function(require,module,exports){\n'use strict';\n\nvar base64 = require('../binary/base64');\nvar arrayBuffToBinString = require('../binary/arrayBufferToBinaryString');\nvar readAsArrayBuffer = require('../binary/readAsArrayBuffer');\nvar binStringToBlobOrBuffer = require('../binary/binaryStringToBlobOrBuffer');\nvar errors = require('../errors');\nvar md5 = require('../md5');\n\nfunction preprocessAttachments(docInfos, blobType, callback) {\n\n  if (!docInfos.length) {\n    return callback();\n  }\n\n  var docv = 0;\n\n  function parseBase64(data) {\n    try {\n      return base64.atob(data);\n    } catch (e) {\n      var err = errors.error(errors.BAD_ARG,\n        'Attachments need to be base64 encoded');\n      return {error: err};\n    }\n  }\n\n  function preprocessAttachment(att, callback) {\n    if (att.stub) {\n      return callback();\n    }\n    if (typeof att.data === 'string') {\n      // input is a base64 string\n\n      var asBinary = parseBase64(att.data);\n      if (asBinary.error) {\n        return callback(asBinary.error);\n      }\n\n      att.length = asBinary.length;\n      if (blobType === 'blob') {\n        att.data = binStringToBlobOrBuffer(asBinary, att.content_type);\n      } else if (blobType === 'base64') {\n        att.data = base64.btoa(asBinary);\n      } else { // binary\n        att.data = asBinary;\n      }\n      md5(asBinary).then(function (result) {\n        att.digest = 'md5-' + result;\n        callback();\n      });\n    } else { // input is a blob\n      readAsArrayBuffer(att.data, function (buff) {\n        if (blobType === 'binary') {\n          att.data = arrayBuffToBinString(buff);\n        } else if (blobType === 'base64') {\n          att.data = base64.btoa(arrayBuffToBinString(buff));\n        }\n        md5(buff).then(function (result) {\n          att.digest = 'md5-' + result;\n          att.length = buff.byteLength;\n          callback();\n        });\n      });\n    }\n  }\n\n  var overallErr;\n\n  docInfos.forEach(function (docInfo) {\n    var attachments = docInfo.data && docInfo.data._attachments ?\n      Object.keys(docInfo.data._attachments) : [];\n    var recv = 0;\n\n    if (!attachments.length) {\n      return done();\n    }\n\n    function processedAttachment(err) {\n      overallErr = err;\n      recv++;\n      if (recv === attachments.length) {\n        done();\n      }\n    }\n\n    for (var key in docInfo.data._attachments) {\n      if (docInfo.data._attachments.hasOwnProperty(key)) {\n        preprocessAttachment(docInfo.data._attachments[key],\n          processedAttachment);\n      }\n    }\n  });\n\n  function done() {\n    docv++;\n    if (docInfos.length === docv) {\n      if (overallErr) {\n        callback(overallErr);\n      } else {\n        callback();\n      }\n    }\n  }\n}\n\nmodule.exports = preprocessAttachments;\n},{\"../binary/arrayBufferToBinaryString\":42,\"../binary/base64\":43,\"../binary/binaryStringToBlobOrBuffer\":46,\"../binary/readAsArrayBuffer\":52,\"../errors\":66,\"../md5\":69}],62:[function(require,module,exports){\n'use strict';\n\nvar errors = require('../errors');\nvar updateDoc = require('./updateDoc');\nvar isDeleted = require('./isDeleted');\nvar isLocalId = require('./isLocalId');\nvar calculateWinningRev = require('../../deps/merge/winningRev');\nvar merge = require('../../deps/merge');\nvar collections = require('pouchdb-collections');\nvar Map = collections.Map;\n\nfunction processDocs(docInfos, api, fetchedDocs, tx, results, writeDoc, opts,\n                     overallCallback) {\n\n  function insertDoc(docInfo, resultsIdx, callback) {\n    // Cant insert new deleted documents\n    var winningRev = calculateWinningRev(docInfo.metadata);\n    var deleted = isDeleted(docInfo.metadata, winningRev);\n    if ('was_delete' in opts && deleted) {\n      results[resultsIdx] = errors.error(errors.MISSING_DOC, 'deleted');\n      return callback();\n    }\n\n    var delta = deleted ? 0 : 1;\n\n    writeDoc(docInfo, winningRev, deleted, deleted, false,\n      delta, resultsIdx, callback);\n  }\n\n  var newEdits = opts.new_edits;\n  var idsToDocs = new Map();\n\n  var docsDone = 0;\n  var docsToDo = docInfos.length;\n\n  function checkAllDocsDone() {\n    if (++docsDone === docsToDo && overallCallback) {\n      overallCallback();\n    }\n  }\n\n  docInfos.forEach(function (currentDoc, resultsIdx) {\n\n    if (currentDoc._id && isLocalId(currentDoc._id)) {\n      api[currentDoc._deleted ? '_removeLocal' : '_putLocal'](\n        currentDoc, {ctx: tx}, function (err) {\n          if (err) {\n            results[resultsIdx] = err;\n          } else {\n            results[resultsIdx] = {ok: true};\n          }\n          checkAllDocsDone();\n        });\n      return;\n    }\n\n    var id = currentDoc.metadata.id;\n    if (idsToDocs.has(id)) {\n      docsToDo--; // duplicate\n      idsToDocs.get(id).push([currentDoc, resultsIdx]);\n    } else {\n      idsToDocs.set(id, [[currentDoc, resultsIdx]]);\n    }\n  });\n\n  // in the case of new_edits, the user can provide multiple docs\n  // with the same id. these need to be processed sequentially\n  idsToDocs.forEach(function (docs, id) {\n    var numDone = 0;\n\n    function docWritten() {\n      if (++numDone < docs.length) {\n        nextDoc();\n      } else {\n        checkAllDocsDone();\n      }\n    }\n    function nextDoc() {\n      var value = docs[numDone];\n      var currentDoc = value[0];\n      var resultsIdx = value[1];\n\n      if (fetchedDocs.has(id)) {\n        updateDoc(fetchedDocs.get(id), currentDoc, results,\n          resultsIdx, docWritten, writeDoc, newEdits);\n      } else {\n        // Ensure stemming applies to new writes as well\n        var merged = merge([], currentDoc.metadata.rev_tree[0], 1000);\n        currentDoc.metadata.rev_tree = merged.tree;\n        insertDoc(currentDoc, resultsIdx, docWritten);\n      }\n    }\n    nextDoc();\n  });\n}\n\nmodule.exports = processDocs;\n\n},{\"../../deps/merge\":72,\"../../deps/merge/winningRev\":76,\"../errors\":66,\"./isDeleted\":56,\"./isLocalId\":57,\"./updateDoc\":63,\"pouchdb-collections\":14}],63:[function(require,module,exports){\n'use strict';\n\nvar errors = require('../errors');\nvar isDeleted = require('./isDeleted');\nvar parseDoc = require('./parseDoc').parseDoc;\nvar calculateWinningRev = require('../../deps/merge/winningRev');\nvar merge = require('../../deps/merge');\nvar revExists = require('../../deps/merge/revExists');\n\nfunction updateDoc(prev, docInfo, results, i, cb, writeDoc, newEdits) {\n\n  if (revExists(prev.rev_tree, docInfo.metadata.rev)) {\n    results[i] = docInfo;\n    return cb();\n  }\n\n  // sometimes this is pre-calculated. historically not always\n  var previousWinningRev = prev.winningRev || calculateWinningRev(prev);\n  var previouslyDeleted = 'deleted' in prev ? prev.deleted :\n    isDeleted(prev, previousWinningRev);\n  var deleted = 'deleted' in docInfo.metadata ? docInfo.metadata.deleted :\n    isDeleted(docInfo.metadata);\n  var isRoot = /^1-/.test(docInfo.metadata.rev);\n\n  if (previouslyDeleted && !deleted && newEdits && isRoot) {\n    var newDoc = docInfo.data;\n    newDoc._rev = previousWinningRev;\n    newDoc._id = docInfo.metadata.id;\n    docInfo = parseDoc(newDoc, newEdits);\n  }\n\n  var merged = merge(prev.rev_tree, docInfo.metadata.rev_tree[0], 1000);\n\n  var inConflict = newEdits && (((previouslyDeleted && deleted) ||\n    (!previouslyDeleted && merged.conflicts !== 'new_leaf') ||\n    (previouslyDeleted && !deleted && merged.conflicts === 'new_branch')));\n\n  if (inConflict) {\n    var err = errors.error(errors.REV_CONFLICT);\n    results[i] = err;\n    return cb();\n  }\n\n  var newRev = docInfo.metadata.rev;\n  docInfo.metadata.rev_tree = merged.tree;\n  /* istanbul ignore else */\n  if (prev.rev_map) {\n    docInfo.metadata.rev_map = prev.rev_map; // used only by leveldb\n  }\n\n  // recalculate\n  var winningRev = calculateWinningRev(docInfo.metadata);\n  var winningRevIsDeleted = isDeleted(docInfo.metadata, winningRev);\n\n  // calculate the total number of documents that were added/removed,\n  // from the perspective of total_rows/doc_count\n  var delta = (previouslyDeleted === winningRevIsDeleted) ? 0 :\n    previouslyDeleted < winningRevIsDeleted ? -1 : 1;\n\n  var newRevIsDeleted;\n  if (newRev === winningRev) {\n    // if the new rev is the same as the winning rev, we can reuse that value\n    newRevIsDeleted = winningRevIsDeleted;\n  } else {\n    // if they're not the same, then we need to recalculate\n    newRevIsDeleted = isDeleted(docInfo.metadata, newRev);\n  }\n\n  writeDoc(docInfo, winningRev, winningRevIsDeleted, newRevIsDeleted,\n    true, delta, i, cb);\n}\n\nmodule.exports = updateDoc;\n},{\"../../deps/merge\":72,\"../../deps/merge/revExists\":73,\"../../deps/merge/winningRev\":76,\"../errors\":66,\"./isDeleted\":56,\"./parseDoc\":60}],64:[function(require,module,exports){\n'use strict';\n\nvar isChromeApp = require('./isChromeApp');\n\nvar hasLocal;\n\nif (isChromeApp()) {\n  hasLocal = false;\n} else {\n  try {\n    localStorage.setItem('_pouch_check_localstorage', 1);\n    hasLocal = !!localStorage.getItem('_pouch_check_localstorage');\n  } catch (e) {\n    hasLocal = false;\n  }\n}\n\nmodule.exports = function hasLocalStorage() {\n  return hasLocal;\n};\n},{\"./isChromeApp\":65}],65:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function isChromeApp() {\n  return (typeof chrome !== \"undefined\" &&\n    typeof chrome.storage !== \"undefined\" &&\n    typeof chrome.storage.local !== \"undefined\");\n};\n},{}],66:[function(require,module,exports){\n\"use strict\";\n\nvar inherits = require('inherits');\ninherits(PouchError, Error);\n\nfunction PouchError(opts) {\n  Error.call(this, opts.reason);\n  this.status = opts.status;\n  this.name = opts.error;\n  this.message = opts.reason;\n  this.error = true;\n}\n\nPouchError.prototype.toString = function () {\n  return JSON.stringify({\n    status: this.status,\n    name: this.name,\n    message: this.message,\n    reason: this.reason\n  });\n};\n\nexports.UNAUTHORIZED = new PouchError({\n  status: 401,\n  error: 'unauthorized',\n  reason: \"Name or password is incorrect.\"\n});\n\nexports.MISSING_BULK_DOCS = new PouchError({\n  status: 400,\n  error: 'bad_request',\n  reason: \"Missing JSON list of 'docs'\"\n});\n\nexports.MISSING_DOC = new PouchError({\n  status: 404,\n  error: 'not_found',\n  reason: 'missing'\n});\n\nexports.REV_CONFLICT = new PouchError({\n  status: 409,\n  error: 'conflict',\n  reason: 'Document update conflict'\n});\n\nexports.INVALID_ID = new PouchError({\n  status: 400,\n  error: 'invalid_id',\n  reason: '_id field must contain a string'\n});\n\nexports.MISSING_ID = new PouchError({\n  status: 412,\n  error: 'missing_id',\n  reason: '_id is required for puts'\n});\n\nexports.RESERVED_ID = new PouchError({\n  status: 400,\n  error: 'bad_request',\n  reason: 'Only reserved document ids may start with underscore.'\n});\n\nexports.NOT_OPEN = new PouchError({\n  status: 412,\n  error: 'precondition_failed',\n  reason: 'Database not open'\n});\n\nexports.UNKNOWN_ERROR = new PouchError({\n  status: 500,\n  error: 'unknown_error',\n  reason: 'Database encountered an unknown error'\n});\n\nexports.BAD_ARG = new PouchError({\n  status: 500,\n  error: 'badarg',\n  reason: 'Some query argument is invalid'\n});\n\nexports.INVALID_REQUEST = new PouchError({\n  status: 400,\n  error: 'invalid_request',\n  reason: 'Request was invalid'\n});\n\nexports.QUERY_PARSE_ERROR = new PouchError({\n  status: 400,\n  error: 'query_parse_error',\n  reason: 'Some query parameter is invalid'\n});\n\nexports.DOC_VALIDATION = new PouchError({\n  status: 500,\n  error: 'doc_validation',\n  reason: 'Bad special document member'\n});\n\nexports.BAD_REQUEST = new PouchError({\n  status: 400,\n  error: 'bad_request',\n  reason: 'Something wrong with the request'\n});\n\nexports.NOT_AN_OBJECT = new PouchError({\n  status: 400,\n  error: 'bad_request',\n  reason: 'Document must be a JSON object'\n});\n\nexports.DB_MISSING = new PouchError({\n  status: 404,\n  error: 'not_found',\n  reason: 'Database not found'\n});\n\nexports.IDB_ERROR = new PouchError({\n  status: 500,\n  error: 'indexed_db_went_bad',\n  reason: 'unknown'\n});\n\nexports.WSQ_ERROR = new PouchError({\n  status: 500,\n  error: 'web_sql_went_bad',\n  reason: 'unknown'\n});\n\nexports.LDB_ERROR = new PouchError({\n  status: 500,\n  error: 'levelDB_went_went_bad',\n  reason: 'unknown'\n});\n\nexports.FORBIDDEN = new PouchError({\n  status: 403,\n  error: 'forbidden',\n  reason: 'Forbidden by design doc validate_doc_update function'\n});\n\nexports.INVALID_REV = new PouchError({\n  status: 400,\n  error: 'bad_request',\n  reason: 'Invalid rev format'\n});\n\nexports.FILE_EXISTS = new PouchError({\n  status: 412,\n  error: 'file_exists',\n  reason: 'The database could not be created, the file already exists.'\n});\n\nexports.MISSING_STUB = new PouchError({\n  status: 412,\n  error: 'missing_stub'\n});\n\nexports.error = function (error, reason, name) {\n  function CustomPouchError(reason) {\n    // inherit error properties from our parent error manually\n    // so as to allow proper JSON parsing.\n    /* jshint ignore:start */\n    for (var p in error) {\n      if (typeof error[p] !== 'function') {\n        this[p] = error[p];\n      }\n    }\n    /* jshint ignore:end */\n    if (name !== undefined) {\n      this.name = name;\n    }\n    if (reason !== undefined) {\n      this.reason = reason;\n    }\n  }\n  CustomPouchError.prototype = PouchError.prototype;\n  return new CustomPouchError(reason);\n};\n\n// Find one of the errors defined above based on the value\n// of the specified property.\n// If reason is provided prefer the error matching that reason.\n// This is for differentiating between errors with the same name and status,\n// eg, bad_request.\nexports.getErrorTypeByProp = function (prop, value, reason) {\n  var errors = exports;\n  var keys = Object.keys(errors).filter(function (key) {\n    var error = errors[key];\n    return typeof error !== 'function' && error[prop] === value;\n  });\n  var key = reason && keys.filter(function (key) {\n        var error = errors[key];\n        return error.message === reason;\n      })[0] || keys[0];\n  return (key) ? errors[key] : null;\n};\n\nexports.generateErrorFromResponse = function (res) {\n  var error, errName, errType, errMsg, errReason;\n  var errors = exports;\n\n  errName = (res.error === true && typeof res.name === 'string') ?\n              res.name :\n              res.error;\n  errReason = res.reason;\n  errType = errors.getErrorTypeByProp('name', errName, errReason);\n\n  if (res.missing ||\n      errReason === 'missing' ||\n      errReason === 'deleted' ||\n      errName === 'not_found') {\n    errType = errors.MISSING_DOC;\n  } else if (errName === 'doc_validation') {\n    // doc validation needs special treatment since\n    // res.reason depends on the validation error.\n    // see utils.js\n    errType = errors.DOC_VALIDATION;\n    errMsg = errReason;\n  } else if (errName === 'bad_request' && errType.message !== errReason) {\n    // if bad_request error already found based on reason don't override.\n    errType = errors.BAD_REQUEST;\n  }\n\n  // fallback to error by status or unknown error.\n  if (!errType) {\n    errType = errors.getErrorTypeByProp('status', res.status, errReason) ||\n                errors.UNKNOWN_ERROR;\n  }\n\n  error = errors.error(errType, errReason, errName);\n\n  // Keep custom message.\n  if (errMsg) {\n    error.message = errMsg;\n  }\n\n  // Keep helpful response data in our error messages.\n  if (res.id) {\n    error.id = res.id;\n  }\n  if (res.status) {\n    error.status = res.status;\n  }\n  if (res.missing) {\n    error.missing = res.missing;\n  }\n\n  return error;\n};\n\n},{\"inherits\":10}],67:[function(require,module,exports){\n'use strict';\n\nvar clone = require('./clone');\n\nfunction extendInner(obj, otherObj) {\n  for (var key in otherObj) {\n    if (otherObj.hasOwnProperty(key)) {\n      var value = clone(otherObj[key]);\n      if (typeof value !== 'undefined') {\n        obj[key] = value;\n      }\n    }\n  }\n}\n\nmodule.exports = function extend(obj, obj2, obj3) {\n  extendInner(obj, obj2);\n  if (obj3) {\n    extendInner(obj, obj3);\n  }\n  return obj;\n};\n},{\"./clone\":55}],68:[function(require,module,exports){\n'use strict';\n\n// flatten an array of arrays, with optional non-arrays inside\nmodule.exports = function flatten(arrays) {\n  var res = [];\n  arrays.forEach(function (array) {\n    if (Array.isArray(array)) {\n      res = res.concat(array);\n    } else {\n      res.push(array);\n    }\n  });\n  return res;\n};\n},{}],69:[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar toPromise = require('./toPromise');\nvar base64 = require('./binary/base64');\nvar Md5 = require('spark-md5');\nvar setImmediateShim = global.setImmediate || global.setTimeout;\nvar MD5_CHUNK_SIZE = 32768;\n\n// convert a 64-bit int to a binary string\nfunction intToString(int) {\n  return String.fromCharCode(int & 0xff) +\n    String.fromCharCode((int >>> 8) & 0xff) +\n    String.fromCharCode((int >>> 16) & 0xff) +\n    String.fromCharCode((int >>> 24) & 0xff);\n}\n\n// convert an array of 64-bit ints into\n// a base64-encoded string\nfunction rawToBase64(raw) {\n  var res = '';\n  for (var i = 0, len = raw.length; i < len; i++) {\n    res += intToString(raw[i]);\n  }\n  return base64.btoa(res);\n}\n\nfunction appendBuffer(buffer, data, start, end) {\n  if (start > 0 || end < data.byteLength) {\n    // only create a subarray if we really need to\n    data = new Uint8Array(data, start,\n      Math.min(end, data.byteLength) - start);\n  }\n  buffer.append(data);\n}\n\nfunction appendString(buffer, data, start, end) {\n  if (start > 0 || end < data.length) {\n    // only create a substring if we really need to\n    data = data.substring(start, end);\n  }\n  buffer.appendBinary(data);\n}\n\nmodule.exports = toPromise(function (data, callback) {\n  var inputIsString = typeof data === 'string';\n  var len = inputIsString ? data.length : data.byteLength;\n  var chunkSize = Math.min(MD5_CHUNK_SIZE, len);\n  var chunks = Math.ceil(len / chunkSize);\n  var currentChunk = 0;\n  var buffer = inputIsString ? new Md5() : new Md5.ArrayBuffer();\n\n  var append = inputIsString ? appendString : appendBuffer;\n\n  function loadNextChunk() {\n    var start = currentChunk * chunkSize;\n    var end = start + chunkSize;\n    currentChunk++;\n    if (currentChunk < chunks) {\n      append(buffer, data, start, end);\n      setImmediateShim(loadNextChunk);\n    } else {\n      append(buffer, data, start, end);\n      var raw = buffer.end(true);\n      var base64 = rawToBase64(raw);\n      callback(null, base64);\n      buffer.destroy();\n    }\n  }\n  loadNextChunk();\n});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./binary/base64\":43,\"./toPromise\":82,\"spark-md5\":109}],70:[function(require,module,exports){\n'use strict';\n\nvar winningRev = require('./winningRev');\nvar collectLeaves = require('./collectLeaves');\n\n// returns revs of all conflicts that is leaves such that\n// 1. are not deleted and\n// 2. are different than winning revision\nmodule.exports = function collectConflicts(metadata) {\n  var win = winningRev(metadata);\n  var leaves = collectLeaves(metadata.rev_tree);\n  var conflicts = [];\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    var leaf = leaves[i];\n    if (leaf.rev !== win && !leaf.opts.deleted) {\n      conflicts.push(leaf.rev);\n    }\n  }\n  return conflicts;\n};\n},{\"./collectLeaves\":71,\"./winningRev\":76}],71:[function(require,module,exports){\n'use strict';\n\nvar traverseRevTree = require('./traverseRevTree');\n\nfunction sortByPos(a, b) {\n  return a.pos - b.pos;\n}\n\nmodule.exports = function collectLeaves(revs) {\n  var leaves = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, acc, opts) {\n    if (isLeaf) {\n      leaves.push({rev: pos + \"-\" + id, pos: pos, opts: opts});\n    }\n  });\n  leaves.sort(sortByPos).reverse();\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    delete leaves[i].pos;\n  }\n  return leaves;\n};\n},{\"./traverseRevTree\":75}],72:[function(require,module,exports){\n'use strict';\n\n// for a better overview of what this is doing, read:\n// https://github.com/apache/couchdb/blob/master/src/couchdb/couch_key_tree.erl\n//\n// But for a quick intro, CouchDB uses a revision tree to store a documents\n// history, A -> B -> C, when a document has conflicts, that is a branch in the\n// tree, A -> (B1 | B2 -> C), We store these as a nested array in the format\n//\n// KeyTree = [Path ... ]\n// Path = {pos: position_from_root, ids: Tree}\n// Tree = [Key, Opts, [Tree, ...]], in particular single node: [Key, []]\n\nvar rootToLeaf = require('./rootToLeaf');\n\nfunction sortByPos(a, b) {\n  return a.pos - b.pos;\n}\n\n// classic binary search\nfunction binarySearch(arr, item, comparator) {\n  var low = 0;\n  var high = arr.length;\n  var mid;\n  while (low < high) {\n    mid = (low + high) >>> 1;\n    if (comparator(arr[mid], item) < 0) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n// assuming the arr is sorted, insert the item in the proper place\nfunction insertSorted(arr, item, comparator) {\n  var idx = binarySearch(arr, item, comparator);\n  arr.splice(idx, 0, item);\n}\n\n// Turn a path as a flat array into a tree with a single branch.\n// If any should be stemmed from the beginning of the array, that's passed\n// in as the second argument\nfunction pathToTree(path, numStemmed) {\n  var root;\n  var leaf;\n  for (var i = numStemmed, len = path.length; i < len; i++) {\n    var node = path[i];\n    var currentLeaf = [node.id, node.opts, []];\n    if (leaf) {\n      leaf[2].push(currentLeaf);\n      leaf = currentLeaf;\n    } else {\n      root = leaf = currentLeaf;\n    }\n  }\n  return root;\n}\n\n// compare the IDs of two trees\nfunction compareTree(a, b) {\n  return a[0] < b[0] ? -1 : 1;\n}\n\n// Merge two trees together\n// The roots of tree1 and tree2 must be the same revision\nfunction mergeTree(in_tree1, in_tree2) {\n  var queue = [{tree1: in_tree1, tree2: in_tree2}];\n  var conflicts = false;\n  while (queue.length > 0) {\n    var item = queue.pop();\n    var tree1 = item.tree1;\n    var tree2 = item.tree2;\n\n    if (tree1[1].status || tree2[1].status) {\n      tree1[1].status =\n        (tree1[1].status ===  'available' ||\n        tree2[1].status === 'available') ? 'available' : 'missing';\n    }\n\n    for (var i = 0; i < tree2[2].length; i++) {\n      if (!tree1[2][0]) {\n        conflicts = 'new_leaf';\n        tree1[2][0] = tree2[2][i];\n        continue;\n      }\n\n      var merged = false;\n      for (var j = 0; j < tree1[2].length; j++) {\n        if (tree1[2][j][0] === tree2[2][i][0]) {\n          queue.push({tree1: tree1[2][j], tree2: tree2[2][i]});\n          merged = true;\n        }\n      }\n      if (!merged) {\n        conflicts = 'new_branch';\n        insertSorted(tree1[2], tree2[2][i], compareTree);\n      }\n    }\n  }\n  return {conflicts: conflicts, tree: in_tree1};\n}\n\nfunction doMerge(tree, path, dontExpand) {\n  var restree = [];\n  var conflicts = false;\n  var merged = false;\n  var res;\n\n  if (!tree.length) {\n    return {tree: [path], conflicts: 'new_leaf'};\n  }\n\n  for (var i = 0, len = tree.length; i < len; i++) {\n    var branch = tree[i];\n    if (branch.pos === path.pos && branch.ids[0] === path.ids[0]) {\n      // Paths start at the same position and have the same root, so they need\n      // merged\n      res = mergeTree(branch.ids, path.ids);\n      restree.push({pos: branch.pos, ids: res.tree});\n      conflicts = conflicts || res.conflicts;\n      merged = true;\n    } else if (dontExpand !== true) {\n      // The paths start at a different position, take the earliest path and\n      // traverse up until it as at the same point from root as the path we\n      // want to merge.  If the keys match we return the longer path with the\n      // other merged After stemming we dont want to expand the trees\n\n      var t1 = branch.pos < path.pos ? branch : path;\n      var t2 = branch.pos < path.pos ? path : branch;\n      var diff = t2.pos - t1.pos;\n\n      var candidateParents = [];\n\n      var trees = [];\n      trees.push({ids: t1.ids, diff: diff, parent: null, parentIdx: null});\n      while (trees.length > 0) {\n        var item = trees.pop();\n        if (item.diff === 0) {\n          if (item.ids[0] === t2.ids[0]) {\n            candidateParents.push(item);\n          }\n          continue;\n        }\n        var elements = item.ids[2];\n        for (var j = 0, elementsLen = elements.length; j < elementsLen; j++) {\n          trees.push({\n            ids: elements[j],\n            diff: item.diff - 1,\n            parent: item.ids,\n            parentIdx: j\n          });\n        }\n      }\n\n      var el = candidateParents[0];\n\n      if (!el) {\n        restree.push(branch);\n      } else {\n        res = mergeTree(el.ids, t2.ids);\n        el.parent[2][el.parentIdx] = res.tree;\n        restree.push({pos: t1.pos, ids: t1.ids});\n        conflicts = conflicts || res.conflicts;\n        merged = true;\n      }\n    } else {\n      restree.push(branch);\n    }\n  }\n\n  // We didnt find\n  if (!merged) {\n    restree.push(path);\n  }\n\n  restree.sort(sortByPos);\n\n  return {\n    tree: restree,\n    conflicts: conflicts || 'internal_node'\n  };\n}\n\n// To ensure we dont grow the revision tree infinitely, we stem old revisions\nfunction stem(tree, depth) {\n  // First we break out the tree into a complete list of root to leaf paths\n  var paths = rootToLeaf(tree);\n  var result;\n  for (var i = 0, len = paths.length; i < len; i++) {\n    // Then for each path, we cut off the start of the path based on the\n    // `depth` to stem to, and generate a new set of flat trees\n    var path = paths[i];\n    var stemmed = path.ids;\n    var numStemmed = Math.max(0, stemmed.length - depth);\n    var stemmedNode = {\n      pos: path.pos + numStemmed,\n      ids: pathToTree(stemmed, numStemmed)\n    };\n    // Then we remerge all those flat trees together, ensuring that we dont\n    // connect trees that would go beyond the depth limit\n    if (result) {\n      result = doMerge(result, stemmedNode, true).tree;\n    } else {\n      result = [stemmedNode];\n    }\n  }\n  return result;\n}\n\nmodule.exports = function merge(tree, path, depth) {\n  var newTree = doMerge(tree, path);\n  return {\n    tree: stem(newTree.tree, depth),\n    conflicts: newTree.conflicts\n  };\n};\n},{\"./rootToLeaf\":74}],73:[function(require,module,exports){\n'use strict';\n\n// return true if a rev exists in the rev tree, false otherwise\nmodule.exports = function revExists(revs, rev) {\n  var toVisit = revs.slice();\n  var splitRev = rev.split('-');\n  var targetPos = parseInt(splitRev[0], 10);\n  var targetId = splitRev[1];\n\n  var node;\n  while ((node = toVisit.pop())) {\n    if (node.pos === targetPos && node.ids[0] === targetId) {\n      return true;\n    }\n    var branches = node.ids[2];\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: node.pos + 1, ids: branches[i]});\n    }\n  }\n  return false;\n};\n},{}],74:[function(require,module,exports){\n'use strict';\n// build up a list of all the paths to the leafs in this revision tree\nmodule.exports = function rootToLeaf(revs) {\n  var paths = [];\n  var toVisit = revs.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, opts: opts});\n    if (isLeaf) {\n      paths.push({pos: (pos + 1 - history.length), ids: history});\n    }\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], history: history});\n    }\n  }\n  return paths.reverse();\n};\n},{}],75:[function(require,module,exports){\n'use strict';\n\n// Pretty much all below can be combined into a higher order function to\n// traverse revisions\n// The return value from the callback will be passed as context to all\n// children of that node\nmodule.exports = function traverseRevTree(revs, callback) {\n  var toVisit = revs.slice();\n\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var branches = tree[2];\n    var newCtx =\n      callback(branches.length === 0, pos, tree[0], node.ctx, tree[1]);\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], ctx: newCtx});\n    }\n  }\n};\n},{}],76:[function(require,module,exports){\n'use strict';\n\n// We fetch all leafs of the revision tree, and sort them based on tree length\n// and whether they were deleted, undeleted documents with the longest revision\n// tree (most edits) win\n// The final sort algorithm is slightly documented in a sidebar here:\n// http://guide.couchdb.org/draft/conflicts.html\nmodule.exports = function winningRev(metadata) {\n  var winningId;\n  var winningPos;\n  var winningDeleted;\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var tree = node.ids;\n    var branches = tree[2];\n    var pos = node.pos;\n    if (branches.length) { // non-leaf\n      for (var i = 0, len = branches.length; i < len; i++) {\n        toVisit.push({pos: pos + 1, ids: branches[i]});\n      }\n      continue;\n    }\n    var deleted = !!tree[1].deleted;\n    var id = tree[0];\n    // sort by deleted, then pos, then id\n    if (!winningId || (winningDeleted !== deleted ? winningDeleted :\n        winningPos !== pos ? winningPos < pos : winningId < id)) {\n      winningId = id;\n      winningPos = pos;\n      winningDeleted = deleted;\n    }\n  }\n\n  return winningPos + '-' + winningId;\n};\n},{}],77:[function(require,module,exports){\n'use strict';\n\nvar getArguments = require('argsarray');\n\nfunction once(fun) {\n  var called = false;\n  return getArguments(function (args) {\n    /* istanbul ignore if */\n    if (called) {\n      // this is a smoke test and should never actually happen\n      throw new Error('once called more than once');\n    } else {\n      called = true;\n      fun.apply(this, args);\n    }\n  });\n}\n\nmodule.exports = once;\n},{\"argsarray\":6}],78:[function(require,module,exports){\n'use strict';\n\n//\n// Parsing hex strings. Yeah.\n//\n// So basically we need this because of a bug in WebSQL:\n// https://code.google.com/p/chromium/issues/detail?id=422690\n// https://bugs.webkit.org/show_bug.cgi?id=137637\n//\n// UTF-8 and UTF-16 are provided as separate functions\n// for meager performance improvements\n//\n\nfunction decodeUtf8(str) {\n  return decodeURIComponent(window.escape(str));\n}\n\nfunction hexToInt(charCode) {\n  // '0'-'9' is 48-57\n  // 'A'-'F' is 65-70\n  // SQLite will only give us uppercase hex\n  return charCode < 65 ? (charCode - 48) : (charCode - 55);\n}\n\n\n// Example:\n// pragma encoding=utf8;\n// select hex('A');\n// returns '41'\nfunction parseHexUtf8(str, start, end) {\n  var result = '';\n  while (start < end) {\n    result += String.fromCharCode(\n      (hexToInt(str.charCodeAt(start++)) << 4) |\n        hexToInt(str.charCodeAt(start++)));\n  }\n  return result;\n}\n\n// Example:\n// pragma encoding=utf16;\n// select hex('A');\n// returns '4100'\n// notice that the 00 comes after the 41 (i.e. it's swizzled)\nfunction parseHexUtf16(str, start, end) {\n  var result = '';\n  while (start < end) {\n    // UTF-16, so swizzle the bytes\n    result += String.fromCharCode(\n      (hexToInt(str.charCodeAt(start + 2)) << 12) |\n        (hexToInt(str.charCodeAt(start + 3)) << 8) |\n        (hexToInt(str.charCodeAt(start)) << 4) |\n        hexToInt(str.charCodeAt(start + 1)));\n    start += 4;\n  }\n  return result;\n}\n\nfunction parseHexString(str, encoding) {\n  if (encoding === 'UTF-8') {\n    return decodeUtf8(parseHexUtf8(str, 0, str.length));\n  } else {\n    return parseHexUtf16(str, 0, str.length);\n  }\n}\n\nmodule.exports = parseHexString;\n},{}],79:[function(require,module,exports){\n'use strict';\n\n// originally parseUri 1.2.2, now patched by us\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\nvar keys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\",\n    \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\nvar qName =\"queryKey\";\nvar qParser = /(?:^|&)([^&=]*)=?([^&]*)/g;\n\n// use the \"loose\" parser\n/* jshint maxlen: false */\nvar parser = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nfunction parseUri(str) {\n  var m = parser.exec(str);\n  var uri = {};\n  var i = 14;\n\n  while (i--) {\n    var key = keys[i];\n    var value = m[i] || \"\";\n    var encoded = ['user', 'password'].indexOf(key) !== -1;\n    uri[key] = encoded ? decodeURIComponent(value) : value;\n  }\n\n  uri[qName] = {};\n  uri[keys[12]].replace(qParser, function ($0, $1, $2) {\n    if ($1) {\n      uri[qName][$1] = $2;\n    }\n  });\n\n  return uri;\n}\n\nmodule.exports = parseUri;\n},{}],80:[function(require,module,exports){\n'use strict';\n\n// like underscore/lodash _.pick()\nmodule.exports = function pick(obj, arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var prop = arr[i];\n    if (prop in obj) {\n      res[prop] = obj[prop];\n    }\n  }\n  return res;\n};\n},{}],81:[function(require,module,exports){\n'use strict';\n/* istanbul ignore next */\nmodule.exports = typeof Promise === 'function' ? Promise : require('lie');\n\n},{\"lie\":107}],82:[function(require,module,exports){\n(function (process){\n'use strict';\n\nvar Promise = require('./promise');\nvar getArguments = require('argsarray');\nvar clone = require('./clone');\nvar once = require('./once');\n\nfunction toPromise(func) {\n  //create the function we will be returning\n  return getArguments(function (args) {\n    // Clone arguments\n    args = clone(args);\n    var self = this;\n    var tempCB =\n      (typeof args[args.length - 1] === 'function') ? args.pop() : false;\n    // if the last argument is a function, assume its a callback\n    var usedCB;\n    if (tempCB) {\n      // if it was a callback, create a new callback which calls it,\n      // but do so async so we don't trap any errors\n      usedCB = function (err, resp) {\n        process.nextTick(function () {\n          tempCB(err, resp);\n        });\n      };\n    }\n    var promise = new Promise(function (fulfill, reject) {\n      var resp;\n      try {\n        var callback = once(function (err, mesg) {\n          if (err) {\n            reject(err);\n          } else {\n            fulfill(mesg);\n          }\n        });\n        // create a callback for this invocation\n        // apply the function in the orig context\n        args.push(callback);\n        resp = func.apply(self, args);\n        if (resp && typeof resp.then === 'function') {\n          fulfill(resp);\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n    // if there is a callback, call it back\n    if (usedCB) {\n      promise.then(function (result) {\n        usedCB(null, result);\n      }, usedCB);\n    }\n    return promise;\n  });\n}\n\nmodule.exports = toPromise;\n\n}).call(this,require('_process'))\n},{\"./clone\":55,\"./once\":77,\"./promise\":81,\"_process\":108,\"argsarray\":6}],83:[function(require,module,exports){\n'use strict';\n\nvar Promise = require('./promise');\n\n// this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n// the diffFun tells us what delta to apply to the doc.  it either returns\n// the doc, or false if it doesn't need to do an update after all\nvar upsert = module.exports = function upsert(db, docId, diffFun) {\n  return new Promise(function (fulfill, reject) {\n    if (typeof docId !== 'string') {\n      return reject(new Error('doc id is required'));\n    }\n\n    db.get(docId, function (err, doc) {\n      if (err) {\n        /* istanbul ignore next */\n        if (err.status !== 404) {\n          return reject(err);\n        }\n        doc = {};\n      }\n\n      // the user might change the _rev, so save it for posterity\n      var docRev = doc._rev;\n      var newDoc = diffFun(doc);\n\n      if (!newDoc) {\n        // if the diffFun returns falsy, we short-circuit as\n        // an optimization\n        return fulfill({updated: false, rev: docRev});\n      }\n\n      // users aren't allowed to modify these values,\n      // so reset them here\n      newDoc._id = docId;\n      newDoc._rev = docRev;\n      fulfill(tryAndPut(db, newDoc, diffFun));\n    });\n  });\n};\n\nfunction tryAndPut(db, doc, diffFun) {\n  return db.put(doc).then(function (res) {\n    return {\n      updated: true,\n      rev: res.rev\n    };\n  }, function (err) {\n    /* istanbul ignore next */\n    if (err.status !== 409) {\n      throw err;\n    }\n    return upsert(db, doc._id, diffFun);\n  });\n}\n\n},{\"./promise\":81}],84:[function(require,module,exports){\n\"use strict\";\n\n// BEGIN Math.uuid.js\n\n/*!\nMath.uuid.js (v1.4)\nhttp://www.broofa.com\nmailto:robert@broofa.com\n\nCopyright (c) 2010 Robert Kieffer\nDual licensed under the MIT and GPL licenses.\n*/\n\n/*\n * Generate a random uuid.\n *\n * USAGE: Math.uuid(length, radix)\n *   length - the desired number of characters\n *   radix  - the number of allowable values for each character.\n *\n * EXAMPLES:\n *   // No arguments  - returns RFC4122, version 4 ID\n *   >>> Math.uuid()\n *   \"92329D39-6F5C-4520-ABFC-AAB64544E172\"\n *\n *   // One argument - returns ID of the specified length\n *   >>> Math.uuid(15)     // 15 character ID (default base=62)\n *   \"VcydxgltxrVZSTV\"\n *\n *   // Two arguments - returns ID of the specified length, and radix. \n *   // (Radix must be <= 62)\n *   >>> Math.uuid(8, 2)  // 8 character ID (base=2)\n *   \"01001010\"\n *   >>> Math.uuid(8, 10) // 8 character ID (base=10)\n *   \"47473046\"\n *   >>> Math.uuid(8, 16) // 8 character ID (base=16)\n *   \"098F4D35\"\n */\nvar chars = (\n  '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ' +\n  'abcdefghijklmnopqrstuvwxyz'\n).split('');\nfunction getValue(radix) {\n  return 0 | Math.random() * radix;\n}\nfunction uuid(len, radix) {\n  radix = radix || chars.length;\n  var out = '';\n  var i = -1;\n\n  if (len) {\n    // Compact form\n    while (++i < len) {\n      out += chars[getValue(radix)];\n    }\n    return out;\n  }\n    // rfc4122, version 4 form\n    // Fill in random data.  At i==19 set the high bits of clock sequence as\n    // per rfc4122, sec. 4.1.5\n  while (++i < 36) {\n    switch (i) {\n      case 8:\n      case 13:\n      case 18:\n      case 23:\n        out += '-';\n        break;\n      case 19:\n        out += chars[(getValue(16) & 0x3) | 0x8];\n        break;\n      default:\n        out += chars[getValue(16)];\n    }\n  }\n\n  return out;\n}\n\n\n\nmodule.exports = uuid;\n\n\n},{}],85:[function(require,module,exports){\n'use strict';\n\nmodule.exports = evalFilter;\nfunction evalFilter(input) {\n  /*jshint evil: true */\n  return eval([\n    '(function () { return ',\n    input,\n    ' })()'\n  ].join(''));\n}\n},{}],86:[function(require,module,exports){\n'use strict';\n\nmodule.exports = evalView;\nfunction evalView(input) {\n  /*jshint evil: true */\n  return eval([\n    '(function () {',\n    '  return function (doc) {',\n    '    var emitted = false;',\n    '    var emit = function (a, b) {',\n    '      emitted = true;',\n    '    };',\n    '    var view = ' + input + ';',\n    '    view(doc);',\n    '    if (emitted) {',\n    '      return true;',\n    '    }',\n    '  }',\n    '})()'\n  ].join('\\n'));\n}\n},{}],87:[function(require,module,exports){\n\"use strict\";\n\nvar PouchDB = require('./setup');\n\nmodule.exports = PouchDB;\n\nPouchDB.ajax = require('./deps/ajax/prequest');\nPouchDB.utils = require('./utils');\nPouchDB.Errors = require('./deps/errors');\nPouchDB.replicate = require('./replicate').replicate;\nPouchDB.sync = require('./sync');\nPouchDB.version = require('./version');\nvar httpAdapter = require('./adapters/http');\nPouchDB.adapter('http', httpAdapter);\nPouchDB.adapter('https', httpAdapter);\n\nPouchDB.plugin(require('./mapreduce'));\n\nvar adapters = require('./adapters');\n\nObject.keys(adapters).forEach(function (adapterName) {\n  PouchDB.adapter(adapterName, adapters[adapterName], true);\n});\n\n},{\"./adapters\":17,\"./adapters/http\":18,\"./deps/ajax/prequest\":40,\"./deps/errors\":66,\"./mapreduce\":90,\"./replicate\":98,\"./setup\":101,\"./sync\":102,\"./utils\":104,\"./version\":105}],88:[function(require,module,exports){\n'use strict';\n\nvar upsert = require('../deps/upsert');\nvar Promise = require('../deps/promise');\nvar md5 = require('./md5');\n\nmodule.exports = function (opts) {\n  var sourceDB = opts.db;\n  var viewName = opts.viewName;\n  var mapFun = opts.map;\n  var reduceFun = opts.reduce;\n  var temporary = opts.temporary;\n\n  // the \"undefined\" part is for backwards compatibility\n  var viewSignature = mapFun.toString() + (reduceFun && reduceFun.toString()) +\n    'undefined';\n\n  if (!temporary && sourceDB._cachedViews) {\n    var cachedView = sourceDB._cachedViews[viewSignature];\n    if (cachedView) {\n      return Promise.resolve(cachedView);\n    }\n  }\n\n  return sourceDB.info().then(function (info) {\n\n    var depDbName = info.db_name + '-mrview-' +\n      (temporary ? 'temp' : md5(viewSignature));\n\n    // save the view name in the source db so it can be cleaned up if necessary\n    // (e.g. when the _design doc is deleted, remove all associated view data)\n    function diffFunction(doc) {\n      doc.views = doc.views || {};\n      var fullViewName = viewName;\n      if (fullViewName.indexOf('/') === -1) {\n        fullViewName = viewName + '/' + viewName;\n      }\n      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n      /* istanbul ignore if */\n      if (depDbs[depDbName]) {\n        return; // no update necessary\n      }\n      depDbs[depDbName] = true;\n      return doc;\n    }\n    return upsert(sourceDB, '_local/mrviews', diffFunction).then(function () {\n      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n        var db = res.db;\n        db.auto_compaction = true;\n        var view = {\n          name: depDbName,\n          db: db,\n          sourceDB: sourceDB,\n          adapter: sourceDB.adapter,\n          mapFun: mapFun,\n          reduceFun: reduceFun\n        };\n        return view.db.get('_local/lastSeq').catch(function (err) {\n          /* istanbul ignore if */\n          if (err.status !== 404) {\n            throw err;\n          }\n        }).then(function (lastSeqDoc) {\n          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n          if (!temporary) {\n            sourceDB._cachedViews = sourceDB._cachedViews || {};\n            sourceDB._cachedViews[viewSignature] = view;\n            view.db.once('destroyed', function () {\n              delete sourceDB._cachedViews[viewSignature];\n            });\n          }\n          return view;\n        });\n      });\n    });\n  });\n};\n\n},{\"../deps/promise\":81,\"../deps/upsert\":83,\"./md5\":91}],89:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function (func, emit, sum, log, isArray, toJSON) {\n  /*jshint evil:true,unused:false */\n  return eval(\"(\" + func.replace(/;\\s*$/, \"\") + \");\");\n};\n\n},{}],90:[function(require,module,exports){\n(function (process){\n'use strict';\n\nvar b64ToBluffer = require('../deps/binary/base64StringToBlobOrBuffer');\nvar pouchCollate = require('pouchdb-collate');\nvar TaskQueue = require('./taskqueue');\nvar collate = pouchCollate.collate;\nvar toIndexableString = pouchCollate.toIndexableString;\nvar normalizeKey = pouchCollate.normalizeKey;\nvar parseIndexableString = pouchCollate.parseIndexableString;\nvar createView = require('./createView');\nvar evalFunc = require('./evalfunc');\nvar log;\n/* istanbul ignore else */\nif ((typeof console !== 'undefined') && (typeof console.log === 'function')) {\n  log = Function.prototype.bind.call(console.log, console);\n} else {\n  log = function () {};\n}\nvar utils = require('./utils');\nvar Promise = require('../deps/promise');\nvar inherits = require('inherits');\nvar persistentQueues = {};\nvar tempViewQueue = new TaskQueue();\nvar CHANGES_BATCH_SIZE = 50;\n\nfunction parseViewName(name) {\n  // can be either 'ddocname/viewname' or just 'viewname'\n  // (where the ddoc name is the same)\n  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n}\n\nfunction isGenOne(changes) {\n  // only return true if the current change is 1-\n  // and there are no other leafs\n  return changes.length === 1 && /^1-/.test(changes[0].rev);\n}\n\nfunction emitError(db, e) {\n  try {\n    db.emit('error', e);\n  } catch (err) {\n    console.error(\n      'The user\\'s map/reduce function threw an uncaught error.\\n' +\n      'You can debug this error by doing:\\n' +\n      'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' +\n      'Please double-check your map/reduce function.');\n    console.error(e);\n  }\n}\n\nfunction tryCode(db, fun, args) {\n  // emit an event if there was an error thrown by a map/reduce function.\n  // putting try/catches in a single function also avoids deoptimizations.\n  try {\n    return {\n      output : fun.apply(null, args)\n    };\n  } catch (e) {\n    emitError(db, e);\n    return {error: e};\n  }\n}\n\nfunction sortByKeyThenValue(x, y) {\n  var keyCompare = collate(x.key, y.key);\n  return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);\n}\n\nfunction sliceResults(results, limit, skip) {\n  skip = skip || 0;\n  if (typeof limit === 'number') {\n    return results.slice(skip, limit + skip);\n  } else if (skip > 0) {\n    return results.slice(skip);\n  }\n  return results;\n}\n\nfunction rowToDocId(row) {\n  var val = row.value;\n  // Users can explicitly specify a joined doc _id, or it\n  // defaults to the doc _id that emitted the key/value.\n  var docId = (val && typeof val === 'object' && val._id) || row.id;\n  return docId;\n}\n\nfunction readAttachmentsAsBlobOrBuffer(res) {\n  res.rows.forEach(function (row) {\n    var atts = row.doc && row.doc._attachments;\n    if (!atts) {\n      return;\n    }\n    Object.keys(atts).forEach(function (filename) {\n      var att = atts[filename];\n      atts[filename].data = b64ToBluffer(att.data, att.content_type);\n    });\n  });\n}\n\nfunction postprocessAttachments(opts) {\n  return function (res) {\n    if (opts.include_docs && opts.attachments && opts.binary) {\n      readAttachmentsAsBlobOrBuffer(res);\n    }\n    return res;\n  };\n}\n\nfunction createBuiltInError(name) {\n  var message = 'builtin ' + name +\n    ' function requires map values to be numbers' +\n    ' or number arrays';\n  return new BuiltInError(message);\n}\n\nfunction sum(values) {\n  var result = 0;\n  for (var i = 0, len = values.length; i < len; i++) {\n    var num = values[i];\n    if (typeof num !== 'number') {\n      if (Array.isArray(num)) {\n        // lists of numbers are also allowed, sum them separately\n        result = typeof result === 'number' ? [result] : result;\n        for (var j = 0, jLen = num.length; j < jLen; j++) {\n          var jNum = num[j];\n          if (typeof jNum !== 'number') {\n            throw createBuiltInError('_sum');\n          } else if (typeof result[j] === 'undefined') {\n            result.push(jNum);\n          } else {\n            result[j] += jNum;\n          }\n        }\n      } else { // not array/number\n        throw createBuiltInError('_sum');\n      }\n    } else if (typeof result === 'number') {\n      result += num;\n    } else { // add number to array\n      result[0] += num;\n    }\n  }\n  return result;\n}\n\nvar builtInReduce = {\n  _sum: function (keys, values) {\n    return sum(values);\n  },\n\n  _count: function (keys, values) {\n    return values.length;\n  },\n\n  _stats: function (keys, values) {\n    // no need to implement rereduce=true, because Pouch\n    // will never call it\n    function sumsqr(values) {\n      var _sumsqr = 0;\n      for (var i = 0, len = values.length; i < len; i++) {\n        var num = values[i];\n        _sumsqr += (num * num);\n      }\n      return _sumsqr;\n    }\n    return {\n      sum     : sum(values),\n      min     : Math.min.apply(null, values),\n      max     : Math.max.apply(null, values),\n      count   : values.length,\n      sumsqr : sumsqr(values)\n    };\n  }\n};\n\nfunction addHttpParam(paramName, opts, params, asJson) {\n  // add an http param from opts to params, optionally json-encoded\n  var val = opts[paramName];\n  if (typeof val !== 'undefined') {\n    if (asJson) {\n      val = encodeURIComponent(JSON.stringify(val));\n    }\n    params.push(paramName + '=' + val);\n  }\n}\n\nfunction checkQueryParseError(options, fun) {\n  var startkeyName = options.descending ? 'endkey' : 'startkey';\n  var endkeyName = options.descending ? 'startkey' : 'endkey';\n\n  if (typeof options[startkeyName] !== 'undefined' &&\n    typeof options[endkeyName] !== 'undefined' &&\n    collate(options[startkeyName], options[endkeyName]) > 0) {\n    throw new QueryParseError('No rows can match your key range, ' +\n    'reverse your start_key and end_key or set {descending : true}');\n  } else if (fun.reduce && options.reduce !== false) {\n    if (options.include_docs) {\n      throw new QueryParseError('{include_docs:true} is invalid for reduce');\n    } else if (options.keys && options.keys.length > 1 &&\n        !options.group && !options.group_level) {\n      throw new QueryParseError('Multi-key fetches for reduce views must use ' +\n      '{group: true}');\n    }\n  }\n  if (options.group_level) {\n    if (typeof options.group_level !== 'number') {\n      throw new QueryParseError('Invalid value for integer: \"' +\n      options.group_level + '\"');\n    }\n    if (options.group_level < 0) {\n      throw new QueryParseError('Invalid value for positive integer: ' +\n        '\"' + options.group_level + '\"');\n    }\n  }\n}\n\nfunction httpQuery(db, fun, opts) {\n  // List of parameters to add to the PUT request\n  var params = [];\n  var body;\n  var method = 'GET';\n\n  // If opts.reduce exists and is defined, then add it to the list\n  // of parameters.\n  // If reduce=false then the results are that of only the map function\n  // not the final result of map and reduce.\n  addHttpParam('reduce', opts, params);\n  addHttpParam('include_docs', opts, params);\n  addHttpParam('attachments', opts, params);\n  addHttpParam('limit', opts, params);\n  addHttpParam('descending', opts, params);\n  addHttpParam('group', opts, params);\n  addHttpParam('group_level', opts, params);\n  addHttpParam('skip', opts, params);\n  addHttpParam('stale', opts, params);\n  addHttpParam('conflicts', opts, params);\n  addHttpParam('startkey', opts, params, true);\n  addHttpParam('start_key', opts, params, true);\n  addHttpParam('endkey', opts, params, true);\n  addHttpParam('end_key', opts, params, true);\n  addHttpParam('inclusive_end', opts, params);\n  addHttpParam('key', opts, params, true);\n\n  // Format the list of parameters into a valid URI query string\n  params = params.join('&');\n  params = params === '' ? '' : '?' + params;\n\n  // If keys are supplied, issue a POST to circumvent GET query string limits\n  // see http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n  if (typeof opts.keys !== 'undefined') {\n    var MAX_URL_LENGTH = 2000;\n    // according to http://stackoverflow.com/a/417184/680742,\n    // the de facto URL length limit is 2000 characters\n\n    var keysAsString =\n      'keys=' + encodeURIComponent(JSON.stringify(opts.keys));\n    if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {\n      // If the keys are short enough, do a GET. we do this to work around\n      // Safari not understanding 304s on POSTs (see pouchdb/pouchdb#1239)\n      params += (params[0] === '?' ? '&' : '?') + keysAsString;\n    } else {\n      method = 'POST';\n      if (typeof fun === 'string') {\n        body = {keys: opts.keys};\n      } else { // fun is {map : mapfun}, so append to this\n        fun.keys = opts.keys;\n      }\n    }\n  }\n\n  // We are referencing a query defined in the design doc\n  if (typeof fun === 'string') {\n    var parts = parseViewName(fun);\n    return db.request({\n      method: method,\n      url: '_design/' + parts[0] + '/_view/' + parts[1] + params,\n      body: body\n    }).then(postprocessAttachments(opts));\n  }\n\n  // We are using a temporary view, terrible for performance, good for testing\n  body = body || {};\n  Object.keys(fun).forEach(function (key) {\n    if (Array.isArray(fun[key])) {\n      body[key] = fun[key];\n    } else {\n      body[key] = fun[key].toString();\n    }\n  });\n  return db.request({\n    method: 'POST',\n    url: '_temp_view' + params,\n    body: body\n  }).then(postprocessAttachments(opts));\n}\n\n// custom adapters can define their own api._query\n// and override the default behavior\n/* istanbul ignore next */\nfunction customQuery(db, fun, opts) {\n  return new Promise(function (resolve, reject) {\n    db._query(fun, opts, function (err, res) {\n      if (err) {\n        return reject(err);\n      }\n      resolve(res);\n    });\n  });\n}\n\n// custom adapters can define their own api._viewCleanup\n// and override the default behavior\n/* istanbul ignore next */\nfunction customViewCleanup(db) {\n  return new Promise(function (resolve, reject) {\n    db._viewCleanup(function (err, res) {\n      if (err) {\n        return reject(err);\n      }\n      resolve(res);\n    });\n  });\n}\n\nfunction defaultsTo(value) {\n  return function (reason) {\n    /* istanbul ignore else */\n    if (reason.status === 404) {\n      return value;\n    } else {\n      throw reason;\n    }\n  };\n}\n\n// returns a promise for a list of docs to update, based on the input docId.\n// the order doesn't matter, because post-3.2.0, bulkDocs\n// is an atomic operation in all three adapters.\nfunction getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n  var metaDocId = '_local/doc_' + docId;\n  var defaultMetaDoc = {_id: metaDocId, keys: []};\n  var docData = docIdsToChangesAndEmits[docId];\n  var indexableKeysToKeyValues = docData.indexableKeysToKeyValues;\n  var changes = docData.changes;\n\n  function getMetaDoc() {\n    if (isGenOne(changes)) {\n      // generation 1, so we can safely assume initial state\n      // for performance reasons (avoids unnecessary GETs)\n      return Promise.resolve(defaultMetaDoc);\n    }\n    return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n  }\n\n  function getKeyValueDocs(metaDoc) {\n    if (!metaDoc.keys.length) {\n      // no keys, no need for a lookup\n      return Promise.resolve({rows: []});\n    }\n    return view.db.allDocs({\n      keys: metaDoc.keys,\n      include_docs: true\n    });\n  }\n\n  function processKvDocs(metaDoc, kvDocsRes) {\n    var kvDocs = [];\n    var oldKeysMap = {};\n\n    for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n      var row = kvDocsRes.rows[i];\n      var doc = row.doc;\n      if (!doc) { // deleted\n        continue;\n      }\n      kvDocs.push(doc);\n      oldKeysMap[doc._id] = true;\n      doc._deleted = !indexableKeysToKeyValues[doc._id];\n      if (!doc._deleted) {\n        var keyValue = indexableKeysToKeyValues[doc._id];\n        if ('value' in keyValue) {\n          doc.value = keyValue.value;\n        }\n      }\n    }\n\n    var newKeys = Object.keys(indexableKeysToKeyValues);\n    newKeys.forEach(function (key) {\n      if (!oldKeysMap[key]) {\n        // new doc\n        var kvDoc = {\n          _id: key\n        };\n        var keyValue = indexableKeysToKeyValues[key];\n        if ('value' in keyValue) {\n          kvDoc.value = keyValue.value;\n        }\n        kvDocs.push(kvDoc);\n      }\n    });\n    metaDoc.keys = utils.uniq(newKeys.concat(metaDoc.keys));\n    kvDocs.push(metaDoc);\n\n    return kvDocs;\n  }\n\n  return getMetaDoc().then(function (metaDoc) {\n    return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n      return processKvDocs(metaDoc, kvDocsRes);\n    });\n  });\n}\n\n// updates all emitted key/value docs and metaDocs in the mrview database\n// for the given batch of documents from the source database\nfunction saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n  var seqDocId = '_local/lastSeq';\n  return view.db.get(seqDocId)\n  .catch(defaultsTo({_id: seqDocId, seq: 0}))\n  .then(function (lastSeqDoc) {\n    var docIds = Object.keys(docIdsToChangesAndEmits);\n    return Promise.all(docIds.map(function (docId) {\n      return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n    })).then(function (listOfDocsToPersist) {\n      var docsToPersist = utils.flatten(listOfDocsToPersist);\n      lastSeqDoc.seq = seq;\n      docsToPersist.push(lastSeqDoc);\n      // write all docs in a single operation, update the seq once\n      return view.db.bulkDocs({docs : docsToPersist});\n    });\n  });\n}\n\nfunction getQueue(view) {\n  var viewName = typeof view === 'string' ? view : view.name;\n  var queue = persistentQueues[viewName];\n  if (!queue) {\n    queue = persistentQueues[viewName] = new TaskQueue();\n  }\n  return queue;\n}\n\nfunction updateView(view) {\n  return utils.sequentialize(getQueue(view), function () {\n    return updateViewInQueue(view);\n  })();\n}\n\nfunction updateViewInQueue(view) {\n  // bind the emit function once\n  var mapResults;\n  var doc;\n\n  function emit(key, value) {\n    var output = {id: doc._id, key: normalizeKey(key)};\n    // Don't explicitly store the value unless it's defined and non-null.\n    // This saves on storage space, because often people don't use it.\n    if (typeof value !== 'undefined' && value !== null) {\n      output.value = normalizeKey(value);\n    }\n    mapResults.push(output);\n  }\n\n  var mapFun;\n  // for temp_views one can use emit(doc, emit), see #38\n  if (typeof view.mapFun === \"function\" && view.mapFun.length === 2) {\n    var origMap = view.mapFun;\n    mapFun = function (doc) {\n      return origMap(doc, emit);\n    };\n  } else {\n    mapFun = evalFunc(view.mapFun.toString(), emit, sum, log, Array.isArray,\n      JSON.parse);\n  }\n\n  var currentSeq = view.seq || 0;\n\n  function processChange(docIdsToChangesAndEmits, seq) {\n    return function () {\n      return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n    };\n  }\n\n  var queue = new TaskQueue();\n  // TODO(neojski): https://github.com/daleharvey/pouchdb/issues/1521\n\n  return new Promise(function (resolve, reject) {\n\n    function complete() {\n      queue.finish().then(function () {\n        view.seq = currentSeq;\n        resolve();\n      });\n    }\n\n    function processNextBatch() {\n      view.sourceDB.changes({\n        conflicts: true,\n        include_docs: true,\n        style: 'all_docs',\n        since: currentSeq,\n        limit: CHANGES_BATCH_SIZE\n      }).on('complete', function (response) {\n        var results = response.results;\n        if (!results.length) {\n          return complete();\n        }\n        var docIdsToChangesAndEmits = {};\n        for (var i = 0, l = results.length; i < l; i++) {\n          var change = results[i];\n          if (change.doc._id[0] !== '_') {\n            mapResults = [];\n            doc = change.doc;\n\n            if (!doc._deleted) {\n              tryCode(view.sourceDB, mapFun, [doc]);\n            }\n            mapResults.sort(sortByKeyThenValue);\n\n            var indexableKeysToKeyValues = {};\n            var lastKey;\n            for (var j = 0, jl = mapResults.length; j < jl; j++) {\n              var obj = mapResults[j];\n              var complexKey = [obj.key, obj.id];\n              if (collate(obj.key, lastKey) === 0) {\n                complexKey.push(j); // dup key+id, so make it unique\n              }\n              var indexableKey = toIndexableString(complexKey);\n              indexableKeysToKeyValues[indexableKey] = obj;\n              lastKey = obj.key;\n            }\n            docIdsToChangesAndEmits[change.doc._id] = {\n              indexableKeysToKeyValues: indexableKeysToKeyValues,\n              changes: change.changes\n            };\n          }\n          currentSeq = change.seq;\n        }\n        queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n        if (results.length < CHANGES_BATCH_SIZE) {\n          return complete();\n        }\n        return processNextBatch();\n      }).on('error', onError);\n      /* istanbul ignore next */\n      function onError(err) {\n        reject(err);\n      }\n    }\n\n    processNextBatch();\n  });\n}\n\nfunction reduceView(view, results, options) {\n  if (options.group_level === 0) {\n    delete options.group_level;\n  }\n\n  var shouldGroup = options.group || options.group_level;\n\n  var reduceFun;\n  if (builtInReduce[view.reduceFun]) {\n    reduceFun = builtInReduce[view.reduceFun];\n  } else {\n    reduceFun = evalFunc(\n      view.reduceFun.toString(), null, sum, log, Array.isArray, JSON.parse);\n  }\n\n  var groups = [];\n  var lvl = options.group_level;\n  results.forEach(function (e) {\n    var last = groups[groups.length - 1];\n    var key = shouldGroup ? e.key : null;\n\n    // only set group_level for array keys\n    if (shouldGroup && Array.isArray(key) && typeof lvl === 'number') {\n      key = key.length > lvl ? key.slice(0, lvl) : key;\n    }\n\n    if (last && collate(last.key[0][0], key) === 0) {\n      last.key.push([key, e.id]);\n      last.value.push(e.value);\n      return;\n    }\n    groups.push({key: [\n      [key, e.id]\n    ], value: [e.value]});\n  });\n  for (var i = 0, len = groups.length; i < len; i++) {\n    var e = groups[i];\n    var reduceTry = tryCode(view.sourceDB, reduceFun, [e.key, e.value, false]);\n    if (reduceTry.error && reduceTry.error instanceof BuiltInError) {\n      // CouchDB returns an error if a built-in errors out\n      throw reduceTry.error;\n    }\n    // CouchDB just sets the value to null if a non-built-in errors out\n    e.value = reduceTry.error ? null : reduceTry.output;\n    e.key = e.key[0][0];\n  }\n  // no total_rows/offset when reducing\n  return {rows: sliceResults(groups, options.limit, options.skip)};\n}\n\nfunction queryView(view, opts) {\n  return utils.sequentialize(getQueue(view), function () {\n    return queryViewInQueue(view, opts);\n  })();\n}\n\nfunction queryViewInQueue(view, opts) {\n  var totalRows;\n  var shouldReduce = view.reduceFun && opts.reduce !== false;\n  var skip = opts.skip || 0;\n  if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n    // equivalent query\n    opts.limit = 0;\n    delete opts.keys;\n  }\n\n  function fetchFromView(viewOpts) {\n    viewOpts.include_docs = true;\n    return view.db.allDocs(viewOpts).then(function (res) {\n      totalRows = res.total_rows;\n      return res.rows.map(function (result) {\n\n        // implicit migration - in older versions of PouchDB,\n        // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n        // this is tested in a migration test\n        /* istanbul ignore next */\n        if ('value' in result.doc && typeof result.doc.value === 'object' &&\n            result.doc.value !== null) {\n          var keys = Object.keys(result.doc.value).sort();\n          // this detection method is not perfect, but it's unlikely the user\n          // emitted a value which was an object with these 3 exact keys\n          var expectedKeys = ['id', 'key', 'value'];\n          if (!(keys < expectedKeys || keys > expectedKeys)) {\n            return result.doc.value;\n          }\n        }\n\n        var parsedKeyAndDocId = parseIndexableString(result.doc._id);\n        return {\n          key: parsedKeyAndDocId[0],\n          id: parsedKeyAndDocId[1],\n          value: ('value' in result.doc ? result.doc.value : null)\n        };\n      });\n    });\n  }\n\n  function onMapResultsReady(rows) {\n    var finalResults;\n    if (shouldReduce) {\n      finalResults = reduceView(view, rows, opts);\n    } else {\n      finalResults = {\n        total_rows: totalRows,\n        offset: skip,\n        rows: rows\n      };\n    }\n    if (opts.include_docs) {\n      var docIds = utils.uniq(rows.map(rowToDocId));\n\n      return view.sourceDB.allDocs({\n        keys: docIds,\n        include_docs: true,\n        conflicts: opts.conflicts,\n        attachments: opts.attachments,\n        binary: opts.binary\n      }).then(function (allDocsRes) {\n        var docIdsToDocs = {};\n        allDocsRes.rows.forEach(function (row) {\n          if (row.doc) {\n            docIdsToDocs['$' + row.id] = row.doc;\n          }\n        });\n        rows.forEach(function (row) {\n          var docId = rowToDocId(row);\n          var doc = docIdsToDocs['$' + docId];\n          if (doc) {\n            row.doc = doc;\n          }\n        });\n        return finalResults;\n      });\n    } else {\n      return finalResults;\n    }\n  }\n\n  var flatten = function (array) {\n    return array.reduce(function (prev, cur) {\n      return prev.concat(cur);\n    });\n  };\n\n  if (typeof opts.keys !== 'undefined') {\n    var keys = opts.keys;\n    var fetchPromises = keys.map(function (key) {\n      var viewOpts = {\n        startkey : toIndexableString([key]),\n        endkey   : toIndexableString([key, {}])\n      };\n      return fetchFromView(viewOpts);\n    });\n    return Promise.all(fetchPromises).then(flatten).then(onMapResultsReady);\n  } else { // normal query, no 'keys'\n    var viewOpts = {\n      descending : opts.descending\n    };\n    if (opts.start_key) {\n        opts.startkey = opts.start_key;\n    }\n    if (opts.end_key) {\n        opts.endkey = opts.end_key;\n    }\n    if (typeof opts.startkey !== 'undefined') {\n      viewOpts.startkey = opts.descending ?\n        toIndexableString([opts.startkey, {}]) :\n        toIndexableString([opts.startkey]);\n    }\n    if (typeof opts.endkey !== 'undefined') {\n      var inclusiveEnd = opts.inclusive_end !== false;\n      if (opts.descending) {\n        inclusiveEnd = !inclusiveEnd;\n      }\n\n      viewOpts.endkey = toIndexableString(\n        inclusiveEnd ? [opts.endkey, {}] : [opts.endkey]);\n    }\n    if (typeof opts.key !== 'undefined') {\n      var keyStart = toIndexableString([opts.key]);\n      var keyEnd = toIndexableString([opts.key, {}]);\n      if (viewOpts.descending) {\n        viewOpts.endkey = keyStart;\n        viewOpts.startkey = keyEnd;\n      } else {\n        viewOpts.startkey = keyStart;\n        viewOpts.endkey = keyEnd;\n      }\n    }\n    if (!shouldReduce) {\n      if (typeof opts.limit === 'number') {\n        viewOpts.limit = opts.limit;\n      }\n      viewOpts.skip = skip;\n    }\n    return fetchFromView(viewOpts).then(onMapResultsReady);\n  }\n}\n\nfunction httpViewCleanup(db) {\n  return db.request({\n    method: 'POST',\n    url: '_view_cleanup'\n  });\n}\n\nfunction localViewCleanup(db) {\n  return db.get('_local/mrviews').then(function (metaDoc) {\n    var docsToViews = {};\n    Object.keys(metaDoc.views).forEach(function (fullViewName) {\n      var parts = parseViewName(fullViewName);\n      var designDocName = '_design/' + parts[0];\n      var viewName = parts[1];\n      docsToViews[designDocName] = docsToViews[designDocName] || {};\n      docsToViews[designDocName][viewName] = true;\n    });\n    var opts = {\n      keys : Object.keys(docsToViews),\n      include_docs : true\n    };\n    return db.allDocs(opts).then(function (res) {\n      var viewsToStatus = {};\n      res.rows.forEach(function (row) {\n        var ddocName = row.key.substring(8);\n        Object.keys(docsToViews[row.key]).forEach(function (viewName) {\n          var fullViewName = ddocName + '/' + viewName;\n          /* istanbul ignore if */\n          if (!metaDoc.views[fullViewName]) {\n            // new format, without slashes, to support PouchDB 2.2.0\n            // migration test in pouchdb's browser.migration.js verifies this\n            fullViewName = viewName;\n          }\n          var viewDBNames = Object.keys(metaDoc.views[fullViewName]);\n          // design doc deleted, or view function nonexistent\n          var statusIsGood = row.doc && row.doc.views &&\n            row.doc.views[viewName];\n          viewDBNames.forEach(function (viewDBName) {\n            viewsToStatus[viewDBName] =\n              viewsToStatus[viewDBName] || statusIsGood;\n          });\n        });\n      });\n      var dbsToDelete = Object.keys(viewsToStatus).filter(\n        function (viewDBName) { return !viewsToStatus[viewDBName]; });\n      var destroyPromises = dbsToDelete.map(function (viewDBName) {\n        return utils.sequentialize(getQueue(viewDBName), function () {\n          return new db.constructor(viewDBName, db.__opts).destroy();\n        })();\n      });\n      return Promise.all(destroyPromises).then(function () {\n        return {ok: true};\n      });\n    });\n  }, defaultsTo({ok: true}));\n}\n\nexports.viewCleanup = utils.callbackify(function () {\n  var db = this;\n  if (db.type() === 'http') {\n    return httpViewCleanup(db);\n  }\n  /* istanbul ignore next */\n  if (typeof db._viewCleanup === 'function') {\n    return customViewCleanup(db);\n  }\n  return localViewCleanup(db);\n});\n\nfunction queryPromised(db, fun, opts) {\n  if (db.type() === 'http') {\n    return httpQuery(db, fun, opts);\n  }\n\n  /* istanbul ignore next */\n  if (typeof db._query === 'function') {\n    return customQuery(db, fun, opts);\n  }\n\n  if (typeof fun !== 'string') {\n    // temp_view\n    checkQueryParseError(opts, fun);\n\n    var createViewOpts = {\n      db : db,\n      viewName : 'temp_view/temp_view',\n      map : fun.map,\n      reduce : fun.reduce,\n      temporary : true\n    };\n    tempViewQueue.add(function () {\n      return createView(createViewOpts).then(function (view) {\n        function cleanup() {\n          return view.db.destroy();\n        }\n        return utils.fin(updateView(view).then(function () {\n          return queryView(view, opts);\n        }), cleanup);\n      });\n    });\n    return tempViewQueue.finish();\n  } else {\n    // persistent view\n    var fullViewName = fun;\n    var parts = parseViewName(fullViewName);\n    var designDocName = parts[0];\n    var viewName = parts[1];\n    return db.get('_design/' + designDocName).then(function (doc) {\n      var fun = doc.views && doc.views[viewName];\n\n      if (!fun || typeof fun.map !== 'string') {\n        throw new NotFoundError('ddoc ' + designDocName +\n        ' has no view named ' + viewName);\n      }\n      checkQueryParseError(opts, fun);\n\n      var createViewOpts = {\n        db : db,\n        viewName : fullViewName,\n        map : fun.map,\n        reduce : fun.reduce\n      };\n      return createView(createViewOpts).then(function (view) {\n        if (opts.stale === 'ok' || opts.stale === 'update_after') {\n          if (opts.stale === 'update_after') {\n            process.nextTick(function () {\n              updateView(view);\n            });\n          }\n          return queryView(view, opts);\n        } else { // stale not ok\n          return updateView(view).then(function () {\n            return queryView(view, opts);\n          });\n        }\n      });\n    });\n  }\n}\n\nexports.query = function (fun, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  if (typeof fun === 'function') {\n    fun = {map : fun};\n  }\n\n  var db = this;\n  var promise = Promise.resolve().then(function () {\n    return queryPromised(db, fun, opts);\n  });\n  utils.promisedCallback(promise, callback);\n  return promise;\n};\n\nfunction QueryParseError(message) {\n  this.status = 400;\n  this.name = 'query_parse_error';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, QueryParseError);\n  } catch (e) {}\n}\n\ninherits(QueryParseError, Error);\n\nfunction NotFoundError(message) {\n  this.status = 404;\n  this.name = 'not_found';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, NotFoundError);\n  } catch (e) {}\n}\n\ninherits(NotFoundError, Error);\n\nfunction BuiltInError(message) {\n  this.status = 500;\n  this.name = 'invalid_value';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, BuiltInError);\n  } catch (e) {}\n}\n\ninherits(BuiltInError, Error);\n\n}).call(this,require('_process'))\n},{\"../deps/binary/base64StringToBlobOrBuffer\":44,\"../deps/promise\":81,\"./createView\":88,\"./evalfunc\":89,\"./taskqueue\":92,\"./utils\":93,\"_process\":108,\"inherits\":10,\"pouchdb-collate\":12}],91:[function(require,module,exports){\n'use strict';\n\nvar Md5 = require('spark-md5');\n\nmodule.exports = function (string) {\n  return Md5.hash(string);\n};\n},{\"spark-md5\":109}],92:[function(require,module,exports){\n'use strict';\n/*\n * Simple task queue to sequentialize actions. Assumes\n * callbacks will eventually fire (once).\n */\n\nvar Promise = require('../deps/promise');\n\nfunction TaskQueue() {\n  this.promise = new Promise(function (fulfill) {fulfill(); });\n}\nTaskQueue.prototype.add = function (promiseFactory) {\n  this.promise = this.promise.catch(function () {\n    // just recover\n  }).then(function () {\n    return promiseFactory();\n  });\n  return this.promise;\n};\nTaskQueue.prototype.finish = function () {\n  return this.promise;\n};\n\nmodule.exports = TaskQueue;\n\n},{\"../deps/promise\":81}],93:[function(require,module,exports){\n(function (process){\n'use strict';\n\nvar argsarray = require('argsarray');\n\nexports.promisedCallback = function (promise, callback) {\n  if (callback) {\n    promise.then(function (res) {\n      process.nextTick(function () {\n        callback(null, res);\n      });\n    }, function (reason) {\n      process.nextTick(function () {\n        callback(reason);\n      });\n    });\n  }\n  return promise;\n};\n\nexports.callbackify = function (fun) {\n  return argsarray(function (args) {\n    var cb = args.pop();\n    var promise = fun.apply(this, args);\n    if (typeof cb === 'function') {\n      exports.promisedCallback(promise, cb);\n    }\n    return promise;\n  });\n};\n\n// Promise finally util similar to Q.finally\nexports.fin = function (promise, finalPromiseFactory) {\n  return promise.then(function (res) {\n    return finalPromiseFactory().then(function () {\n      return res;\n    });\n  }, function (reason) {\n    return finalPromiseFactory().then(function () {\n      throw reason;\n    });\n  });\n};\n\nexports.sequentialize = function (queue, promiseFactory) {\n  return function () {\n    var args = arguments;\n    var that = this;\n    return queue.add(function () {\n      return promiseFactory.apply(that, args);\n    });\n  };\n};\n\nexports.flatten = function (arrs) {\n  var res = [];\n  for (var i = 0, len = arrs.length; i < len; i++) {\n    res = res.concat(arrs[i]);\n  }\n  return res;\n};\n\n// uniq an array of strings, order not guaranteed\n// similar to underscore/lodash _.uniq\nexports.uniq = function (arr) {\n  var map = {};\n\n  for (var i = 0, len = arr.length; i < len; i++) {\n    map['$' + arr[i]] = true;\n  }\n\n  var keys = Object.keys(map);\n  var output = new Array(keys.length);\n\n  for (i = 0, len = keys.length; i < len; i++) {\n    output[i] = keys[i].substring(1);\n  }\n  return output;\n};\n}).call(this,require('_process'))\n},{\"_process\":108,\"argsarray\":6}],94:[function(require,module,exports){\n'use strict';\n\nvar STARTING_BACK_OFF = 0;\n\nfunction randomNumber(min, max) {\n  min = parseInt(min, 10);\n  max = parseInt(max, 10);\n  if (min !== min) {\n    min = 0;\n  }\n  if (max !== max || max <= min) {\n    max = (min || 1) << 1; //doubling\n  } else {\n    max = max + 1;\n  }\n  var ratio = Math.random();\n  var range = max - min;\n\n  return ~~(range * ratio + min); // ~~ coerces to an int, but fast.\n}\n\nfunction defaultBackOff(min) {\n  var max = 0;\n  if (!min) {\n    max = 2000;\n  }\n  return randomNumber(min, max);\n}\n\nfunction backOff(opts, returnValue, error, callback) {\n  if (opts.retry === false) {\n    returnValue.emit('error', error);\n    returnValue.removeAllListeners();\n    return;\n  }\n  if (typeof opts.back_off_function !== 'function') {\n    opts.back_off_function = defaultBackOff;\n  }\n  returnValue.emit('requestError', error);\n  if (returnValue.state === 'active' || returnValue.state === 'pending') {\n    returnValue.emit('paused', error);\n    returnValue.state = 'stopped';\n    returnValue.once('active', function () {\n      opts.current_back_off = STARTING_BACK_OFF;\n    });\n  }\n\n  opts.current_back_off = opts.current_back_off || STARTING_BACK_OFF;\n  opts.current_back_off = opts.back_off_function(opts.current_back_off);\n  setTimeout(callback, opts.current_back_off);\n}\n\nmodule.exports = backOff;\n\n},{}],95:[function(require,module,exports){\n'use strict';\n\nvar Promise = require('./../deps/promise');\nvar explain404 = require('./../deps/ajax/explain404');\nvar pouchCollate = require('pouchdb-collate');\nvar collate = pouchCollate.collate;\n\nvar CHECKPOINT_VERSION = 1;\nvar REPLICATOR = \"pouchdb\";\n// This is an arbitrary number to limit the\n// amount of replication history we save in the checkpoint.\n// If we save too much, the checkpoing docs will become very big,\n// if we save fewer, we'll run a greater risk of having to\n// read all the changes from 0 when checkpoint PUTs fail\n// CouchDB 2.0 has a more involved history pruning,\n// but let's go for the simple version for now.\nvar CHECKPOINT_HISTORY_SIZE = 5;\nvar LOWEST_SEQ = 0;\n\nfunction updateCheckpoint(db, id, checkpoint, session, returnValue) {\n  return db.get(id).catch(function (err) {\n    if (err.status === 404) {\n      if (db.type() === 'http') {\n        explain404('PouchDB is just checking if a remote checkpoint exists.');\n      }\n      return {\n        session_id: session,\n        _id: id,\n        history: [],\n        replicator: REPLICATOR,\n        version: CHECKPOINT_VERSION\n      };\n    }\n    throw err;\n  }).then(function (doc) {\n    if (returnValue.cancelled) {\n      return;\n    }\n    // Filter out current entry for this replication\n    doc.history = (doc.history || []).filter(function (item) {\n      return item.session_id !== session;\n    });\n\n    // Add the latest checkpoint to history\n    doc.history.unshift({\n      last_seq: checkpoint,\n      session_id: session\n    });\n\n    // Just take the last pieces in history, to\n    // avoid really big checkpoint docs.\n    // see comment on history size above\n    doc.history = doc.history.slice(0, CHECKPOINT_HISTORY_SIZE);\n\n    doc.version = CHECKPOINT_VERSION;\n    doc.replicator = REPLICATOR;\n\n    doc.session_id = session;\n    doc.last_seq = checkpoint;\n\n    return db.put(doc).catch(function (err) {\n      if (err.status === 409) {\n        // retry; someone is trying to write a checkpoint simultaneously\n        return updateCheckpoint(db, id, checkpoint, session, returnValue);\n      }\n      throw err;\n    });\n  });\n}\n\nfunction Checkpointer(src, target, id, returnValue) {\n  this.src = src;\n  this.target = target;\n  this.id = id;\n  this.returnValue = returnValue;\n}\n\nCheckpointer.prototype.writeCheckpoint = function (checkpoint, session) {\n  var self = this;\n  return this.updateTarget(checkpoint, session).then(function () {\n    return self.updateSource(checkpoint, session);\n  });\n};\n\nCheckpointer.prototype.updateTarget = function (checkpoint, session) {\n  return updateCheckpoint(this.target, this.id, checkpoint,\n      session, this.returnValue);\n};\n\nCheckpointer.prototype.updateSource = function (checkpoint, session) {\n  var self = this;\n  if (this.readOnlySource) {\n    return Promise.resolve(true);\n  }\n  return updateCheckpoint(this.src, this.id, checkpoint,\n      session, this.returnValue)\n    .catch(function (err) {\n      var isForbidden = typeof err.status === 'number' &&\n        Math.floor(err.status / 100) === 4;\n      if (isForbidden) {\n        self.readOnlySource = true;\n        return true;\n      }\n      throw err;\n    });\n};\n\nvar comparisons = {\n  \"undefined\": function(targetDoc, sourceDoc) {\n    // This is the previous comparison function\n    if (collate(targetDoc.last_seq, sourceDoc.last_seq) === 0) {\n      return sourceDoc.last_seq;\n    }\n\n    return 0;\n  },\n  \"1\": function(targetDoc, sourceDoc) {\n    // This is the comparison function ported from CouchDB\n    return compareReplicationLogs(sourceDoc, targetDoc).last_seq;\n  }\n};\n\nCheckpointer.prototype.getCheckpoint = function () {\n  var self = this;\n  return self.target.get(self.id).then(function (targetDoc) {\n    return self.src.get(self.id).then(function (sourceDoc) {\n      // Since we can't migrate an old version doc to a new one\n      // (no session id), we just go with the lowest seq in this case\n      if (targetDoc.version !==\n         sourceDoc.version) {\n        return LOWEST_SEQ;\n      }\n\n      var version;\n      if (targetDoc.version) {\n        version = targetDoc.version.toString();\n      } else {\n        version = \"undefined\";\n      }\n\n      if (version in comparisons) {\n        return comparisons[version](targetDoc, sourceDoc);\n      }\n\n      return LOWEST_SEQ;\n    }, function (err) {\n      if (err.status === 404 && targetDoc.last_seq) {\n        return self.src.put({\n          _id: self.id,\n          last_seq: LOWEST_SEQ\n        }).then(function () {\n          return LOWEST_SEQ;\n        }, function (err) {\n          if (err.status === 401) {\n            self.readOnlySource = true;\n            return targetDoc.last_seq;\n          }\n          return LOWEST_SEQ;\n        });\n      }\n      throw err;\n    });\n  }).catch(function (err) {\n    if (err.status !== 404) {\n      throw err;\n    }\n    return LOWEST_SEQ;\n  });\n};\n// This checkpoint comparison is ported from CouchDBs source\n// they come from here:\n// https://github.com/apache/couchdb-couch-replicator/blob/master/src/couch_replicator.erl#L863-L906\n\nfunction compareReplicationLogs (srcDoc, tgtDoc) {\n  if (srcDoc.session_id === tgtDoc.session_id) {\n    return {\n      last_seq: srcDoc.last_seq,\n      history: srcDoc.history || []\n    };\n  }\n\n  var sourceHistory = srcDoc.history || [];\n  var targetHistory = tgtDoc.history || [];\n  return compareReplicationHistory(sourceHistory, targetHistory);\n}\n\nfunction compareReplicationHistory (sourceHistory, targetHistory) {\n  // the erlang loop via function arguments is not so easy to repeat in JS\n  // therefore, doing this as recursion\n  var S = sourceHistory[0];\n  var sourceRest = sourceHistory.slice(1);\n  var T = targetHistory[0];\n  var targetRest = targetHistory.slice(1);\n\n  if (!S || targetHistory.length === 0) {\n    return {\n      last_seq: LOWEST_SEQ,\n      history: []\n    };\n  }\n\n  var sourceId = S.session_id;\n  if (hasSessionId(sourceId, targetHistory)) {\n    return {\n      last_seq: S.last_seq,\n      history: sourceHistory\n    };\n  }\n\n  var targetId = T.session_id;\n  if (hasSessionId(targetId, sourceRest)) {\n    return {\n      last_seq: T.last_seq,\n      history: targetRest\n    };\n  }\n\n  return compareReplicationHistory(sourceRest, targetRest);\n}\n\nfunction hasSessionId (sessionId, history) {\n  var props = history[0];\n  var rest = history.slice(1);\n\n  if (!sessionId || history.length === 0) {\n    return false;\n  }\n\n  if (sessionId === props.session_id) {\n    return true;\n  }\n\n  return hasSessionId(sessionId, rest);\n}\n\n\nmodule.exports = Checkpointer;\n\n},{\"./../deps/ajax/explain404\":37,\"./../deps/promise\":81,\"pouchdb-collate\":12}],96:[function(require,module,exports){\n'use strict';\n\nvar Promise = require('./../deps/promise');\nvar md5 = require('../deps/md5');\nvar collate = require('pouchdb-collate').collate;\n\nfunction sortObjectPropertiesByKey(queryParams) {\n  return Object.keys(queryParams).sort(collate).reduce(function (result, key) {\n    result[key] = queryParams[key];\n    return result;\n  }, {});\n}\n\n// Generate a unique id particular to this replication.\n// Not guaranteed to align perfectly with CouchDB's rep ids.\nfunction generateReplicationId(src, target, opts) {\n  var docIds = opts.doc_ids ? opts.doc_ids.sort(collate) : '';\n  var filterFun = opts.filter ? opts.filter.toString() : '';\n  var queryParams = '';\n  var filterViewName =  '';\n\n  if (opts.filter && opts.query_params) {\n    queryParams = JSON.stringify(sortObjectPropertiesByKey(opts.query_params));\n  }\n\n  if (opts.filter && opts.filter === '_view') {\n    filterViewName = opts.view.toString();\n  }\n\n  return Promise.all([src.id(), target.id()]).then(function (res) {\n    var queryData = res[0] + res[1] + filterFun + filterViewName +\n      queryParams + docIds;\n    return md5(queryData);\n  }).then(function (md5sum) {\n    // can't use straight-up md5 alphabet, because\n    // the char '/' is interpreted as being for attachments,\n    // and + is also not url-safe\n    md5sum = md5sum.replace(/\\//g, '.').replace(/\\+/g, '_');\n    return '_local/' + md5sum;\n  });\n}\n\nmodule.exports = generateReplicationId;\n\n},{\"../deps/md5\":69,\"./../deps/promise\":81,\"pouchdb-collate\":12}],97:[function(require,module,exports){\n'use strict';\n\nvar utils = require('./../utils');\nvar clone = utils.clone;\nvar Promise = utils.Promise;\n\nfunction isGenOne(rev) {\n  return /^1-/.test(rev);\n}\n\nfunction createBulkGetOpts(diffs) {\n  var requests = [];\n  Object.keys(diffs).forEach(function (id) {\n    var missingRevs = diffs[id].missing;\n    missingRevs.forEach(function (missingRev) {\n      requests.push({\n        id: id,\n        rev: missingRev\n      });\n    });\n  });\n\n  return {\n    docs: requests,\n    revs: true,\n    attachments: true,\n    binary: true\n  };\n}\n\n//\n// Fetch all the documents from the src as described in the \"diffs\",\n// which is a mapping of docs IDs to revisions. If the state ever\n// changes to \"cancelled\", then the returned promise will be rejected.\n// Else it will be resolved with a list of fetched documents.\n//\nfunction getDocs(src, diffs, state) {\n  diffs = clone(diffs); // we do not need to modify this\n\n  var resultDocs = [];\n\n  function getAllDocs() {\n\n    var bulkGetOpts = createBulkGetOpts(diffs);\n\n    return src.bulkGet(bulkGetOpts).then(function (bulkGetResponse) {\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      bulkGetResponse.results.forEach(function (bulkGetInfo) {\n        bulkGetInfo.docs.forEach(function (doc) {\n          if (doc.ok) {\n            resultDocs.push(doc.ok);\n          }\n        });\n      });\n    });\n  }\n\n  function hasAttachments(doc) {\n    return doc._attachments && Object.keys(doc._attachments).length > 0;\n  }\n\n  function fetchRevisionOneDocs(ids) {\n    // Optimization: fetch gen-1 docs and attachments in\n    // a single request using _all_docs\n    return src.allDocs({\n      keys: ids,\n      include_docs: true\n    }).then(function (res) {\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      res.rows.forEach(function (row) {\n        if (row.deleted || !row.doc || !isGenOne(row.value.rev) ||\n            hasAttachments(row.doc)) {\n          // if any of these conditions apply, we need to fetch using get()\n          return;\n        }\n\n        // the doc we got back from allDocs() is sufficient\n        resultDocs.push(row.doc);\n        delete diffs[row.id];\n      });\n    });\n  }\n\n  function getRevisionOneDocs() {\n    // filter out the generation 1 docs and get them\n    // leaving the non-generation one docs to be got otherwise\n    var ids = Object.keys(diffs).filter(function (id) {\n      var missing = diffs[id].missing;\n      return missing.length === 1 && isGenOne(missing[0]);\n    });\n    if (ids.length > 0) {\n      return fetchRevisionOneDocs(ids);\n    }\n  }\n\n  function returnDocs() {\n    return resultDocs;\n  }\n\n  return Promise.resolve()\n    .then(getRevisionOneDocs)\n    .then(getAllDocs)\n    .then(returnDocs);\n}\n\nmodule.exports = getDocs;\n},{\"./../utils\":104}],98:[function(require,module,exports){\n'use strict';\n\nvar utils = require('../utils');\nvar replicate = require('./replicate');\nvar Replication = require('./replication');\n\nvar errors = require('../deps/errors');\n\nfunction toPouch(db, opts) {\n  var PouchConstructor = opts.PouchConstructor;\n  if (typeof db === 'string') {\n    return new PouchConstructor(db, opts);\n  } else {\n    return db;\n  }\n}\n\nfunction replicateWrapper(src, target, opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n\n  if (opts.doc_ids && !Array.isArray(opts.doc_ids)) {\n    throw errors.error(errors.BAD_REQUEST,\n                       \"`doc_ids` filter parameter is not a list.\");\n  }\n\n  opts.complete = callback;\n  opts = utils.clone(opts);\n  opts.continuous = opts.continuous || opts.live;\n  opts.retry = ('retry' in opts) ? opts.retry : false;\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  var replicateRet = new Replication(opts);\n  var srcPouch = toPouch(src, opts);\n  var targetPouch = toPouch(target, opts);\n  replicate(srcPouch, targetPouch, opts, replicateRet);\n  return replicateRet;\n}\n\nmodule.exports = {\n  replicate: replicateWrapper,\n  toPouch: toPouch\n};\n\n},{\"../deps/errors\":66,\"../utils\":104,\"./replicate\":99,\"./replication\":100}],99:[function(require,module,exports){\n'use strict';\n\nvar utils = require('./../utils');\nvar Checkpointer = require('./checkpointer');\nvar backOff = require('./backoff');\nvar generateReplicationId = require('./generateReplicationId');\nvar getDocs = require('./getDocs');\n\nfunction replicate(src, target, opts, returnValue, result) {\n  var batches = [];               // list of batches to be processed\n  var currentBatch;               // the batch currently being processed\n  var pendingBatch = {\n    seq: 0,\n    changes: [],\n    docs: []\n  }; // next batch, not yet ready to be processed\n  var writingCheckpoint = false;  // true while checkpoint is being written\n  var changesCompleted = false;   // true when all changes received\n  var replicationCompleted = false; // true when replication has completed\n  var last_seq = 0;\n  var continuous = opts.continuous || opts.live || false;\n  var batch_size = opts.batch_size || 100;\n  var batches_limit = opts.batches_limit || 10;\n  var changesPending = false;     // true while src.changes is running\n  var doc_ids = opts.doc_ids;\n  var repId;\n  var checkpointer;\n  var allErrors = [];\n  var changedDocs = [];\n  // Like couchdb, every replication gets a unique session id\n  var session = utils.uuid();\n\n  result = result || {\n    ok: true,\n    start_time: new Date(),\n    docs_read: 0,\n    docs_written: 0,\n    doc_write_failures: 0,\n    errors: []\n  };\n\n  var changesOpts = {};\n  returnValue.ready(src, target);\n\n  function initCheckpointer() {\n    if (checkpointer) {\n      return utils.Promise.resolve();\n    }\n    return generateReplicationId(src, target, opts).then(function (res) {\n      repId = res;\n      checkpointer = new Checkpointer(src, target, repId, returnValue);\n    });\n  }\n\n  function writeDocs() {\n    if (currentBatch.docs.length === 0) {\n      return;\n    }\n    var docs = currentBatch.docs;\n    return target.bulkDocs({docs: docs, new_edits: false}).then(function (res) {\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      var errors = [];\n      var errorsById = {};\n      res.forEach(function (res) {\n        if (res.error) {\n          result.doc_write_failures++;\n          errors.push(res);\n          errorsById[res.id] = res;\n        }\n      });\n      allErrors = allErrors.concat(errors);\n      result.docs_written += currentBatch.docs.length - errors.length;\n      var non403s = errors.filter(function (error) {\n        return error.name !== 'unauthorized' && error.name !== 'forbidden';\n      });\n\n      changedDocs = [];\n      docs.forEach(function(doc) {\n        var error = errorsById[doc._id];\n        if (error) {\n          returnValue.emit('denied', utils.clone(error));\n        } else {\n          changedDocs.push(doc);\n        }\n      });\n\n      if (non403s.length > 0) {\n        var error = new Error('bulkDocs error');\n        error.other_errors = errors;\n        abortReplication('target.bulkDocs failed to write docs', error);\n        throw new Error('bulkWrite partial failure');\n      }\n    }, function (err) {\n      result.doc_write_failures += docs.length;\n      throw err;\n    });\n  }\n\n  function finishBatch() {\n    result.last_seq = last_seq = currentBatch.seq;\n    var outResult = utils.clone(result);\n    if (changedDocs.length) {\n      outResult.docs = changedDocs;\n      returnValue.emit('change', outResult);\n    }\n    writingCheckpoint = true;\n    return checkpointer.writeCheckpoint(currentBatch.seq,\n        session).then(function () {\n      writingCheckpoint = false;\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      currentBatch = undefined;\n      getChanges();\n    }).catch(function (err) {\n      writingCheckpoint = false;\n      abortReplication('writeCheckpoint completed with error', err);\n      throw err;\n    });\n  }\n\n  function getDiffs() {\n    var diff = {};\n    currentBatch.changes.forEach(function (change) {\n      // Couchbase Sync Gateway emits these, but we can ignore them\n      if (change.id === \"_user/\") {\n        return;\n      }\n      diff[change.id] = change.changes.map(function (x) {\n        return x.rev;\n      });\n    });\n    return target.revsDiff(diff).then(function (diffs) {\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      // currentBatch.diffs elements are deleted as the documents are written\n      currentBatch.diffs = diffs;\n    });\n  }\n\n  function getBatchDocs() {\n    return getDocs(src, currentBatch.diffs, returnValue).then(function (docs) {\n      docs.forEach(function (doc) {\n        delete currentBatch.diffs[doc._id];\n        result.docs_read++;\n        currentBatch.docs.push(doc);\n      });\n    });\n  }\n\n  function startNextBatch() {\n    if (returnValue.cancelled || currentBatch) {\n      return;\n    }\n    if (batches.length === 0) {\n      processPendingBatch(true);\n      return;\n    }\n    currentBatch = batches.shift();\n    getDiffs()\n      .then(getBatchDocs)\n      .then(writeDocs)\n      .then(finishBatch)\n      .then(startNextBatch)\n      .catch(function (err) {\n        abortReplication('batch processing terminated with error', err);\n      });\n  }\n\n\n  function processPendingBatch(immediate) {\n    if (pendingBatch.changes.length === 0) {\n      if (batches.length === 0 && !currentBatch) {\n        if ((continuous && changesOpts.live) || changesCompleted) {\n          returnValue.state = 'pending';\n          returnValue.emit('paused');\n        }\n        if (changesCompleted) {\n          completeReplication();\n        }\n      }\n      return;\n    }\n    if (\n      immediate ||\n      changesCompleted ||\n      pendingBatch.changes.length >= batch_size\n    ) {\n      batches.push(pendingBatch);\n      pendingBatch = {\n        seq: 0,\n        changes: [],\n        docs: []\n      };\n      if (returnValue.state === 'pending' || returnValue.state === 'stopped') {\n        returnValue.state = 'active';\n        returnValue.emit('active');\n      }\n      startNextBatch();\n    }\n  }\n\n\n  function abortReplication(reason, err) {\n    if (replicationCompleted) {\n      return;\n    }\n    if (!err.message) {\n      err.message = reason;\n    }\n    result.ok = false;\n    result.status = 'aborting';\n    result.errors.push(err);\n    allErrors = allErrors.concat(err);\n    batches = [];\n    pendingBatch = {\n      seq: 0,\n      changes: [],\n      docs: []\n    };\n    completeReplication();\n  }\n\n\n  function completeReplication() {\n    if (replicationCompleted) {\n      return;\n    }\n    if (returnValue.cancelled) {\n      result.status = 'cancelled';\n      if (writingCheckpoint) {\n        return;\n      }\n    }\n    result.status = result.status || 'complete';\n    result.end_time = new Date();\n    result.last_seq = last_seq;\n    replicationCompleted = true;\n    var non403s = allErrors.filter(function (error) {\n      return error.name !== 'unauthorized' && error.name !== 'forbidden';\n    });\n    if (non403s.length > 0) {\n      var error = allErrors.pop();\n      if (allErrors.length > 0) {\n        error.other_errors = allErrors;\n      }\n      error.result = result;\n      backOff(opts, returnValue, error, function () {\n        replicate(src, target, opts, returnValue);\n      });\n    } else {\n      result.errors = allErrors;\n      returnValue.emit('complete', result);\n      returnValue.removeAllListeners();\n    }\n  }\n\n\n  function onChange(change) {\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    var filter = utils.filterChange(opts)(change);\n    if (!filter) {\n      return;\n    }\n    pendingBatch.seq = change.seq;\n    pendingBatch.changes.push(change);\n    processPendingBatch(batches.length === 0);\n  }\n\n\n  function onChangesComplete(changes) {\n    changesPending = false;\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n\n    // if no results were returned then we're done,\n    // else fetch more\n    if (changes.results.length > 0) {\n      changesOpts.since = changes.last_seq;\n      getChanges();\n    } else {\n      if (continuous) {\n        changesOpts.live = true;\n        getChanges();\n      } else {\n        changesCompleted = true;\n      }\n    }\n    processPendingBatch(true);\n  }\n\n\n  function onChangesError(err) {\n    changesPending = false;\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    abortReplication('changes rejected', err);\n  }\n\n\n  function getChanges() {\n    if (!(\n      !changesPending &&\n      !changesCompleted &&\n      batches.length < batches_limit\n      )) {\n      return;\n    }\n    changesPending = true;\n    function abortChanges() {\n      changes.cancel();\n    }\n    function removeListener() {\n      returnValue.removeListener('cancel', abortChanges);\n    }\n\n    if (returnValue._changes) { // remove old changes() and listeners\n      returnValue.removeListener('cancel', returnValue._abortChanges);\n      returnValue._changes.cancel();\n    }\n    returnValue.once('cancel', abortChanges);\n\n    var changes = src.changes(changesOpts)\n      .on('change', onChange);\n    changes.then(removeListener, removeListener);\n    changes.then(onChangesComplete)\n      .catch(onChangesError);\n\n    if (opts.retry) {\n      // save for later so we can cancel if necessary\n      returnValue._changes = changes;\n      returnValue._abortChanges = abortChanges;\n    }\n  }\n\n\n  function startChanges() {\n    initCheckpointer().then(function () {\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      return checkpointer.getCheckpoint().then(function (checkpoint) {\n        last_seq = checkpoint;\n        changesOpts = {\n          since: last_seq,\n          limit: batch_size,\n          batch_size: batch_size,\n          style: 'all_docs',\n          doc_ids: doc_ids,\n          returnDocs: true // required so we know when we're done\n        };\n        if (opts.filter) {\n          if (typeof opts.filter !== 'string') {\n            // required for the client-side filter in onChange\n            changesOpts.include_docs = true;\n          } else { // ddoc filter\n            changesOpts.filter = opts.filter;\n          }\n        }\n        if (opts.heartbeat) {\n          changesOpts.heartbeat = opts.heartbeat;\n        }\n        if (opts.query_params) {\n          changesOpts.query_params = opts.query_params;\n        }\n        if (opts.view) {\n          changesOpts.view = opts.view;\n        }\n        getChanges();\n      });\n    }).catch(function (err) {\n      abortReplication('getCheckpoint rejected with ', err);\n    });\n  }\n\n  if (returnValue.cancelled) { // cancelled immediately\n    completeReplication();\n    return;\n  }\n\n  if (!returnValue._addedListeners) {\n    returnValue.once('cancel', completeReplication);\n\n    if (typeof opts.complete === 'function') {\n      returnValue.once('error', opts.complete);\n      returnValue.once('complete', function (result) {\n        opts.complete(null, result);\n      });\n    }\n    returnValue._addedListeners = true;\n  }\n\n  if (typeof opts.since === 'undefined') {\n    startChanges();\n  } else {\n    initCheckpointer().then(function () {\n      writingCheckpoint = true;\n      return checkpointer.writeCheckpoint(opts.since, session);\n    }).then(function () {\n      writingCheckpoint = false;\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      last_seq = opts.since;\n      startChanges();\n    }).catch(function (err) {\n      writingCheckpoint = false;\n      abortReplication('writeCheckpoint completed with error', err);\n      throw err;\n    });\n  }\n}\n\nmodule.exports = replicate;\n\n},{\"./../utils\":104,\"./backoff\":94,\"./checkpointer\":95,\"./generateReplicationId\":96,\"./getDocs\":97}],100:[function(require,module,exports){\n'use strict';\n\nvar utils = require('./../utils');\nvar EE = require('events').EventEmitter;\nvar Promise = utils.Promise;\n\n// We create a basic promise so the caller can cancel the replication possibly\n// before we have actually started listening to changes etc\nutils.inherits(Replication, EE);\nfunction Replication() {\n  EE.call(this);\n  this.cancelled = false;\n  this.state = 'pending';\n  var self = this;\n  var promise = new Promise(function (fulfill, reject) {\n    self.once('complete', fulfill);\n    self.once('error', reject);\n  });\n  self.then = function (resolve, reject) {\n    return promise.then(resolve, reject);\n  };\n  self.catch = function (reject) {\n    return promise.catch(reject);\n  };\n  // As we allow error handling via \"error\" event as well,\n  // put a stub in here so that rejecting never throws UnhandledError.\n  self.catch(function () {});\n}\n\nReplication.prototype.cancel = function () {\n  this.cancelled = true;\n  this.state = 'cancelled';\n  this.emit('cancel');\n};\n\nReplication.prototype.ready = function (src, target) {\n  var self = this;\n  if (self._readyCalled) {\n    return;\n  }\n  self._readyCalled = true;\n\n  function onDestroy() {\n    self.cancel();\n  }\n  src.once('destroyed', onDestroy);\n  target.once('destroyed', onDestroy);\n  function cleanup() {\n    src.removeListener('destroyed', onDestroy);\n    target.removeListener('destroyed', onDestroy);\n  }\n  self.once('complete', cleanup);\n};\n\nmodule.exports = Replication;\n},{\"./../utils\":104,\"events\":9}],101:[function(require,module,exports){\n\"use strict\";\n\nvar PouchDB = require(\"./constructor\");\nvar utils = require('./utils');\nvar EE = require('events').EventEmitter;\nvar hasLocalStorage = require('./deps/env/hasLocalStorage');\n\nPouchDB.adapters = {};\nPouchDB.preferredAdapters = [];\n\nPouchDB.prefix = '_pouch_';\n\nvar eventEmitter = new EE();\n\nfunction setUpEventEmitter(Pouch) {\n  Object.keys(EE.prototype).forEach(function (key) {\n    if (typeof EE.prototype[key] === 'function') {\n      Pouch[key] = eventEmitter[key].bind(eventEmitter);\n    }\n  });\n\n  // these are created in constructor.js, and allow us to notify each DB with\n  // the same name that it was destroyed, via the constructor object\n  var destructionListeners = Pouch._destructionListeners = new utils.Map();\n  Pouch.on('destroyed', function onConstructorDestroyed(name) {\n    if (!destructionListeners.has(name)) {\n      return;\n    }\n    destructionListeners.get(name).forEach(function (callback) {\n      callback();\n    });\n    destructionListeners.delete(name);\n  });\n}\n\nsetUpEventEmitter(PouchDB);\n\nPouchDB.parseAdapter = function (name, opts) {\n  var match = name.match(/([a-z\\-]*):\\/\\/(.*)/);\n  var adapter, adapterName;\n  if (match) {\n    // the http adapter expects the fully qualified name\n    name = /http(s?)/.test(match[1]) ? match[1] + '://' + match[2] : match[2];\n    adapter = match[1];\n    if (!PouchDB.adapters[adapter].valid()) {\n      throw 'Invalid adapter';\n    }\n    return {name: name, adapter: match[1]};\n  }\n\n  // check for browsers that have been upgraded from websql-only to websql+idb\n  var skipIdb = 'idb' in PouchDB.adapters && 'websql' in PouchDB.adapters &&\n    hasLocalStorage() &&\n    localStorage['_pouch__websqldb_' + PouchDB.prefix + name];\n\n\n  if (opts.adapter) {\n    adapterName = opts.adapter;\n  } else if (typeof opts !== 'undefined' && opts.db) {\n    adapterName = 'leveldb';\n  } else { // automatically determine adapter\n    for (var i = 0; i < PouchDB.preferredAdapters.length; ++i) {\n      adapterName = PouchDB.preferredAdapters[i];\n      if (adapterName in PouchDB.adapters) {\n        if (skipIdb && adapterName === 'idb') {\n          // log it, because this can be confusing during development\n          console.log('PouchDB is downgrading \"' + name + '\" to WebSQL to' +\n            ' avoid data loss, because it was already opened with WebSQL.');\n          continue; // keep using websql to avoid user data loss\n        }\n        break;\n      }\n    }\n  }\n\n  adapter = PouchDB.adapters[adapterName];\n\n  // if adapter is invalid, then an error will be thrown later\n  var usePrefix = (adapter && 'use_prefix' in adapter) ?\n      adapter.use_prefix : true;\n\n  return {\n    name: usePrefix ? (PouchDB.prefix + name) : name,\n    adapter: adapterName\n  };\n};\n\nPouchDB.adapter = function (id, obj, addToPreferredAdapters) {\n  if (obj.valid()) {\n    PouchDB.adapters[id] = obj;\n    if (addToPreferredAdapters) {\n      PouchDB.preferredAdapters.push(id);\n    }\n  }\n};\n\nPouchDB.plugin = function (obj) {\n  Object.keys(obj).forEach(function (id) {\n    PouchDB.prototype[id] = obj[id];\n  });\n\n  return PouchDB;\n};\n\nPouchDB.defaults = function (defaultOpts) {\n  function PouchAlt(name, opts, callback) {\n    if (!(this instanceof PouchAlt)) {\n      return new PouchAlt(name, opts, callback);\n    }\n\n    if (typeof opts === 'function' || typeof opts === 'undefined') {\n      callback = opts;\n      opts = {};\n    }\n    if (name && typeof name === 'object') {\n      opts = name;\n      name = undefined;\n    }\n\n    opts = utils.extend({}, defaultOpts, opts);\n    PouchDB.call(this, name, opts, callback);\n  }\n\n  utils.inherits(PouchAlt, PouchDB);\n\n  setUpEventEmitter(PouchAlt);\n\n  PouchAlt.preferredAdapters = PouchDB.preferredAdapters.slice();\n  Object.keys(PouchDB).forEach(function (key) {\n    if (!(key in PouchAlt)) {\n      PouchAlt[key] = PouchDB[key];\n    }\n  });\n\n  return PouchAlt;\n};\n\nmodule.exports = PouchDB;\n\n},{\"./constructor\":31,\"./deps/env/hasLocalStorage\":64,\"./utils\":104,\"events\":9}],102:[function(require,module,exports){\n'use strict';\n\nvar utils = require('./utils');\nvar replication = require('./replicate');\nvar replicate = replication.replicate;\nvar EE = require('events').EventEmitter;\n\nutils.inherits(Sync, EE);\nmodule.exports = sync;\nfunction sync(src, target, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n  opts = utils.clone(opts);\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  src = replication.toPouch(src, opts);\n  target = replication.toPouch(target, opts);\n  return new Sync(src, target, opts, callback);\n}\n\nfunction Sync(src, target, opts, callback) {\n  var self = this;\n  this.canceled = false;\n\n  var optsPush = opts.push ? utils.extend({}, opts, opts.push) : opts;\n  var optsPull = opts.pull ? utils.extend({}, opts, opts.pull) : opts;\n\n  this.push = replicate(src, target, optsPush);\n  this.pull = replicate(target, src, optsPull);\n\n  this.pushPaused = true;\n  this.pullPaused = true;\n\n  function pullChange(change) {\n    self.emit('change', {\n      direction: 'pull',\n      change: change\n    });\n  }\n  function pushChange(change) {\n    self.emit('change', {\n      direction: 'push',\n      change: change\n    });\n  }\n  function pushDenied(doc) {\n    self.emit('denied', {\n      direction: 'push',\n      doc: doc\n    });\n  }\n  function pullDenied(doc) {\n    self.emit('denied', {\n      direction: 'pull',\n      doc: doc\n    });\n  }\n  function pushPaused() {\n    self.pushPaused = true;\n    if (self.pullPaused) {\n      self.emit('paused');\n    }\n  }\n  function pullPaused() {\n    self.pullPaused = true;\n    if (self.pushPaused) {\n      self.emit('paused');\n    }\n  }\n  function pushActive() {\n    self.pushPaused = false;\n    if (self.pullPaused) {\n      self.emit('active', {\n        direction: 'push'\n      });\n    }\n  }\n  function pullActive() {\n    self.pullPaused = false;\n    if (self.pushPaused) {\n      self.emit('active', {\n        direction: 'pull'\n      });\n    }\n  }\n\n  var removed = {};\n\n  function removeAll(type) { // type is 'push' or 'pull'\n    return function (event, func) {\n      var isChange = event === 'change' &&\n        (func === pullChange || func === pushChange);\n      var isDenied = event === 'denied' &&\n        (func === pullDenied || func === pushDenied);\n      var isPaused = event === 'paused' &&\n        (func === pullPaused || func === pushPaused);\n      var isActive = event === 'active' &&\n        (func === pullActive || func === pushActive);\n\n      if (isChange || isDenied || isPaused || isActive) {\n        if (!(event in removed)) {\n          removed[event] = {};\n        }\n        removed[event][type] = true;\n        if (Object.keys(removed[event]).length === 2) {\n          // both push and pull have asked to be removed\n          self.removeAllListeners(event);\n        }\n      }\n    };\n  }\n\n  if (opts.live) {\n    this.push.on('complete', self.pull.cancel.bind(self.pull));\n    this.pull.on('complete', self.push.cancel.bind(self.push));\n  }\n\n  this.on('newListener', function (event) {\n    if (event === 'change') {\n      self.pull.on('change', pullChange);\n      self.push.on('change', pushChange);\n    } else if (event === 'denied') {\n      self.pull.on('denied', pullDenied);\n      self.push.on('denied', pushDenied);\n    } else if (event === 'active') {\n      self.pull.on('active', pullActive);\n      self.push.on('active', pushActive);\n    } else if (event === 'paused') {\n      self.pull.on('paused', pullPaused);\n      self.push.on('paused', pushPaused);\n    }\n  });\n\n  this.on('removeListener', function (event) {\n    if (event === 'change') {\n      self.pull.removeListener('change', pullChange);\n      self.push.removeListener('change', pushChange);\n    } else if (event === 'denied') {\n      self.pull.removeListener('denied', pullDenied);\n      self.push.removeListener('denied', pushDenied);\n    } else if (event === 'active') {\n      self.pull.removeListener('active', pullActive);\n      self.push.removeListener('active', pushActive);\n    } else if (event === 'paused') {\n      self.pull.removeListener('paused', pullPaused);\n      self.push.removeListener('paused', pushPaused);\n    }\n  });\n\n  this.pull.on('removeListener', removeAll('pull'));\n  this.push.on('removeListener', removeAll('push'));\n\n  var promise = utils.Promise.all([\n    this.push,\n    this.pull\n  ]).then(function (resp) {\n    var out = {\n      push: resp[0],\n      pull: resp[1]\n    };\n    self.emit('complete', out);\n    if (callback) {\n      callback(null, out);\n    }\n    self.removeAllListeners();\n    return out;\n  }, function (err) {\n    self.cancel();\n    if (callback) {\n      // if there's a callback, then the callback can receive\n      // the error event\n      callback(err);\n    } else {\n      // if there's no callback, then we're safe to emit an error\n      // event, which would otherwise throw an unhandled error\n      // due to 'error' being a special event in EventEmitters\n      self.emit('error', err);\n    }\n    self.removeAllListeners();\n    if (callback) {\n      // no sense throwing if we're already emitting an 'error' event\n      throw err;\n    }\n  });\n\n  this.then = function (success, err) {\n    return promise.then(success, err);\n  };\n\n  this.catch = function (err) {\n    return promise.catch(err);\n  };\n}\n\nSync.prototype.cancel = function () {\n  if (!this.canceled) {\n    this.canceled = true;\n    this.push.cancel();\n    this.pull.cancel();\n  }\n};\n\n},{\"./replicate\":98,\"./utils\":104,\"events\":9}],103:[function(require,module,exports){\n'use strict';\n\nmodule.exports = TaskQueue;\n\nfunction TaskQueue() {\n  this.isReady = false;\n  this.failed = false;\n  this.queue = [];\n}\n\nTaskQueue.prototype.execute = function () {\n  var fun;\n  if (this.failed) {\n    while ((fun = this.queue.shift())) {\n      fun(this.failed);\n    }\n  } else {\n    while ((fun = this.queue.shift())) {\n      fun();\n    }\n  }\n};\n\nTaskQueue.prototype.fail = function (err) {\n  this.failed = err;\n  this.execute();\n};\n\nTaskQueue.prototype.ready = function (db) {\n  this.isReady = true;\n  this.db = db;\n  this.execute();\n};\n\nTaskQueue.prototype.addTask = function (fun) {\n  this.queue.push(fun);\n  if (this.failed) {\n    this.execute();\n  }\n};\n\n},{}],104:[function(require,module,exports){\n/*jshint strict: false */\nvar traverseRevTree = require('./deps/merge/traverseRevTree');\nexports.ajax = require('./deps/ajax/prequest');\nexports.uuid = require('./deps/uuid');\nexports.getArguments = require('argsarray');\nvar collections = require('pouchdb-collections');\nexports.Map = collections.Map;\nexports.Set = collections.Set;\nvar parseDoc = require('./deps/docs/parseDoc');\n\nvar Promise = require('./deps/promise');\nexports.Promise = Promise;\n\nvar base64 = require('./deps/binary/base64');\nvar errors = require('./deps/errors');\n\n// TODO: don't export these\nexports.atob = base64.atob;\nexports.btoa = base64.btoa;\n\nvar binStringToBlobOrBuffer =\n  require('./deps/binary/binaryStringToBlobOrBuffer');\n\n// TODO: only used by the integration tests\nexports.binaryStringToBlobOrBuffer = binStringToBlobOrBuffer;\n\nexports.clone = require('./deps/clone');\nexports.extend = require('./deps/extend');\n\nexports.pick = require('./deps/pick');\nexports.inherits = require('inherits');\n\nfunction tryFilter(filter, doc, req) {\n  try {\n    return !filter(doc, req);\n  } catch (err) {\n    var msg = 'Filter function threw: ' + err.toString();\n    return errors.error(errors.BAD_REQUEST, msg);\n  }\n}\n\nexports.filterChange = function filterChange(opts) {\n  var req = {};\n  var hasFilter = opts.filter && typeof opts.filter === 'function';\n  req.query = opts.query_params;\n\n  return function filter(change) {\n    if (!change.doc) {\n      // CSG sends events on the changes feed that don't have documents,\n      // this hack makes a whole lot of existing code robust.\n      change.doc = {};\n    }\n\n    var filterReturn = hasFilter && tryFilter(opts.filter, change.doc, req);\n\n    if (typeof filterReturn === 'object') {\n      return filterReturn;\n    }\n\n    if (filterReturn) {\n      return false;\n    }\n\n    if (!opts.include_docs) {\n      delete change.doc;\n    } else if (!opts.attachments) {\n      for (var att in change.doc._attachments) {\n        /* istanbul ignore else */\n        if (change.doc._attachments.hasOwnProperty(att)) {\n          change.doc._attachments[att].stub = true;\n        }\n      }\n    }\n    return true;\n  };\n};\n\nexports.parseDoc = parseDoc.parseDoc;\nexports.invalidIdError = parseDoc.invalidIdError;\n\nexports.isCordova = function () {\n  return (typeof cordova !== \"undefined\" ||\n          typeof PhoneGap !== \"undefined\" ||\n          typeof phonegap !== \"undefined\");\n};\n\nexports.Changes = require('./changesHandler');\n\nexports.once = require('./deps/once');\n\nexports.toPromise = require('./deps/toPromise');\n\nexports.adapterFun = function (name, callback) {\n  var log = require('debug')('pouchdb:api');\n\n  function logApiCall(self, name, args) {\n    /* istanbul ignore if */\n    if (log.enabled) {\n      var logArgs = [self._db_name, name];\n      for (var i = 0; i < args.length - 1; i++) {\n        logArgs.push(args[i]);\n      }\n      log.apply(null, logArgs);\n\n      // override the callback itself to log the response\n      var origCallback = args[args.length - 1];\n      args[args.length - 1] = function (err, res) {\n        var responseArgs = [self._db_name, name];\n        responseArgs = responseArgs.concat(\n          err ? ['error', err] : ['success', res]\n        );\n        log.apply(null, responseArgs);\n        origCallback(err, res);\n      };\n    }\n  }\n\n  return exports.toPromise(exports.getArguments(function (args) {\n    if (this._closed) {\n      return Promise.reject(new Error('database is closed'));\n    }\n    var self = this;\n    logApiCall(self, name, args);\n    if (!this.taskqueue.isReady) {\n      return new Promise(function (fulfill, reject) {\n        self.taskqueue.addTask(function (failed) {\n          if (failed) {\n            reject(failed);\n          } else {\n            fulfill(self[name].apply(self, args));\n          }\n        });\n      });\n    }\n    return callback.apply(this, args);\n  }));\n};\n\nexports.explain404 = require('./deps/ajax/explain404');\n\nexports.parseUri = require('./deps/parseUri');\n\nexports.compare = function (left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n};\n\n\n// compact a tree by marking its non-leafs as missing,\n// and return a list of revs to delete\nexports.compactTree = function compactTree(metadata) {\n  var revs = [];\n  traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                     revHash, ctx, opts) {\n    if (opts.status === 'available' && !isLeaf) {\n      revs.push(pos + '-' + revHash);\n      opts.status = 'missing';\n    }\n  });\n  return revs;\n};\n\nvar vuvuzela = require('vuvuzela');\n\nexports.safeJsonParse = function safeJsonParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    return vuvuzela.parse(str);\n  }\n};\n\nexports.safeJsonStringify = function safeJsonStringify(json) {\n  try {\n    return JSON.stringify(json);\n  } catch (e) {\n    return vuvuzela.stringify(json);\n  }\n};\n\n},{\"./changesHandler\":30,\"./deps/ajax/explain404\":37,\"./deps/ajax/prequest\":40,\"./deps/binary/base64\":43,\"./deps/binary/binaryStringToBlobOrBuffer\":46,\"./deps/clone\":55,\"./deps/docs/parseDoc\":60,\"./deps/errors\":66,\"./deps/extend\":67,\"./deps/merge/traverseRevTree\":75,\"./deps/once\":77,\"./deps/parseUri\":79,\"./deps/pick\":80,\"./deps/promise\":81,\"./deps/toPromise\":82,\"./deps/uuid\":84,\"argsarray\":6,\"debug\":7,\"inherits\":10,\"pouchdb-collections\":14,\"vuvuzela\":110}],105:[function(require,module,exports){\nmodule.exports = \"5.0.0\";\n\n},{}],106:[function(require,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],107:[function(require,module,exports){\n'use strict';\nvar immediate = require('immediate');\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\nvar UNHANDLED;\n\nmodule.exports = exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && typeof obj === 'object' && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nexports.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nexports.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nexports.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nexports.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"immediate\":106}],108:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],109:[function(require,module,exports){\n/*jshint bitwise:false*/\n/*global unescape*/\n\n(function (factory) {\n    if (typeof exports === 'object') {\n        // Node/CommonJS\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(factory);\n    } else {\n        // Browser globals (with support for web workers)\n        var glob;\n        try {\n            glob = window;\n        } catch (e) {\n            glob = self;\n        }\n\n        glob.SparkMD5 = factory();\n    }\n}(function (undefined) {\n\n    'use strict';\n\n    ////////////////////////////////////////////////////////////////////////////\n\n    /*\n     * Fastest md5 implementation around (JKM md5)\n     * Credits: Joseph Myers\n     *\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n     * @see http://jsperf.com/md5-shootout/7\n     */\n\n    /* this function is much faster,\n      so if possible we use it. Some IEs\n      are the only ones I know of that\n      need the idiotic second function,\n      generated by an if clause.  */\n    var add32 = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    },\n\n    cmn = function (q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32((a << s) | (a >>> (32 - s)), b);\n    },\n\n    ff = function (a, b, c, d, x, s, t) {\n        return cmn((b & c) | ((~b) & d), a, b, x, s, t);\n    },\n\n    gg = function (a, b, c, d, x, s, t) {\n        return cmn((b & d) | (c & (~d)), a, b, x, s, t);\n    },\n\n    hh = function (a, b, c, d, x, s, t) {\n        return cmn(b ^ c ^ d, a, b, x, s, t);\n    },\n\n    ii = function (a, b, c, d, x, s, t) {\n        return cmn(c ^ (b | (~d)), a, b, x, s, t);\n    },\n\n    md5cycle = function (x, k) {\n        var a = x[0],\n            b = x[1],\n            c = x[2],\n            d = x[3];\n\n        a = ff(a, b, c, d, k[0], 7, -680876936);\n        d = ff(d, a, b, c, k[1], 12, -389564586);\n        c = ff(c, d, a, b, k[2], 17, 606105819);\n        b = ff(b, c, d, a, k[3], 22, -1044525330);\n        a = ff(a, b, c, d, k[4], 7, -176418897);\n        d = ff(d, a, b, c, k[5], 12, 1200080426);\n        c = ff(c, d, a, b, k[6], 17, -1473231341);\n        b = ff(b, c, d, a, k[7], 22, -45705983);\n        a = ff(a, b, c, d, k[8], 7, 1770035416);\n        d = ff(d, a, b, c, k[9], 12, -1958414417);\n        c = ff(c, d, a, b, k[10], 17, -42063);\n        b = ff(b, c, d, a, k[11], 22, -1990404162);\n        a = ff(a, b, c, d, k[12], 7, 1804603682);\n        d = ff(d, a, b, c, k[13], 12, -40341101);\n        c = ff(c, d, a, b, k[14], 17, -1502002290);\n        b = ff(b, c, d, a, k[15], 22, 1236535329);\n\n        a = gg(a, b, c, d, k[1], 5, -165796510);\n        d = gg(d, a, b, c, k[6], 9, -1069501632);\n        c = gg(c, d, a, b, k[11], 14, 643717713);\n        b = gg(b, c, d, a, k[0], 20, -373897302);\n        a = gg(a, b, c, d, k[5], 5, -701558691);\n        d = gg(d, a, b, c, k[10], 9, 38016083);\n        c = gg(c, d, a, b, k[15], 14, -660478335);\n        b = gg(b, c, d, a, k[4], 20, -405537848);\n        a = gg(a, b, c, d, k[9], 5, 568446438);\n        d = gg(d, a, b, c, k[14], 9, -1019803690);\n        c = gg(c, d, a, b, k[3], 14, -187363961);\n        b = gg(b, c, d, a, k[8], 20, 1163531501);\n        a = gg(a, b, c, d, k[13], 5, -1444681467);\n        d = gg(d, a, b, c, k[2], 9, -51403784);\n        c = gg(c, d, a, b, k[7], 14, 1735328473);\n        b = gg(b, c, d, a, k[12], 20, -1926607734);\n\n        a = hh(a, b, c, d, k[5], 4, -378558);\n        d = hh(d, a, b, c, k[8], 11, -2022574463);\n        c = hh(c, d, a, b, k[11], 16, 1839030562);\n        b = hh(b, c, d, a, k[14], 23, -35309556);\n        a = hh(a, b, c, d, k[1], 4, -1530992060);\n        d = hh(d, a, b, c, k[4], 11, 1272893353);\n        c = hh(c, d, a, b, k[7], 16, -155497632);\n        b = hh(b, c, d, a, k[10], 23, -1094730640);\n        a = hh(a, b, c, d, k[13], 4, 681279174);\n        d = hh(d, a, b, c, k[0], 11, -358537222);\n        c = hh(c, d, a, b, k[3], 16, -722521979);\n        b = hh(b, c, d, a, k[6], 23, 76029189);\n        a = hh(a, b, c, d, k[9], 4, -640364487);\n        d = hh(d, a, b, c, k[12], 11, -421815835);\n        c = hh(c, d, a, b, k[15], 16, 530742520);\n        b = hh(b, c, d, a, k[2], 23, -995338651);\n\n        a = ii(a, b, c, d, k[0], 6, -198630844);\n        d = ii(d, a, b, c, k[7], 10, 1126891415);\n        c = ii(c, d, a, b, k[14], 15, -1416354905);\n        b = ii(b, c, d, a, k[5], 21, -57434055);\n        a = ii(a, b, c, d, k[12], 6, 1700485571);\n        d = ii(d, a, b, c, k[3], 10, -1894986606);\n        c = ii(c, d, a, b, k[10], 15, -1051523);\n        b = ii(b, c, d, a, k[1], 21, -2054922799);\n        a = ii(a, b, c, d, k[8], 6, 1873313359);\n        d = ii(d, a, b, c, k[15], 10, -30611744);\n        c = ii(c, d, a, b, k[6], 15, -1560198380);\n        b = ii(b, c, d, a, k[13], 21, 1309151649);\n        a = ii(a, b, c, d, k[4], 6, -145523070);\n        d = ii(d, a, b, c, k[11], 10, -1120210379);\n        c = ii(c, d, a, b, k[2], 15, 718787259);\n        b = ii(b, c, d, a, k[9], 21, -343485551);\n\n        x[0] = add32(a, x[0]);\n        x[1] = add32(b, x[1]);\n        x[2] = add32(c, x[2]);\n        x[3] = add32(d, x[3]);\n    },\n\n    /* there needs to be support for Unicode here,\n       * unless we pretend that we can redefine the MD-5\n       * algorithm for multi-byte characters (perhaps\n       * by adding every four 16-bit characters and\n       * shortening the sum to 32 bits). Otherwise\n       * I suggest performing MD-5 as if every character\n       * was two bytes--e.g., 0040 0025 = @%--but then\n       * how will an ordinary MD-5 sum be matched?\n       * There is no way to standardize text to something\n       * like UTF-8 before transformation; speed cost is\n       * utterly prohibitive. The JavaScript standard\n       * itself needs to look at this: it should start\n       * providing access to strings as preformed UTF-8\n       * 8-bit unsigned value arrays.\n       */\n    md5blk = function (s) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    },\n\n    md5blk_array = function (a) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n    },\n\n    md51 = function (s) {\n        var n = s.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n        return state;\n    },\n\n    md51_array = function (a) {\n        var n = a.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    },\n\n    hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'],\n\n    rhex = function (n) {\n        var s = '',\n            j;\n        for (j = 0; j < 4; j += 1) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    },\n\n    hex = function (x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n            x[i] = rhex(x[i]);\n        }\n        return x.join('');\n    },\n\n    md5 = function (s) {\n        return hex(md51(s));\n    },\n\n\n\n    ////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * SparkMD5 OOP implementation.\n     *\n     * Use this class to perform an incremental md5, otherwise use the\n     * static methods instead.\n     */\n    SparkMD5 = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n\n    // In some cases the fast add32 function cannot be used..\n    if (md5('hello') !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function (x, y) {\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xFFFF);\n        };\n    }\n\n\n    /**\n     * Appends a string.\n     * A conversion will be applied if an utf8 string is detected.\n     *\n     * @param {String} str The string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.append = function (str) {\n        // converts the string to utf8 bytes if necessary\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        // then append as binary\n        this.appendBinary(str);\n\n        return this;\n    };\n\n    /**\n     * Appends a binary string.\n     *\n     * @param {String} contents The binary string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n\n        var length = this._buff.length,\n            i;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._state, md5blk(this._buff.substring(i - 64, i)));\n        }\n\n        this._buff = this._buff.substr(i - 64);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     * Use the raw parameter to obtain the raw result instead of the hex one.\n     *\n     * @param {Boolean} raw True to get the raw result, false to get the hex result\n     *\n     * @return {String|Array} The result\n     */\n    SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            i,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = !!raw ? this._state : hex(this._state);\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Finish the final calculation based on the tail.\n     *\n     * @param {Array}  tail   The tail (will be modified)\n     * @param {Number} length The length of the remaining buffer\n     */\n    SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n            tmp,\n            lo,\n            hi;\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(this._state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._state, tail);\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.reset = function () {\n        this._buff = \"\";\n        this._length = 0;\n        this._state = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other aditional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.prototype.destroy = function () {\n        delete this._state;\n        delete this._buff;\n        delete this._length;\n    };\n\n\n    /**\n     * Performs the md5 hash on a string.\n     * A conversion will be applied if utf8 string is detected.\n     *\n     * @param {String}  str The string\n     * @param {Boolean} raw True to get the raw result, false to get the hex result\n     *\n     * @return {String|Array} The result\n     */\n    SparkMD5.hash = function (str, raw) {\n        // converts the string to utf8 bytes if necessary\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        var hash = md51(str);\n\n        return !!raw ? hash : hex(hash);\n    };\n\n    /**\n     * Performs the md5 hash on a binary string.\n     *\n     * @param {String}  content The binary string\n     * @param {Boolean} raw     True to get the raw result, false to get the hex result\n     *\n     * @return {String|Array} The result\n     */\n    SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content);\n\n        return !!raw ? hash : hex(hash);\n    };\n\n    /**\n     * SparkMD5 OOP implementation for array buffers.\n     *\n     * Use this class to perform an incremental md5 ONLY for array buffers.\n     */\n    SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n    ////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Appends an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array to be appended\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        // TODO: we could avoid the concatenation here but the algorithm would be more complex\n        //       if you find yourself needing extra performance, please make a PR.\n        var buff = this._concatArrayBuffer(this._buff, arr),\n            length = buff.length,\n            i;\n\n        this._length += arr.byteLength;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._state, md5blk_array(buff.subarray(i - 64, i)));\n        }\n\n        // Avoids IE10 weirdness (documented above)\n        this._buff = (i - 64) < length ? buff.subarray(i - 64) : new Uint8Array(0);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     * Use the raw parameter to obtain the raw result instead of the hex one.\n     *\n     * @param {Boolean} raw True to get the raw result, false to get the hex result\n     *\n     * @return {String|Array} The result\n     */\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            i,\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = !!raw ? this._state : hex(this._state);\n\n        this.reset();\n\n        return ret;\n    };\n\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._state = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other aditional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n    /**\n     * Concats two array buffers, returning a new one.\n     *\n     * @param  {ArrayBuffer} first  The first array buffer\n     * @param  {ArrayBuffer} second The second array buffer\n     *\n     * @return {ArrayBuffer} The new array buffer\n     */\n    SparkMD5.ArrayBuffer.prototype._concatArrayBuffer = function (first, second) {\n        var firstLength = first.length,\n            result = new Uint8Array(firstLength + second.byteLength);\n\n        result.set(first);\n        result.set(new Uint8Array(second), firstLength);\n\n        return result;\n    };\n\n    /**\n     * Performs the md5 hash on an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array buffer\n     * @param {Boolean}     raw True to get the raw result, false to get the hex result\n     *\n     * @return {String|Array} The result\n     */\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr));\n\n        return !!raw ? hash : hex(hash);\n    };\n\n    return SparkMD5;\n}));\n\n},{}],110:[function(require,module,exports){\n'use strict';\n\n/**\n * Stringify/parse functions that don't operate\n * recursively, so they avoid call stack exceeded\n * errors.\n */\nexports.stringify = function stringify(input) {\n  var queue = [];\n  queue.push({obj: input});\n\n  var res = '';\n  var next, obj, prefix, val, i, arrayPrefix, keys, k, key, value, objPrefix;\n  while ((next = queue.pop())) {\n    obj = next.obj;\n    prefix = next.prefix || '';\n    val = next.val || '';\n    res += prefix;\n    if (val) {\n      res += val;\n    } else if (typeof obj !== 'object') {\n      res += typeof obj === 'undefined' ? null : JSON.stringify(obj);\n    } else if (obj === null) {\n      res += 'null';\n    } else if (Array.isArray(obj)) {\n      queue.push({val: ']'});\n      for (i = obj.length - 1; i >= 0; i--) {\n        arrayPrefix = i === 0 ? '' : ',';\n        queue.push({obj: obj[i], prefix: arrayPrefix});\n      }\n      queue.push({val: '['});\n    } else { // object\n      keys = [];\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          keys.push(k);\n        }\n      }\n      queue.push({val: '}'});\n      for (i = keys.length - 1; i >= 0; i--) {\n        key = keys[i];\n        value = obj[key];\n        objPrefix = (i > 0 ? ',' : '');\n        objPrefix += JSON.stringify(key) + ':';\n        queue.push({obj: value, prefix: objPrefix});\n      }\n      queue.push({val: '{'});\n    }\n  }\n  return res;\n};\n\n// Convenience function for the parse function.\n// This pop function is basically copied from\n// pouchCollate.parseIndexableString\nfunction pop(obj, stack, metaStack) {\n  var lastMetaElement = metaStack[metaStack.length - 1];\n  if (obj === lastMetaElement.element) {\n    // popping a meta-element, e.g. an object whose value is another object\n    metaStack.pop();\n    lastMetaElement = metaStack[metaStack.length - 1];\n  }\n  var element = lastMetaElement.element;\n  var lastElementIndex = lastMetaElement.index;\n  if (Array.isArray(element)) {\n    element.push(obj);\n  } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n    var key = stack.pop();\n    element[key] = obj;\n  } else {\n    stack.push(obj); // obj with key only\n  }\n}\n\nexports.parse = function (str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n  var collationIndex,parsedNum,numChar;\n  var parsedString,lastCh,numConsecutiveSlashes,ch;\n  var arrayElement, objElement;\n  while (true) {\n    collationIndex = str[i++];\n    if (collationIndex === '}' ||\n        collationIndex === ']' ||\n        typeof collationIndex === 'undefined') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack.pop(), stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case ' ':\n      case '\\t':\n      case '\\n':\n      case ':':\n      case ',':\n        break;\n      case 'n':\n        i += 3; // 'ull'\n        pop(null, stack, metaStack);\n        break;\n      case 't':\n        i += 3; // 'rue'\n        pop(true, stack, metaStack);\n        break;\n      case 'f':\n        i += 4; // 'alse'\n        pop(false, stack, metaStack);\n        break;\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '-':\n        parsedNum = '';\n        i--;\n        while (true) {\n          numChar = str[i++];\n          if (/[\\d\\.\\-e\\+]/.test(numChar)) {\n            parsedNum += numChar;\n          } else {\n            i--;\n            break;\n          }\n        }\n        pop(parseFloat(parsedNum), stack, metaStack);\n        break;\n      case '\"':\n        parsedString = '';\n        lastCh = void 0;\n        numConsecutiveSlashes = 0;\n        while (true) {\n          ch = str[i++];\n          if (ch !== '\"' || (lastCh === '\\\\' &&\n              numConsecutiveSlashes % 2 === 1)) {\n            parsedString += ch;\n            lastCh = ch;\n            if (lastCh === '\\\\') {\n              numConsecutiveSlashes++;\n            } else {\n              numConsecutiveSlashes = 0;\n            }\n          } else {\n            break;\n          }\n        }\n        pop(JSON.parse('\"' + parsedString + '\"'), stack, metaStack);\n        break;\n      case '[':\n        arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '{':\n        objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      default:\n        throw new Error(\n          'unexpectedly reached end of input: ' + collationIndex);\n    }\n  }\n};\n\n},{}]},{},[2]);\n";
},{}],10:[function(_dereq_,module,exports){function useColors(){return"WebkitAppearance"in document.documentElement.style||window.console&&(console.firebug||console.exception&&console.table)||navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31}function formatArgs(){var args=arguments,useColors=this.useColors;if(args[0]=(useColors?"%c":"")+this.namespace+(useColors?" %c":" ")+args[0]+(useColors?"%c ":" ")+"+"+exports.humanize(this.diff),!useColors)return args;var c="color: "+this.color;args=[args[0],c,"color: inherit"].concat(Array.prototype.slice.call(args,1));var index=0,lastC=0;return args[0].replace(/%[a-z%]/g,function(match){"%%"!==match&&(index++,"%c"===match&&(lastC=index))}),args.splice(lastC,0,c),args}function log(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)}function save(namespaces){try{null==namespaces?exports.storage.removeItem("debug"):exports.storage.debug=namespaces}catch(e){}}function load(){var r;try{r=exports.storage.debug}catch(e){}return r}function localstorage(){try{return window.localStorage}catch(e){}}exports=module.exports=_dereq_(11),exports.log=log,exports.formatArgs=formatArgs,exports.save=save,exports.load=load,exports.useColors=useColors,exports.storage="undefined"!=typeof chrome&&"undefined"!=typeof chrome.storage?chrome.storage.local:localstorage(),exports.colors=["lightseagreen","forestgreen","goldenrod","dodgerblue","darkorchid","crimson"],exports.formatters.j=function(v){return JSON.stringify(v)},exports.enable(load())},{11:11}],11:[function(_dereq_,module,exports){function selectColor(){return exports.colors[prevColor++%exports.colors.length]}function debug(namespace){function disabled(){}function enabled(){var self=enabled,curr=+new Date,ms=curr-(prevTime||curr);self.diff=ms,self.prev=prevTime,self.curr=curr,prevTime=curr,null==self.useColors&&(self.useColors=exports.useColors()),null==self.color&&self.useColors&&(self.color=selectColor());var args=Array.prototype.slice.call(arguments);args[0]=exports.coerce(args[0]),"string"!=typeof args[0]&&(args=["%o"].concat(args));var index=0;args[0]=args[0].replace(/%([a-z%])/g,function(match,format){if("%%"===match)return match;index++;var formatter=exports.formatters[format];if("function"==typeof formatter){var val=args[index];match=formatter.call(self,val),args.splice(index,1),index--}return match}),"function"==typeof exports.formatArgs&&(args=exports.formatArgs.apply(self,args));var logFn=enabled.log||exports.log||console.log.bind(console);logFn.apply(self,args)}disabled.enabled=!1,enabled.enabled=!0;var fn=exports.enabled(namespace)?enabled:disabled;return fn.namespace=namespace,fn}function enable(namespaces){exports.save(namespaces);for(var split=(namespaces||"").split(/[\s,]+/),len=split.length,i=0;len>i;i++)split[i]&&(namespaces=split[i].replace(/\*/g,".*?"),"-"===namespaces[0]?exports.skips.push(new RegExp("^"+namespaces.substr(1)+"$")):exports.names.push(new RegExp("^"+namespaces+"$")))}function disable(){exports.enable("")}function enabled(name){var i,len;for(i=0,len=exports.skips.length;len>i;i++)if(exports.skips[i].test(name))return!1;for(i=0,len=exports.names.length;len>i;i++)if(exports.names[i].test(name))return!0;return!1}function coerce(val){return val instanceof Error?val.stack||val.message:val}exports=module.exports=debug,exports.coerce=coerce,exports.disable=disable,exports.enable=enable,exports.enabled=enabled,exports.humanize=_dereq_(13),exports.names=[],exports.skips=[],exports.formatters={};var prevTime,prevColor=0},{13:13}],12:[function(_dereq_,module,exports){"function"==typeof Object.create?module.exports=function(ctor,superCtor){ctor.super_=superCtor,ctor.prototype=Object.create(superCtor.prototype,{constructor:{value:ctor,enumerable:!1,writable:!0,configurable:!0}})}:module.exports=function(ctor,superCtor){ctor.super_=superCtor;var TempCtor=function(){};TempCtor.prototype=superCtor.prototype,ctor.prototype=new TempCtor,ctor.prototype.constructor=ctor}},{}],13:[function(_dereq_,module,exports){function parse(str){if(str=""+str,!(str.length>1e4)){var match=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);if(match){var n=parseFloat(match[1]),type=(match[2]||"ms").toLowerCase();switch(type){case"years":case"year":case"yrs":case"yr":case"y":return n*y;case"days":case"day":case"d":return n*d;case"hours":case"hour":case"hrs":case"hr":case"h":return n*h;case"minutes":case"minute":case"mins":case"min":case"m":return n*m;case"seconds":case"second":case"secs":case"sec":case"s":return n*s;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return n}}}}function short(ms){return ms>=d?Math.round(ms/d)+"d":ms>=h?Math.round(ms/h)+"h":ms>=m?Math.round(ms/m)+"m":ms>=s?Math.round(ms/s)+"s":ms+"ms"}function long(ms){return plural(ms,d,"day")||plural(ms,h,"hour")||plural(ms,m,"minute")||plural(ms,s,"second")||ms+" ms"}function plural(ms,n,name){return n>ms?void 0:1.5*n>ms?Math.floor(ms/n)+" "+name:Math.ceil(ms/n)+" "+name+"s"}var s=1e3,m=60*s,h=60*m,d=24*h,y=365.25*d;module.exports=function(val,options){return options=options||{},"string"==typeof val?parse(val):options["long"]?long(val):short(val)}},{}],14:[function(_dereq_,module,exports){(function(global){"use strict";function createBlob(parts,properties){parts=parts||[],properties=properties||{};try{return new Blob(parts,properties)}catch(e){if("TypeError"!==e.name)throw e;for(var BlobBuilder=global.BlobBuilder||global.MSBlobBuilder||global.MozBlobBuilder||global.WebKitBlobBuilder,builder=new BlobBuilder,i=0;i<parts.length;i+=1)builder.append(parts[i]);return builder.getBlob(properties.type)}}function arrayBufferToBinaryString(buffer){for(var binary="",bytes=new Uint8Array(buffer),length=bytes.byteLength,i=0;length>i;i++)binary+=String.fromCharCode(bytes[i]);return binary}function binaryStringToArrayBuffer(bin){for(var length=bin.length,buf=new ArrayBuffer(length),arr=new Uint8Array(buf),i=0;length>i;i++)arr[i]=bin.charCodeAt(i);return buf}function readAsBinaryString(blob,callback){var reader=new FileReader,hasBinaryString="function"==typeof reader.readAsBinaryString;reader.onloadend=function(e){var result=e.target.result||"";return hasBinaryString?callback(result):void callback(arrayBufferToBinaryString(result))},hasBinaryString?reader.readAsBinaryString(blob):reader.readAsArrayBuffer(blob)}function readAsArrayBuffer(blob,callback){var reader=new FileReader;reader.onloadend=function(e){var result=e.target.result||new ArrayBuffer(0);callback(result)},reader.readAsArrayBuffer(blob)}module.exports={createBlob:createBlob,readAsArrayBuffer:readAsArrayBuffer,readAsBinaryString:readAsBinaryString,binaryStringToArrayBuffer:binaryStringToArrayBuffer,arrayBufferToBinaryString:arrayBufferToBinaryString}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],15:[function(_dereq_,module,exports){"use strict";module.exports=_dereq_(16)},{16:16}],16:[function(_dereq_,module,exports){"use strict";module.exports="function"==typeof Promise?Promise:_dereq_(18)},{18:18}],17:[function(_dereq_,module,exports){(function(global){"use strict";function nextTick(){draining=!0;for(var i,oldQueue,len=queue.length;len;){for(oldQueue=queue,queue=[],i=-1;++i<len;)oldQueue[i]();len=queue.length}draining=!1}function immediate(task){1!==queue.push(task)||draining||scheduleDrain()}var scheduleDrain,Mutation=global.MutationObserver||global.WebKitMutationObserver;if(Mutation){var called=0,observer=new Mutation(nextTick),element=global.document.createTextNode("");observer.observe(element,{characterData:!0}),scheduleDrain=function(){element.data=called=++called%2}}else if(global.setImmediate||"undefined"==typeof global.MessageChannel)scheduleDrain="document"in global&&"onreadystatechange"in global.document.createElement("script")?function(){var scriptEl=global.document.createElement("script");scriptEl.onreadystatechange=function(){nextTick(),scriptEl.onreadystatechange=null,scriptEl.parentNode.removeChild(scriptEl),scriptEl=null},global.document.documentElement.appendChild(scriptEl)}:function(){setTimeout(nextTick,0)};else{var channel=new global.MessageChannel;channel.port1.onmessage=nextTick,scheduleDrain=function(){channel.port2.postMessage(0)}}var draining,queue=[];module.exports=immediate}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],18:[function(_dereq_,module,exports){"use strict";function INTERNAL(){}function Promise(resolver){if("function"!=typeof resolver)throw new TypeError("resolver must be a function");this.state=PENDING,this.queue=[],this.outcome=void 0,resolver!==INTERNAL&&safelyResolveThenable(this,resolver)}function QueueItem(promise,onFulfilled,onRejected){this.promise=promise,"function"==typeof onFulfilled&&(this.onFulfilled=onFulfilled,this.callFulfilled=this.otherCallFulfilled),"function"==typeof onRejected&&(this.onRejected=onRejected,this.callRejected=this.otherCallRejected)}function unwrap(promise,func,value){immediate(function(){var returnValue;try{returnValue=func(value)}catch(e){return handlers.reject(promise,e)}returnValue===promise?handlers.reject(promise,new TypeError("Cannot resolve promise with itself")):handlers.resolve(promise,returnValue)})}function getThen(obj){var then=obj&&obj.then;return obj&&"object"==typeof obj&&"function"==typeof then?function(){then.apply(obj,arguments)}:void 0}function safelyResolveThenable(self,thenable){function onError(value){called||(called=!0,handlers.reject(self,value))}function onSuccess(value){called||(called=!0,handlers.resolve(self,value))}function tryToUnwrap(){thenable(onSuccess,onError)}var called=!1,result=tryCatch(tryToUnwrap);"error"===result.status&&onError(result.value)}function tryCatch(func,value){var out={};try{out.value=func(value),out.status="success"}catch(e){out.status="error",out.value=e}return out}function resolve(value){return value instanceof this?value:handlers.resolve(new this(INTERNAL),value)}function reject(reason){var promise=new this(INTERNAL);return handlers.reject(promise,reason)}function all(iterable){function allResolver(value,i){function resolveFromAll(outValue){values[i]=outValue,++resolved!==len||called||(called=!0,handlers.resolve(promise,values))}self.resolve(value).then(resolveFromAll,function(error){called||(called=!0,handlers.reject(promise,error))})}var self=this;if("[object Array]"!==Object.prototype.toString.call(iterable))return this.reject(new TypeError("must be an array"));var len=iterable.length,called=!1;if(!len)return this.resolve([]);for(var values=new Array(len),resolved=0,i=-1,promise=new this(INTERNAL);++i<len;)allResolver(iterable[i],i);return promise}function race(iterable){function resolver(value){self.resolve(value).then(function(response){called||(called=!0,handlers.resolve(promise,response))},function(error){called||(called=!0,handlers.reject(promise,error))})}var self=this;if("[object Array]"!==Object.prototype.toString.call(iterable))return this.reject(new TypeError("must be an array"));var len=iterable.length,called=!1;if(!len)return this.resolve([]);for(var i=-1,promise=new this(INTERNAL);++i<len;)resolver(iterable[i]);return promise}var immediate=_dereq_(17),handlers={},REJECTED=["REJECTED"],FULFILLED=["FULFILLED"],PENDING=["PENDING"];module.exports=exports=Promise,Promise.prototype["catch"]=function(onRejected){return this.then(null,onRejected)},Promise.prototype.then=function(onFulfilled,onRejected){if("function"!=typeof onFulfilled&&this.state===FULFILLED||"function"!=typeof onRejected&&this.state===REJECTED)return this;var promise=new this.constructor(INTERNAL);if(this.state!==PENDING){var resolver=this.state===FULFILLED?onFulfilled:onRejected;unwrap(promise,resolver,this.outcome)}else this.queue.push(new QueueItem(promise,onFulfilled,onRejected));return promise},QueueItem.prototype.callFulfilled=function(value){handlers.resolve(this.promise,value)},QueueItem.prototype.otherCallFulfilled=function(value){unwrap(this.promise,this.onFulfilled,value)},QueueItem.prototype.callRejected=function(value){handlers.reject(this.promise,value)},QueueItem.prototype.otherCallRejected=function(value){unwrap(this.promise,this.onRejected,value)},handlers.resolve=function(self,value){var result=tryCatch(getThen,value);if("error"===result.status)return handlers.reject(self,result.value);var thenable=result.value;if(thenable)safelyResolveThenable(self,thenable);else{self.state=FULFILLED,self.outcome=value;for(var i=-1,len=self.queue.length;++i<len;)self.queue[i].callFulfilled(value)}return self},handlers.reject=function(self,error){self.state=REJECTED,self.outcome=error;for(var i=-1,len=self.queue.length;++i<len;)self.queue[i].callRejected(error);return self},exports.resolve=resolve,exports.reject=reject,exports.all=all,exports.race=race},{17:17}],19:[function(_dereq_,module,exports){function drainQueue(){if(!draining){draining=!0;for(var currentQueue,len=queue.length;len;){currentQueue=queue,queue=[];for(var i=-1;++i<len;)currentQueue[i]();len=queue.length}draining=!1}}function noop(){}var process=module.exports={},queue=[],draining=!1;process.nextTick=function(fun){queue.push(fun),draining||setTimeout(drainQueue,0)},process.title="browser",process.browser=!0,process.env={},process.argv=[],process.version="",process.versions={},process.on=noop,process.addListener=noop,process.once=noop,process.off=noop,process.removeListener=noop,process.removeAllListeners=noop,process.emit=noop,process.binding=function(name){throw new Error("process.binding is not supported")},process.cwd=function(){return"/"},process.chdir=function(dir){throw new Error("process.chdir is not supported")},process.umask=function(){return 0}},{}],20:[function(_dereq_,module,exports){"use strict";module.exports=_dereq_(2)},{2:2}]},{},[20])(20)});
/*mev-domain-common@0.0.1#src/main/services/db/mevDb*/
define("mev-domain-common@0.0.1#src/main/services/db/mevDb",["lodash","pouchdb","worker-pouch"],function(_,PouchDB){"use strict";var service=function(mevContext,mevSettings,$q,$rootScope,$timeout){function ensureDataset(){var dataset=mevContext.get("dataset");if(!dataset)throw new Error("Could not locate dataset for current context: "+JSON.stringify(mevContext));return dataset}function getDataset(datasetId){if(mevSettings.db.enabled)return db.get(datasetId);var deferred=$q.defer();return deferred.reject({status:501,message:"Local db is disabled"}),deferred.promise}function putDataset(dataset,isRetry){return getDataset(dataset.id)["catch"](function(e){if(404===e.status)return delete dataset._rev,_.assign(dataset,{_id:dataset.id});throw e}).then(function(doc){dataset._id=dataset.id,dataset._rev=doc._rev;var clone=_.cloneDeep(dataset);return clone.$promise=void 0,clone._annotations=void 0,clone.values=[],clone.analyses=[],_firePutStarted(dataset.id,"dataset"),db.put(JSON.parse(JSON.stringify(clone))).then(function(){return _firePutCompleted(dataset.id,"dataset"),arguments[0]})["catch"](function(){return _firePutCompleted(dataset.id,"dataset"),arguments[0]})})["catch"](function(e){if(409===e.status)putDataset(dataset,!0);else{if(501!==e.status)throw console.error("Error saving dataset locally:",e,dataset),e;console.warn("Warning saving dataset locally",e)}})}function getDatasets(){return mevSettings.db.enabled?db.allDocs().then(function(result){return _.uniq(result.rows.filter(function(doc){return doc.id.indexOf("/values64")>-1}).map(function(doc){return doc.id.split("/")[0]}))}):$q.when([])}function formatDocId(path,datasetId){return datasetId=datasetId?datasetId:ensureDataset().id,path=_.isArray(path)?path.join("/"):path,datasetId+"/"+path}function _rejectDisabled(){var deferred=$q.defer();return deferred.reject({status:404,message:"Local db is disabled"}),deferred.promise}function getDatasetValues(datasetId){return mevSettings.db.enabled||_rejectDisabled(),db.getAttachment(formatDocId("values",datasetId),"all")}function getDatasetValues64(datasetId){return mevSettings.db.enabled||_rejectDisabled(),db.getAttachment(formatDocId("values64",datasetId),"chunk0")}function putDatasetValues(blob,datasetId){if(_firePutStarted(datasetId||ensureDataset().id,"values"),mevSettings.db.enabled){var doc={_id:formatDocId("values"),_attachments:{all:{data:blob,type:"application/octet-stream",content_type:"application/octet-stream"}}};db.put(doc).then(function(){_firePutCompleted(ensureDataset().id,"values")})["catch"](function(){_firePutCompleted(ensureDataset().id,"values")})}}function _getAllDatasetDocs(datasetId){return db.allDocs({startKey:datasetId,endKey:datasetId+"￿"}).then(function(docs){return _.remove(docs.rows,function(row){return row.id!==datasetId&&0!==row.id.indexOf(datasetId+"/")}),docs})}function deleteDataset(datasetId){return _getAllDatasetDocs(datasetId).then(function(docs){return db.bulkDocs(docs.rows.map(function(row){return{_id:row.id,_rev:row.value.rev,_deleted:!0}}))})}function getAnalyses(datasetId){return mevSettings.db.enabled?db.allDocs().then(function(result){return result.rows.filter(function(doc){return doc.id.indexOf(formatDocId(["analysis"],datasetId))>-1})}).then(function(docs){return docs.map(function(doc){return doc.id.replace(formatDocId(["analysis"],datasetId),"").replace("/","")})}):$q.when([])}function getAnalysesAll(datasetId){return getAnalyses(datasetId).then(function(analysisNames){return $q.all(analysisNames.map(getAnalysis.bind(null,datasetId)))})}function getAnalysis(datasetId,analysisId){return mevSettings.db.enabled?db.get(formatDocId(["analysis",analysisId],datasetId)):_rejectDisabled()}function putAnalysis(datasetId,analysis,isRetry){return mevSettings.db.enabled?(isRetry||$rootScope.$broadcast("mev:db:put:started",datasetId,analysis),getAnalysis(datasetId,analysis.name)["catch"](function(e){if(404===e.status)return delete analysis._rev,_.assign(analysis,{_id:formatDocId(["analysis",analysis.name],datasetId)});throw new Error("Error putting analysis"+JSON.stringify(e))}).then(function(doc){return analysis._rev=doc._rev,db.put(JSON.parse(JSON.stringify(analysis)))}).then(function(){$rootScope.$broadcast("mev:db:put:completed",datasetId,analysis)})["catch"](function(e){if(409!==e.status)throw console.error("Error saving analysis locally:",datasetId,analysis,e),e;putAnalysis(datasetId,analysis,!0)})):_rejectDisabled()}function deleteAnalysis(datasetId,analysisName){return getAnalysis(datasetId,analysisName).then(function(doc){return db.remove(doc)})}function _firePutStarted(dataset,item){$rootScope.$broadcast("mev:db:put:started",dataset,item)}function _firePutCompleted(dataset,item){$timeout(function(){$rootScope.$broadcast("mev:db:put:completed",dataset,item)})}function putAnnotations(datasetId,dimension,blob,isRetry){if(mevSettings.db.enabled){isRetry||_firePutStarted(datasetId,dimension);var annotation={_id:formatDocId(["annotations",dimension],datasetId),_attachments:{all:{data:blob,type:"application/octet-stream",content_type:"application/octet-stream"}}};db.get(formatDocId(["annotations",dimension],datasetId))["catch"](function(e){return 404===e.status?annotation:void 0}).then(function(doc){return annotation._rev=doc._rev,db.put(annotation)})["catch"](function(e){if(409!==e.status)throw e;putAnnotations(datasetId,dimension,blob,!0)}).then(_firePutCompleted.bind(_self,datasetId,dimension))["catch"](_firePutCompleted.bind(_self,datasetId,dimension))}}function getAnnotations(datasetId,dimension){return db.getAttachment(formatDocId(["annotations",dimension],datasetId),"all")}function getStatus(datasetId){var keys=datasetId?_.filter(_.keys(status),function(key){return 0===key.indexOf(datasetId)}):_.keys(status),msg="saved";return keys.length>0&&(msg=keys[0].replace(datasetId+":","")),msg}function _formatStatusKey(dataset,item){return dataset+":"+item}var _self=this,pouchdb=window&&window.PouchDB?window.PouchDB:PouchDB,db=new pouchdb("mev",{adapter:"worker"}),status={};return $rootScope.$on("mev:db:put:started",function(event,dataset,item){status[_formatStatusKey(dataset,item)]={dataset:dataset,item:item}}),$rootScope.$on("mev:db:put:completed",function(event,dataset,item){delete status[_formatStatusKey(dataset,item)]}),{getDataset:getDataset,putDataset:putDataset,deleteDataset:deleteDataset,getDatasets:getDatasets,getDatasetValues:getDatasetValues,putDatasetValues:putDatasetValues,getDatasetValues64:getDatasetValues64,getAnalysis:getAnalysis,putAnalysis:putAnalysis,getAnalyses:getAnalyses,getAnalysesAll:getAnalysesAll,deleteAnalysis:deleteAnalysis,putAnnotations:putAnnotations,getAnnotations:getAnnotations,getStatus:getStatus,firePutStarted:_firePutStarted,firePutCompleted:_firePutCompleted,onPutStarted:function(callback){$rootScope.$on("mev:db:put:started",callback)},onPutCmopleted:function(callback){$rootScope.$on("mev:db:put:cmopleted",callback)}}};return service.$name="mevDb",service.$provider="service",service.$inject=["mevContext","mevSettings","$q","$rootScope","$timeout"],service});
/*bowser@1.9.2#src/bowser*/
define("bowser@1.9.2#src/bowser",function(require,exports,module){!function(root,name,definition){"undefined"!=typeof module&&module.exports?module.exports=definition():"function"==typeof define&&define.amd?define(name,definition):root[name]=definition()}(this,"bowser",function(){function detect(ua){function getFirstMatch(regex){var match=ua.match(regex);return match&&match.length>1&&match[1]||""}function getSecondMatch(regex){var match=ua.match(regex);return match&&match.length>1&&match[2]||""}function getWindowsVersion(s){switch(s){case"NT":return"NT";case"XP":return"XP";case"NT 5.0":return"2000";case"NT 5.1":return"XP";case"NT 5.2":return"2003";case"NT 6.0":return"Vista";case"NT 6.1":return"7";case"NT 6.2":return"8";case"NT 6.3":return"8.1";case"NT 10.0":return"10";default:return void 0}}var result,iosdevice=getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase(),likeAndroid=/like android/i.test(ua),android=!likeAndroid&&/android/i.test(ua),nexusMobile=/nexus\s*[0-6]\s*/i.test(ua),nexusTablet=!nexusMobile&&/nexus\s*[0-9]+/i.test(ua),chromeos=/CrOS/.test(ua),silk=/silk/i.test(ua),sailfish=/sailfish/i.test(ua),tizen=/tizen/i.test(ua),webos=/(web|hpw)os/i.test(ua),windowsphone=/windows phone/i.test(ua),windows=(/SamsungBrowser/i.test(ua),!windowsphone&&/windows/i.test(ua)),mac=!iosdevice&&!silk&&/macintosh/i.test(ua),linux=!android&&!sailfish&&!tizen&&!webos&&/linux/i.test(ua),edgeVersion=getSecondMatch(/edg([ea]|ios)\/(\d+(\.\d+)?)/i),versionIdentifier=getFirstMatch(/version\/(\d+(\.\d+)?)/i),tablet=/tablet/i.test(ua)&&!/tablet pc/i.test(ua),mobile=!tablet&&/[^-]mobi/i.test(ua),xbox=/xbox/i.test(ua);/opera/i.test(ua)?result={name:"Opera",opera:t,version:versionIdentifier||getFirstMatch(/(?:opera|opr|opios)[\s\/](\d+(\.\d+)?)/i)}:/opr\/|opios/i.test(ua)?result={name:"Opera",opera:t,version:getFirstMatch(/(?:opr|opios)[\s\/](\d+(\.\d+)?)/i)||versionIdentifier}:/SamsungBrowser/i.test(ua)?result={name:"Samsung Internet for Android",samsungBrowser:t,version:versionIdentifier||getFirstMatch(/(?:SamsungBrowser)[\s\/](\d+(\.\d+)?)/i)}:/coast/i.test(ua)?result={name:"Opera Coast",coast:t,version:versionIdentifier||getFirstMatch(/(?:coast)[\s\/](\d+(\.\d+)?)/i)}:/yabrowser/i.test(ua)?result={name:"Yandex Browser",yandexbrowser:t,version:versionIdentifier||getFirstMatch(/(?:yabrowser)[\s\/](\d+(\.\d+)?)/i)}:/ucbrowser/i.test(ua)?result={name:"UC Browser",ucbrowser:t,version:getFirstMatch(/(?:ucbrowser)[\s\/](\d+(?:\.\d+)+)/i)}:/mxios/i.test(ua)?result={name:"Maxthon",maxthon:t,version:getFirstMatch(/(?:mxios)[\s\/](\d+(?:\.\d+)+)/i)}:/epiphany/i.test(ua)?result={name:"Epiphany",epiphany:t,version:getFirstMatch(/(?:epiphany)[\s\/](\d+(?:\.\d+)+)/i)}:/puffin/i.test(ua)?result={name:"Puffin",puffin:t,version:getFirstMatch(/(?:puffin)[\s\/](\d+(?:\.\d+)?)/i)}:/sleipnir/i.test(ua)?result={name:"Sleipnir",sleipnir:t,version:getFirstMatch(/(?:sleipnir)[\s\/](\d+(?:\.\d+)+)/i)}:/k-meleon/i.test(ua)?result={name:"K-Meleon",kMeleon:t,version:getFirstMatch(/(?:k-meleon)[\s\/](\d+(?:\.\d+)+)/i)}:windowsphone?(result={name:"Windows Phone",osname:"Windows Phone",windowsphone:t},edgeVersion?(result.msedge=t,result.version=edgeVersion):(result.msie=t,result.version=getFirstMatch(/iemobile\/(\d+(\.\d+)?)/i))):/msie|trident/i.test(ua)?result={name:"Internet Explorer",msie:t,version:getFirstMatch(/(?:msie |rv:)(\d+(\.\d+)?)/i)}:chromeos?result={name:"Chrome",osname:"Chrome OS",chromeos:t,chromeBook:t,chrome:t,version:getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.\d+)?)/i)}:/edg([ea]|ios)/i.test(ua)?result={name:"Microsoft Edge",msedge:t,version:edgeVersion}:/vivaldi/i.test(ua)?result={name:"Vivaldi",vivaldi:t,version:getFirstMatch(/vivaldi\/(\d+(\.\d+)?)/i)||versionIdentifier}:sailfish?result={name:"Sailfish",osname:"Sailfish OS",sailfish:t,version:getFirstMatch(/sailfish\s?browser\/(\d+(\.\d+)?)/i)}:/seamonkey\//i.test(ua)?result={name:"SeaMonkey",seamonkey:t,version:getFirstMatch(/seamonkey\/(\d+(\.\d+)?)/i)}:/firefox|iceweasel|fxios/i.test(ua)?(result={name:"Firefox",firefox:t,version:getFirstMatch(/(?:firefox|iceweasel|fxios)[ \/](\d+(\.\d+)?)/i)},/\((mobile|tablet);[^\)]*rv:[\d\.]+\)/i.test(ua)&&(result.firefoxos=t,result.osname="Firefox OS")):silk?result={name:"Amazon Silk",silk:t,version:getFirstMatch(/silk\/(\d+(\.\d+)?)/i)}:/phantom/i.test(ua)?result={name:"PhantomJS",phantom:t,version:getFirstMatch(/phantomjs\/(\d+(\.\d+)?)/i)}:/slimerjs/i.test(ua)?result={name:"SlimerJS",slimer:t,version:getFirstMatch(/slimerjs\/(\d+(\.\d+)?)/i)}:/blackberry|\bbb\d+/i.test(ua)||/rim\stablet/i.test(ua)?result={name:"BlackBerry",osname:"BlackBerry OS",blackberry:t,version:versionIdentifier||getFirstMatch(/blackberry[\d]+\/(\d+(\.\d+)?)/i)}:webos?(result={name:"WebOS",osname:"WebOS",webos:t,version:versionIdentifier||getFirstMatch(/w(?:eb)?osbrowser\/(\d+(\.\d+)?)/i)},/touchpad\//i.test(ua)&&(result.touchpad=t)):/bada/i.test(ua)?result={name:"Bada",osname:"Bada",bada:t,version:getFirstMatch(/dolfin\/(\d+(\.\d+)?)/i)}:tizen?result={name:"Tizen",osname:"Tizen",tizen:t,version:getFirstMatch(/(?:tizen\s?)?browser\/(\d+(\.\d+)?)/i)||versionIdentifier}:/qupzilla/i.test(ua)?result={name:"QupZilla",qupzilla:t,version:getFirstMatch(/(?:qupzilla)[\s\/](\d+(?:\.\d+)+)/i)||versionIdentifier}:/chromium/i.test(ua)?result={name:"Chromium",chromium:t,version:getFirstMatch(/(?:chromium)[\s\/](\d+(?:\.\d+)?)/i)||versionIdentifier}:/chrome|crios|crmo/i.test(ua)?result={name:"Chrome",chrome:t,version:getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.\d+)?)/i)}:android?result={name:"Android",version:versionIdentifier}:/safari|applewebkit/i.test(ua)?(result={name:"Safari",safari:t},versionIdentifier&&(result.version=versionIdentifier)):iosdevice?(result={name:"iphone"==iosdevice?"iPhone":"ipad"==iosdevice?"iPad":"iPod"},versionIdentifier&&(result.version=versionIdentifier)):result=/googlebot/i.test(ua)?{name:"Googlebot",googlebot:t,version:getFirstMatch(/googlebot\/(\d+(\.\d+))/i)||versionIdentifier}:{name:getFirstMatch(/^(.*)\/(.*) /),version:getSecondMatch(/^(.*)\/(.*) /)},!result.msedge&&/(apple)?webkit/i.test(ua)?(/(apple)?webkit\/537\.36/i.test(ua)?(result.name=result.name||"Blink",result.blink=t):(result.name=result.name||"Webkit",result.webkit=t),!result.version&&versionIdentifier&&(result.version=versionIdentifier)):!result.opera&&/gecko\//i.test(ua)&&(result.name=result.name||"Gecko",result.gecko=t,result.version=result.version||getFirstMatch(/gecko\/(\d+(\.\d+)?)/i)),result.windowsphone||!android&&!result.silk?!result.windowsphone&&iosdevice?(result[iosdevice]=t,result.ios=t,result.osname="iOS"):mac?(result.mac=t,result.osname="macOS"):xbox?(result.xbox=t,result.osname="Xbox"):windows?(result.windows=t,result.osname="Windows"):linux&&(result.linux=t,result.osname="Linux"):(result.android=t,result.osname="Android");var osVersion="";result.windows?osVersion=getWindowsVersion(getFirstMatch(/Windows ((NT|XP)( \d\d?.\d)?)/i)):result.windowsphone?osVersion=getFirstMatch(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i):result.mac?(osVersion=getFirstMatch(/Mac OS X (\d+([_\.\s]\d+)*)/i),osVersion=osVersion.replace(/[_\s]/g,".")):iosdevice?(osVersion=getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i),osVersion=osVersion.replace(/[_\s]/g,".")):android?osVersion=getFirstMatch(/android[ \/-](\d+(\.\d+)*)/i):result.webos?osVersion=getFirstMatch(/(?:web|hpw)os\/(\d+(\.\d+)*)/i):result.blackberry?osVersion=getFirstMatch(/rim\stablet\sos\s(\d+(\.\d+)*)/i):result.bada?osVersion=getFirstMatch(/bada\/(\d+(\.\d+)*)/i):result.tizen&&(osVersion=getFirstMatch(/tizen[\/\s](\d+(\.\d+)*)/i)),osVersion&&(result.osversion=osVersion);var osMajorVersion=!result.windows&&osVersion.split(".")[0];return tablet||nexusTablet||"ipad"==iosdevice||android&&(3==osMajorVersion||osMajorVersion>=4&&!mobile)||result.silk?result.tablet=t:(mobile||"iphone"==iosdevice||"ipod"==iosdevice||android||nexusMobile||result.blackberry||result.webos||result.bada)&&(result.mobile=t),result.msedge||result.msie&&result.version>=10||result.yandexbrowser&&result.version>=15||result.vivaldi&&result.version>=1||result.chrome&&result.version>=20||result.samsungBrowser&&result.version>=4||result.firefox&&result.version>=20||result.safari&&result.version>=6||result.opera&&result.version>=10||result.ios&&result.osversion&&result.osversion.split(".")[0]>=6||result.blackberry&&result.version>=10.1||result.chromium&&result.version>=20?result.a=t:result.msie&&result.version<10||result.chrome&&result.version<20||result.firefox&&result.version<20||result.safari&&result.version<6||result.opera&&result.version<10||result.ios&&result.osversion&&result.osversion.split(".")[0]<6||result.chromium&&result.version<20?result.c=t:result.x=t,result}function getVersionPrecision(version){return version.split(".").length}function map(arr,iterator){var i,result=[];if(Array.prototype.map)return Array.prototype.map.call(arr,iterator);for(i=0;i<arr.length;i++)result.push(iterator(arr[i]));return result}function compareVersions(versions){for(var precision=Math.max(getVersionPrecision(versions[0]),getVersionPrecision(versions[1])),chunks=map(versions,function(version){var delta=precision-getVersionPrecision(version);return version+=new Array(delta+1).join(".0"),map(version.split("."),function(chunk){return new Array(20-chunk.length).join("0")+chunk}).reverse()});--precision>=0;){if(chunks[0][precision]>chunks[1][precision])return 1;if(chunks[0][precision]!==chunks[1][precision])return-1;if(0===precision)return 0}}function isUnsupportedBrowser(minVersions,strictMode,ua){var _bowser=bowser;"string"==typeof strictMode&&(ua=strictMode,strictMode=void 0),void 0===strictMode&&(strictMode=!1),ua&&(_bowser=detect(ua));var version=""+_bowser.version;for(var browser in minVersions)if(minVersions.hasOwnProperty(browser)&&_bowser[browser]){if("string"!=typeof minVersions[browser])throw new Error("Browser version in the minVersion map should be a string: "+browser+": "+String(minVersions));return compareVersions([version,minVersions[browser]])<0}return strictMode}function check(minVersions,strictMode,ua){return!isUnsupportedBrowser(minVersions,strictMode,ua)}var t=!0,bowser=detect("undefined"!=typeof navigator?navigator.userAgent||"":"");return bowser.test=function(browserList){for(var i=0;i<browserList.length;++i){var browserItem=browserList[i];if("string"==typeof browserItem&&browserItem in bowser)return!0}return!1},bowser.isUnsupportedBrowser=isUnsupportedBrowser,bowser.compareVersions=compareVersions,bowser.check=check,bowser._detect=detect,bowser.detect=detect,bowser})});
/*mev-domain-common@0.0.1#src/main/services/settings/Settings*/
define("mev-domain-common@0.0.1#src/main/services/settings/Settings",["bowser"],function(bowser){"use strict";var service=function(){this.db={enabled:!bowser.chrome||bowser.chrome&&bowser.version>43}};return service.$inject=[],service.$provider="service",service.$name="mevSettings",service});
/*mev-domain-common@0.0.1#src/main/services/alert/AlertService*/
define("mev-domain-common@0.0.1#src/main/services/alert/AlertService",[],function(){var service=function($rootScope){function raiseAlert(level,message,heading){$rootScope.$broadcast("mev:alert",{message:message,heading:heading,level:level})}return{success:function(message,header,callback,params){raiseAlert("success",message,header)},error:function(message,header,callback,params){raiseAlert("error",message,header)},info:function(message,header,callback,params){raiseAlert("info",message,header)}}};return service.$inject=["$rootScope"],service.$name="mevAlertService",service.$provider="service",service});
/*mev-domain-common@0.0.1#src/main/view/db/status/mevDbStatusDirective*/
define("mev-domain-common@0.0.1#src/main/view/db/status/mevDbStatusDirective",[],function(){"use strict";var directive=function(mevDb,mevContext,$interval,$q,$rootScope){return{restrict:"EAC",template:'<div ng-if="vm.dataset">status: {{ vm.showActive() }} ({{ vm.getStatus() }})</div><div ng-if="!vm.dataset">status: {{ vm.getStatus() }}</div>',controller:["$scope","mevDb",function(scope,mevDb){function _setActive(isActive){_self._isActive=isActive?!0:!1}function _checkActive(){var dataset=mevContext.get("dataset");return(dataset?dataset.getIsActive():$q.when(!1)).then(_setActive)}var _self=this;_self.getStatus=mevDb.getStatus,_self._isActive=!1,_self.showActive=function(){return _self._isActive?"active":"offline"},_checkActive();var intervalPromise=$interval(_checkActive,66e4),contextListener=$rootScope.$watch(mevContext.get.bind(mevContext,"dataset"),function(newVal,oldVal){_self.dataset=newVal,_checkActive()});scope.$on("$destroy",function(){$interval.cancel(intervalPromise),contextListener()})}],controllerAs:"vm"}};return directive.$name="mevDbStatus",directive.$provider="directive",directive.$inject=["mevDb","mevContext","$interval","$q","$rootScope"],directive});
/*mev-domain-common@0.0.1#src/main/mev-domain-common*/
define("mev-domain-common@0.0.1#src/main/mev-domain-common",["mui","angular-ui-router","./services/context/Context","./services/selection/SelectionLocator","./services/analysis/AnalysisLocator","./services/annotations/AnnotationsLocator","./services/db/mevDb","./services/settings/Settings","./services/alert/AlertService","./view/db/status/mevDbStatusDirective"],function(ng){"use strict";return ng.module("mevDomainCommon",arguments,arguments)});
/*angular-resource@1.5.11#angular-resource*/
define("angular-resource@1.5.11#angular-resource",["module","@loader"],function(module,loader){loader.get("@@global-helpers").prepareGlobal(module.id,[]);var define=loader.global.define,require=loader.global.require,source='!function(window,angular){"use strict";function isValidDottedPath(path){return null!=path&&""!==path&&"hasOwnProperty"!==path&&MEMBER_NAME_REGEX.test("."+path)}function lookupDottedPath(obj,path){if(!isValidDottedPath(path))throw $resourceMinErr("badmember",\'Dotted member path "@{0}" is invalid.\',path);for(var keys=path.split("."),i=0,ii=keys.length;ii>i&&angular.isDefined(obj);i++){var key=keys[i];obj=null!==obj?obj[key]:void 0}return obj}function shallowClearAndCopy(src,dst){dst=dst||{},angular.forEach(dst,function(value,key){delete dst[key]});for(var key in src)!src.hasOwnProperty(key)||"$"===key.charAt(0)&&"$"===key.charAt(1)||(dst[key]=src[key]);return dst}var $resourceMinErr=angular.$$minErr("$resource"),MEMBER_NAME_REGEX=/^(\\.[a-zA-Z_$@][0-9a-zA-Z_$@]*)+$/;angular.module("ngResource",["ng"]).provider("$resource",function(){var PROTOCOL_AND_DOMAIN_REGEX=/^https?:\\/\\/[^\\/]*/,provider=this;this.defaults={stripTrailingSlashes:!0,cancellable:!1,actions:{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},remove:{method:"DELETE"},"delete":{method:"DELETE"}}},this.$get=["$http","$log","$q","$timeout",function($http,$log,$q,$timeout){function encodeUriSegment(val){return encodeUriQuery(val,!0).replace(/%26/gi,"&").replace(/%3D/gi,"=").replace(/%2B/gi,"+")}function encodeUriQuery(val,pctEncodeSpaces){return encodeURIComponent(val).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,pctEncodeSpaces?"%20":"+")}function Route(template,defaults){this.template=template,this.defaults=extend({},provider.defaults,defaults),this.urlParams={}}function resourceFactory(url,paramDefaults,actions,options){function extractParams(data,actionParams){var ids={};return actionParams=extend({},paramDefaults,actionParams),forEach(actionParams,function(value,key){isFunction(value)&&(value=value(data)),ids[key]=value&&value.charAt&&"@"===value.charAt(0)?lookupDottedPath(data,value.substr(1)):value}),ids}function defaultResponseInterceptor(response){return response.resource}function Resource(value){shallowClearAndCopy(value||{},this)}var route=new Route(url,options);return actions=extend({},provider.defaults.actions,actions),Resource.prototype.toJSON=function(){var data=extend({},this);return delete data.$promise,delete data.$resolved,delete data.$cancelRequest,data},forEach(actions,function(action,name){var hasBody=/^(POST|PUT|PATCH)$/i.test(action.method),numericTimeout=action.timeout,cancellable=isDefined(action.cancellable)?action.cancellable:route.defaults.cancellable;numericTimeout&&!isNumber(numericTimeout)&&($log.debug("ngResource:\\n  Only numeric values are allowed as `timeout`.\\n  Promises are not supported in $resource, because the same value would be used for multiple requests. If you are looking for a way to cancel requests, you should use the `cancellable` option."),delete action.timeout,numericTimeout=null),Resource[name]=function(a1,a2,a3,a4){var data,success,error,params={};switch(arguments.length){case 4:error=a4,success=a3;case 3:case 2:if(!isFunction(a2)){params=a1,data=a2,success=a3;break}if(isFunction(a1)){success=a1,error=a2;break}success=a2,error=a3;case 1:isFunction(a1)?success=a1:hasBody?data=a1:params=a1;break;case 0:break;default:throw $resourceMinErr("badargs","Expected up to 4 arguments [params, data, success, error], got {0} arguments",arguments.length)}var timeoutDeferred,numericTimeoutPromise,isInstanceCall=this instanceof Resource,value=isInstanceCall?data:action.isArray?[]:new Resource(data),httpConfig={},responseInterceptor=action.interceptor&&action.interceptor.response||defaultResponseInterceptor,responseErrorInterceptor=action.interceptor&&action.interceptor.responseError||void 0;forEach(action,function(value,key){switch(key){default:httpConfig[key]=copy(value);break;case"params":case"isArray":case"interceptor":case"cancellable":}}),!isInstanceCall&&cancellable&&(timeoutDeferred=$q.defer(),httpConfig.timeout=timeoutDeferred.promise,numericTimeout&&(numericTimeoutPromise=$timeout(timeoutDeferred.resolve,numericTimeout))),hasBody&&(httpConfig.data=data),route.setUrlParams(httpConfig,extend({},extractParams(data,action.params||{}),params),action.url);var promise=$http(httpConfig).then(function(response){var data=response.data;if(data){if(isArray(data)!==!!action.isArray)throw $resourceMinErr("badcfg","Error in resource configuration for action `{0}`. Expected response to contain an {1} but got an {2} (Request: {3} {4})",name,action.isArray?"array":"object",isArray(data)?"array":"object",httpConfig.method,httpConfig.url);if(action.isArray)value.length=0,forEach(data,function(item){"object"==typeof item?value.push(new Resource(item)):value.push(item)});else{var promise=value.$promise;shallowClearAndCopy(data,value),value.$promise=promise}}return response.resource=value,response},function(response){return(error||noop)(response),$q.reject(response)});return promise["finally"](function(){value.$resolved=!0,!isInstanceCall&&cancellable&&(value.$cancelRequest=noop,$timeout.cancel(numericTimeoutPromise),timeoutDeferred=numericTimeoutPromise=httpConfig.timeout=null)}),promise=promise.then(function(response){var value=responseInterceptor(response);return(success||noop)(value,response.headers,response.status,response.statusText),value},responseErrorInterceptor),isInstanceCall?promise:(value.$promise=promise,value.$resolved=!1,cancellable&&(value.$cancelRequest=timeoutDeferred.resolve),value)},Resource.prototype["$"+name]=function(params,success,error){isFunction(params)&&(error=success,success=params,params={});var result=Resource[name].call(this,params,this,success,error);return result.$promise||result}}),Resource.bind=function(additionalParamDefaults){var extendedParamDefaults=extend({},paramDefaults,additionalParamDefaults);return resourceFactory(url,extendedParamDefaults,actions,options)},Resource}var noop=angular.noop,forEach=angular.forEach,extend=angular.extend,copy=angular.copy,isArray=angular.isArray,isDefined=angular.isDefined,isFunction=angular.isFunction,isNumber=angular.isNumber;return Route.prototype={setUrlParams:function(config,params,actionUrl){var val,encodedVal,self=this,url=actionUrl||self.template,protocolAndDomain="",urlParams=self.urlParams={};forEach(url.split(/\\W/),function(param){if("hasOwnProperty"===param)throw $resourceMinErr("badname","hasOwnProperty is not a valid parameter name.");!new RegExp("^\\\\d+$").test(param)&&param&&new RegExp("(^|[^\\\\\\\\]):"+param+"(\\\\W|$)").test(url)&&(urlParams[param]={isQueryParamValue:new RegExp("\\\\?.*=:"+param+"(?:\\\\W|$)").test(url)})}),url=url.replace(/\\\\:/g,":"),url=url.replace(PROTOCOL_AND_DOMAIN_REGEX,function(match){return protocolAndDomain=match,""}),params=params||{},forEach(self.urlParams,function(paramInfo,urlParam){val=params.hasOwnProperty(urlParam)?params[urlParam]:self.defaults[urlParam],isDefined(val)&&null!==val?(encodedVal=paramInfo.isQueryParamValue?encodeUriQuery(val,!0):encodeUriSegment(val),url=url.replace(new RegExp(":"+urlParam+"(\\\\W|$)","g"),function(match,p1){return encodedVal+p1})):url=url.replace(new RegExp("(/?):"+urlParam+"(\\\\W|$)","g"),function(match,leadingSlashes,tail){return"/"===tail.charAt(0)?tail:leadingSlashes+tail})}),self.defaults.stripTrailingSlashes&&(url=url.replace(/\\/+$/,"")||"/"),url=url.replace(/\\/\\.(?=\\w+($|\\?))/,"."),config.url=protocolAndDomain+url.replace(/\\/\\\\\\./,"/."),forEach(params,function(value,key){self.urlParams[key]||(config.params=config.params||{},config.params[key]=value)})}},resourceFactory}]})}(window,window.angular);';return loader.global.define=void 0,loader.global.module=void 0,loader.global.exports=void 0,loader.__exec({source:source,address:module.uri}),loader.global.require=require,loader.global.define=define,loader.get("@@global-helpers").retrieveGlobal(module.id,void 0)});
/*angular-resource@1.5.11#index*/
define("angular-resource@1.5.11#index",function(require,exports,module){require("./angular-resource"),module.exports="ngResource"});
/*mev-dataset@0.0.1#src/main/dataset/lib/datasetStatistics*/
define("mev-dataset@0.0.1#src/main/dataset/lib/datasetStatistics",[],function(){return function(){var self=this;return{percentile:function(percent){var f=Math.floor(.01*(self.sortedValues.length-1)*parseFloat(percent)),c=Math.ceil(.01*(self.sortedValues.length-1)*parseFloat(percent));return(self.values[self.sortedValues[f]].value+self.values[self.sortedValues[c]].value)/2},max:function(){return this.percentile(100)},min:function(){return this.percentile(0)},median:function(){return this.percentile(50)},quartile:function(q){return this.percentile(25*q)},contingency:function(experiment){if(!experiment.groups||!experiment.dimension||void 0==experiment.threshold||!experiment.population)throw new TypeError("Missing experment attribute. Groups: "+experiment.groups+" Dimension: "+experiment.dimension+" Threshold: "+experiment.threshold);if(experiment.groups.length>2||experiment.groups.length<2)throw new RangeError("Group length incorrect. Expected: 2. Received: "+experiment.groups.length);for(group in experiment.groups)if(experiment.groups[group].length<1)throw new RangeError("Group with no elements found! Requires at least one element.");for(element in experiment.groups[0])if(experiment.groups[1].indexOf(experiment.groups[0][element])>=0)throw new TypeError("Intersection of groups is not null. Element in both groups: "+experiment.groups[0][element]);var table=[{above:0,below:0},{above:0,below:0}];for(group in experiment.groups)for(member in experiment.groups[group])"column"==experiment.dimension&&(self.get([experiment.groups[group][member],experiment.population]).value>=experiment.threshold?table[group].above++:table[group].below++),"row"==experiment.dimension&&(self.get([experiment.population,experiment.groups[group][member]]).value>=experiment.threshold?table[group].above++:table[group].below++);return table}}}});
/*mev-dataset@0.0.1#src/main/dataset/lib/selectionSort*/
define("mev-dataset@0.0.1#src/main/dataset/lib/selectionSort",[],function(){return function(keyF){var self=this,keyf=function(j){return parseFloat(j.value)};keyF&&(keyf=keyF);for(var pivot=0;pivot<self.values.length;){for(var leader={value:Number.POSITIVE_INFINITY,index:void 0,place:void 0},ind=pivot;ind<self.sortedValues.length;ind++)keyf(self.values[self.sortedValues[ind]])<leader.value&&(leader.index=ind,leader.value=keyf(self.values[self.sortedValues[ind]]),leader.place=self.sortedValues[ind]);self.sortedValues[leader.index]=self.sortedValues[pivot],self.sortedValues[pivot]=leader.place,pivot++}}});
/*mev-dataset@0.0.1#src/main/dataset/lib/selectionHelpers*/
define("mev-dataset@0.0.1#src/main/dataset/lib/selectionHelpers",[],function(){return{selectionIntersect:function(params){var set1,set2,self=this;if(self.selections[params.dimension].map(function(selection){selection.name==params.selection1&&(set1=selection),selection.name==params.selection2&&(set2=selection)}),set1&&set2){for(var intersection=[],i=0;i<set1.keys.length;i++)for(var j=0;j<set2.keys.length;j++)set1.keys[i]==set2.keys[j]&&intersection.push(set1.keys[i]);return intersection}return[]}}});
/*mev-dataset@0.0.1#src/main/dataset/lib/expressionModule*/
!function(){define("mev-dataset@0.0.1#src/main/dataset/lib/expressionModule",[],function(){return{retrieve:function(searchValue){var self=this;if(searchValue.row&&!searchValue.column)return self.column.keys.map(function(col){return self.expression.get([searchValue.row,col])}).filter(function(exp){return"undefined"!=typeof exp});if(searchValue.column&&!searchValue.row)return self.row.keys.map(function(row){return self.expression.get([row,searchValue.column])}).filter(function(exp){return"undefined"!=typeof exp});if(searchValue.column&&searchValue.row){var elem=[self.expression.get([searchValue.row,searchValue.column])];return elem.filter(function(exp){return"undefined"!=typeof exp})}return[]}}})}();
/*q@1.4.1#q*/
!function(definition){"use strict";if("function"==typeof bootstrap)bootstrap("promise",definition);else if("object"==typeof exports&&"object"==typeof module)module.exports=definition();else if("function"==typeof define&&define.amd)define("q@1.4.1#q",definition);else if("undefined"!=typeof ses){if(!ses.ok())return;ses.makeQ=definition}else{if("undefined"==typeof window&&"undefined"==typeof self)throw new Error("This environment was not anticipated by Q. Please file a bug.");var global="undefined"!=typeof window?window:self,previousQ=global.Q;global.Q=definition(),global.Q.noConflict=function(){return global.Q=previousQ,this}}}(function(){"use strict";function uncurryThis(f){return function(){return call.apply(f,arguments)}}function isObject(value){return value===Object(value)}function isStopIteration(exception){return"[object StopIteration]"===object_toString(exception)||exception instanceof QReturnValue}function makeStackTraceLong(error,promise){if(hasStacks&&promise.stack&&"object"==typeof error&&null!==error&&error.stack&&-1===error.stack.indexOf(STACK_JUMP_SEPARATOR)){for(var stacks=[],p=promise;p;p=p.source)p.stack&&stacks.unshift(p.stack);stacks.unshift(error.stack);var concatedStacks=stacks.join("\n"+STACK_JUMP_SEPARATOR+"\n");error.stack=filterStackString(concatedStacks)}}function filterStackString(stackString){for(var lines=stackString.split("\n"),desiredLines=[],i=0;i<lines.length;++i){var line=lines[i];isInternalFrame(line)||isNodeFrame(line)||!line||desiredLines.push(line)}return desiredLines.join("\n")}function isNodeFrame(stackLine){return-1!==stackLine.indexOf("(module.js:")||-1!==stackLine.indexOf("(node.js:")}function getFileNameAndLineNumber(stackLine){var attempt1=/at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);if(attempt1)return[attempt1[1],Number(attempt1[2])];var attempt2=/at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);if(attempt2)return[attempt2[1],Number(attempt2[2])];var attempt3=/.*@(.+):(\d+)$/.exec(stackLine);return attempt3?[attempt3[1],Number(attempt3[2])]:void 0}function isInternalFrame(stackLine){var fileNameAndLineNumber=getFileNameAndLineNumber(stackLine);if(!fileNameAndLineNumber)return!1;var fileName=fileNameAndLineNumber[0],lineNumber=fileNameAndLineNumber[1];return fileName===qFileName&&lineNumber>=qStartingLine&&qEndingLine>=lineNumber}function captureLine(){if(hasStacks)try{throw new Error}catch(e){var lines=e.stack.split("\n"),firstLine=lines[0].indexOf("@")>0?lines[1]:lines[2],fileNameAndLineNumber=getFileNameAndLineNumber(firstLine);if(!fileNameAndLineNumber)return;return qFileName=fileNameAndLineNumber[0],fileNameAndLineNumber[1]}}function deprecate(callback,name,alternative){return function(){return"undefined"!=typeof console&&"function"==typeof console.warn&&console.warn(name+" is deprecated, use "+alternative+" instead.",new Error("").stack),callback.apply(callback,arguments)}}function Q(value){return value instanceof Promise?value:isPromiseAlike(value)?coerce(value):fulfill(value)}function defer(){function become(newPromise){resolvedPromise=newPromise,promise.source=newPromise,array_reduce(messages,function(undefined,message){Q.nextTick(function(){newPromise.promiseDispatch.apply(newPromise,message)})},void 0),messages=void 0,progressListeners=void 0}var resolvedPromise,messages=[],progressListeners=[],deferred=object_create(defer.prototype),promise=object_create(Promise.prototype);if(promise.promiseDispatch=function(resolve,op,operands){var args=array_slice(arguments);messages?(messages.push(args),"when"===op&&operands[1]&&progressListeners.push(operands[1])):Q.nextTick(function(){resolvedPromise.promiseDispatch.apply(resolvedPromise,args)})},promise.valueOf=function(){if(messages)return promise;var nearerValue=nearer(resolvedPromise);return isPromise(nearerValue)&&(resolvedPromise=nearerValue),nearerValue},promise.inspect=function(){return resolvedPromise?resolvedPromise.inspect():{state:"pending"}},Q.longStackSupport&&hasStacks)try{throw new Error}catch(e){promise.stack=e.stack.substring(e.stack.indexOf("\n")+1)}return deferred.promise=promise,deferred.resolve=function(value){resolvedPromise||become(Q(value))},deferred.fulfill=function(value){resolvedPromise||become(fulfill(value))},deferred.reject=function(reason){resolvedPromise||become(reject(reason))},deferred.notify=function(progress){resolvedPromise||array_reduce(progressListeners,function(undefined,progressListener){Q.nextTick(function(){progressListener(progress)})},void 0)},deferred}function promise(resolver){if("function"!=typeof resolver)throw new TypeError("resolver must be a function.");var deferred=defer();try{resolver(deferred.resolve,deferred.reject,deferred.notify)}catch(reason){deferred.reject(reason)}return deferred.promise}function race(answerPs){return promise(function(resolve,reject){for(var i=0,len=answerPs.length;len>i;i++)Q(answerPs[i]).then(resolve,reject)})}function Promise(descriptor,fallback,inspect){void 0===fallback&&(fallback=function(op){return reject(new Error("Promise does not support operation: "+op))}),void 0===inspect&&(inspect=function(){return{state:"unknown"}});var promise=object_create(Promise.prototype);if(promise.promiseDispatch=function(resolve,op,args){var result;try{result=descriptor[op]?descriptor[op].apply(promise,args):fallback.call(promise,op,args)}catch(exception){result=reject(exception)}resolve&&resolve(result)},promise.inspect=inspect,inspect){var inspected=inspect();"rejected"===inspected.state&&(promise.exception=inspected.reason),promise.valueOf=function(){var inspected=inspect();return"pending"===inspected.state||"rejected"===inspected.state?promise:inspected.value}}return promise}function when(value,fulfilled,rejected,progressed){return Q(value).then(fulfilled,rejected,progressed)}function nearer(value){if(isPromise(value)){var inspected=value.inspect();if("fulfilled"===inspected.state)return inspected.value}return value}function isPromise(object){return object instanceof Promise}function isPromiseAlike(object){return isObject(object)&&"function"==typeof object.then}function isPending(object){return isPromise(object)&&"pending"===object.inspect().state}function isFulfilled(object){return!isPromise(object)||"fulfilled"===object.inspect().state}function isRejected(object){return isPromise(object)&&"rejected"===object.inspect().state}function resetUnhandledRejections(){unhandledReasons.length=0,unhandledRejections.length=0,trackUnhandledRejections||(trackUnhandledRejections=!0)}function trackRejection(promise,reason){trackUnhandledRejections&&("object"==typeof process&&"function"==typeof process.emit&&Q.nextTick.runAfter(function(){-1!==array_indexOf(unhandledRejections,promise)&&(process.emit("unhandledRejection",reason,promise),reportedUnhandledRejections.push(promise))}),unhandledRejections.push(promise),reason&&"undefined"!=typeof reason.stack?unhandledReasons.push(reason.stack):unhandledReasons.push("(no stack) "+reason))}function untrackRejection(promise){if(trackUnhandledRejections){var at=array_indexOf(unhandledRejections,promise);-1!==at&&("object"==typeof process&&"function"==typeof process.emit&&Q.nextTick.runAfter(function(){var atReport=array_indexOf(reportedUnhandledRejections,promise);-1!==atReport&&(process.emit("rejectionHandled",unhandledReasons[at],promise),reportedUnhandledRejections.splice(atReport,1))}),unhandledRejections.splice(at,1),unhandledReasons.splice(at,1))}}function reject(reason){var rejection=Promise({when:function(rejected){return rejected&&untrackRejection(this),rejected?rejected(reason):this}},function(){return this},function(){return{state:"rejected",reason:reason}});return trackRejection(rejection,reason),rejection}function fulfill(value){return Promise({when:function(){return value},get:function(name){return value[name]},set:function(name,rhs){value[name]=rhs},"delete":function(name){delete value[name]},post:function(name,args){return null===name||void 0===name?value.apply(void 0,args):value[name].apply(value,args)},apply:function(thisp,args){return value.apply(thisp,args)},keys:function(){return object_keys(value)}},void 0,function(){return{state:"fulfilled",value:value}})}function coerce(promise){var deferred=defer();return Q.nextTick(function(){try{promise.then(deferred.resolve,deferred.reject,deferred.notify)}catch(exception){deferred.reject(exception)}}),deferred.promise}function master(object){return Promise({isDef:function(){}},function(op,args){return dispatch(object,op,args)},function(){return Q(object).inspect()})}function spread(value,fulfilled,rejected){return Q(value).spread(fulfilled,rejected)}function async(makeGenerator){return function(){function continuer(verb,arg){var result;if("undefined"==typeof StopIteration){try{result=generator[verb](arg)}catch(exception){return reject(exception)}return result.done?Q(result.value):when(result.value,callback,errback)}try{result=generator[verb](arg)}catch(exception){return isStopIteration(exception)?Q(exception.value):reject(exception)}return when(result,callback,errback)}var generator=makeGenerator.apply(this,arguments),callback=continuer.bind(continuer,"next"),errback=continuer.bind(continuer,"throw");return callback()}}function spawn(makeGenerator){Q.done(Q.async(makeGenerator)())}function _return(value){throw new QReturnValue(value)}function promised(callback){return function(){return spread([this,all(arguments)],function(self,args){return callback.apply(self,args)})}}function dispatch(object,op,args){return Q(object).dispatch(op,args)}function all(promises){return when(promises,function(promises){var pendingCount=0,deferred=defer();return array_reduce(promises,function(undefined,promise,index){var snapshot;isPromise(promise)&&"fulfilled"===(snapshot=promise.inspect()).state?promises[index]=snapshot.value:(++pendingCount,when(promise,function(value){promises[index]=value,0===--pendingCount&&deferred.resolve(promises)},deferred.reject,function(progress){deferred.notify({index:index,value:progress})}))},void 0),0===pendingCount&&deferred.resolve(promises),deferred.promise})}function any(promises){if(0===promises.length)return Q.resolve();var deferred=Q.defer(),pendingCount=0;return array_reduce(promises,function(prev,current,index){function onFulfilled(result){deferred.resolve(result)}function onRejected(){pendingCount--,0===pendingCount&&deferred.reject(new Error("Can't get fulfillment value from any promise, all promises were rejected."))}function onProgress(progress){deferred.notify({index:index,value:progress})}var promise=promises[index];pendingCount++,when(promise,onFulfilled,onRejected,onProgress)},void 0),deferred.promise}function allResolved(promises){return when(promises,function(promises){return promises=array_map(promises,Q),when(all(array_map(promises,function(promise){return when(promise,noop,noop)})),function(){return promises})})}function allSettled(promises){return Q(promises).allSettled()}function progress(object,progressed){return Q(object).then(void 0,void 0,progressed)}function nodeify(object,nodeback){return Q(object).nodeify(nodeback)}var hasStacks=!1;try{throw new Error}catch(e){hasStacks=!!e.stack}var qFileName,QReturnValue,qStartingLine=captureLine(),noop=function(){},nextTick=function(){function flush(){for(var task,domain;head.next;)head=head.next,task=head.task,head.task=void 0,domain=head.domain,domain&&(head.domain=void 0,domain.enter()),runSingle(task,domain);for(;laterQueue.length;)task=laterQueue.pop(),runSingle(task);flushing=!1}function runSingle(task,domain){try{task()}catch(e){if(isNodeJS)throw domain&&domain.exit(),setTimeout(flush,0),domain&&domain.enter(),e;setTimeout(function(){throw e},0)}domain&&domain.exit()}var head={task:void 0,next:null},tail=head,flushing=!1,requestTick=void 0,isNodeJS=!1,laterQueue=[];if(nextTick=function(task){tail=tail.next={task:task,domain:isNodeJS&&process.domain,next:null},flushing||(flushing=!0,requestTick())},"object"==typeof process&&"[object process]"===process.toString()&&process.nextTick)isNodeJS=!0,requestTick=function(){process.nextTick(flush)};else if("function"==typeof setImmediate)requestTick="undefined"!=typeof window?setImmediate.bind(window,flush):function(){setImmediate(flush)};else if("undefined"!=typeof MessageChannel){var channel=new MessageChannel;channel.port1.onmessage=function(){requestTick=requestPortTick,channel.port1.onmessage=flush,flush()};var requestPortTick=function(){channel.port2.postMessage(0)};requestTick=function(){setTimeout(flush,0),requestPortTick()}}else requestTick=function(){setTimeout(flush,0)};return nextTick.runAfter=function(task){laterQueue.push(task),flushing||(flushing=!0,requestTick())},nextTick}(),call=Function.call,array_slice=uncurryThis(Array.prototype.slice),array_reduce=uncurryThis(Array.prototype.reduce||function(callback,basis){var index=0,length=this.length;if(1===arguments.length)for(;;){if(index in this){basis=this[index++];break}if(++index>=length)throw new TypeError}for(;length>index;index++)index in this&&(basis=callback(basis,this[index],index));return basis}),array_indexOf=uncurryThis(Array.prototype.indexOf||function(value){for(var i=0;i<this.length;i++)if(this[i]===value)return i;return-1}),array_map=uncurryThis(Array.prototype.map||function(callback,thisp){var self=this,collect=[];return array_reduce(self,function(undefined,value,index){collect.push(callback.call(thisp,value,index,self))},void 0),collect}),object_create=Object.create||function(prototype){function Type(){}return Type.prototype=prototype,new Type},object_hasOwnProperty=uncurryThis(Object.prototype.hasOwnProperty),object_keys=Object.keys||function(object){var keys=[];for(var key in object)object_hasOwnProperty(object,key)&&keys.push(key);return keys},object_toString=uncurryThis(Object.prototype.toString);QReturnValue="undefined"!=typeof ReturnValue?ReturnValue:function(value){this.value=value};var STACK_JUMP_SEPARATOR="From previous event:";Q.resolve=Q,Q.nextTick=nextTick,Q.longStackSupport=!1,"object"==typeof process&&process&&process.env&&process.env.Q_DEBUG&&(Q.longStackSupport=!0),Q.defer=defer,defer.prototype.makeNodeResolver=function(){var self=this;return function(error,value){error?self.reject(error):arguments.length>2?self.resolve(array_slice(arguments,1)):self.resolve(value)}},Q.Promise=promise,Q.promise=promise,promise.race=race,promise.all=all,promise.reject=reject,promise.resolve=Q,Q.passByCopy=function(object){return object},Promise.prototype.passByCopy=function(){return this},Q.join=function(x,y){return Q(x).join(y)},Promise.prototype.join=function(that){return Q([this,that]).spread(function(x,y){if(x===y)return x;throw new Error("Can't join: not the same: "+x+" "+y)})},Q.race=race,Promise.prototype.race=function(){return this.then(Q.race)},Q.makePromise=Promise,Promise.prototype.toString=function(){return"[object Promise]"},Promise.prototype.then=function(fulfilled,rejected,progressed){function _fulfilled(value){try{return"function"==typeof fulfilled?fulfilled(value):value}catch(exception){return reject(exception)}}function _rejected(exception){if("function"==typeof rejected){makeStackTraceLong(exception,self);try{return rejected(exception)}catch(newException){return reject(newException)}}return reject(exception)}function _progressed(value){return"function"==typeof progressed?progressed(value):value}var self=this,deferred=defer(),done=!1;return Q.nextTick(function(){self.promiseDispatch(function(value){done||(done=!0,deferred.resolve(_fulfilled(value)))},"when",[function(exception){done||(done=!0,deferred.resolve(_rejected(exception)))}])}),self.promiseDispatch(void 0,"when",[void 0,function(value){var newValue,threw=!1;try{newValue=_progressed(value)}catch(e){if(threw=!0,!Q.onerror)throw e;Q.onerror(e)}threw||deferred.notify(newValue)}]),deferred.promise},Q.tap=function(promise,callback){return Q(promise).tap(callback)},Promise.prototype.tap=function(callback){return callback=Q(callback),this.then(function(value){return callback.fcall(value).thenResolve(value)})},Q.when=when,Promise.prototype.thenResolve=function(value){return this.then(function(){return value})},Q.thenResolve=function(promise,value){return Q(promise).thenResolve(value)},Promise.prototype.thenReject=function(reason){return this.then(function(){throw reason})},Q.thenReject=function(promise,reason){return Q(promise).thenReject(reason)},Q.nearer=nearer,Q.isPromise=isPromise,Q.isPromiseAlike=isPromiseAlike,Q.isPending=isPending,Promise.prototype.isPending=function(){return"pending"===this.inspect().state},Q.isFulfilled=isFulfilled,Promise.prototype.isFulfilled=function(){return"fulfilled"===this.inspect().state},Q.isRejected=isRejected,Promise.prototype.isRejected=function(){return"rejected"===this.inspect().state};var unhandledReasons=[],unhandledRejections=[],reportedUnhandledRejections=[],trackUnhandledRejections=!0;Q.resetUnhandledRejections=resetUnhandledRejections,Q.getUnhandledReasons=function(){return unhandledReasons.slice()},Q.stopUnhandledRejectionTracking=function(){resetUnhandledRejections(),trackUnhandledRejections=!1},resetUnhandledRejections(),Q.reject=reject,Q.fulfill=fulfill,Q.master=master,Q.spread=spread,Promise.prototype.spread=function(fulfilled,rejected){return this.all().then(function(array){return fulfilled.apply(void 0,array)},rejected)},Q.async=async,Q.spawn=spawn,Q["return"]=_return,Q.promised=promised,Q.dispatch=dispatch,Promise.prototype.dispatch=function(op,args){var self=this,deferred=defer();return Q.nextTick(function(){self.promiseDispatch(deferred.resolve,op,args)}),deferred.promise},Q.get=function(object,key){return Q(object).dispatch("get",[key])},Promise.prototype.get=function(key){return this.dispatch("get",[key])},Q.set=function(object,key,value){return Q(object).dispatch("set",[key,value])},Promise.prototype.set=function(key,value){return this.dispatch("set",[key,value])},Q.del=Q["delete"]=function(object,key){return Q(object).dispatch("delete",[key])},Promise.prototype.del=Promise.prototype["delete"]=function(key){return this.dispatch("delete",[key])},Q.mapply=Q.post=function(object,name,args){return Q(object).dispatch("post",[name,args])},Promise.prototype.mapply=Promise.prototype.post=function(name,args){return this.dispatch("post",[name,args])},Q.send=Q.mcall=Q.invoke=function(object,name){return Q(object).dispatch("post",[name,array_slice(arguments,2)])},Promise.prototype.send=Promise.prototype.mcall=Promise.prototype.invoke=function(name){return this.dispatch("post",[name,array_slice(arguments,1)])},Q.fapply=function(object,args){return Q(object).dispatch("apply",[void 0,args])},Promise.prototype.fapply=function(args){return this.dispatch("apply",[void 0,args])},Q["try"]=Q.fcall=function(object){return Q(object).dispatch("apply",[void 0,array_slice(arguments,1)])},Promise.prototype.fcall=function(){return this.dispatch("apply",[void 0,array_slice(arguments)])},Q.fbind=function(object){var promise=Q(object),args=array_slice(arguments,1);return function(){return promise.dispatch("apply",[this,args.concat(array_slice(arguments))])}},Promise.prototype.fbind=function(){var promise=this,args=array_slice(arguments);return function(){return promise.dispatch("apply",[this,args.concat(array_slice(arguments))])}},Q.keys=function(object){return Q(object).dispatch("keys",[])},Promise.prototype.keys=function(){return this.dispatch("keys",[])},Q.all=all,Promise.prototype.all=function(){return all(this)},Q.any=any,Promise.prototype.any=function(){return any(this)},Q.allResolved=deprecate(allResolved,"allResolved","allSettled"),Promise.prototype.allResolved=function(){return allResolved(this)},Q.allSettled=allSettled,Promise.prototype.allSettled=function(){return this.then(function(promises){return all(array_map(promises,function(promise){function regardless(){return promise.inspect()}return promise=Q(promise),promise.then(regardless,regardless)}))})},Q.fail=Q["catch"]=function(object,rejected){return Q(object).then(void 0,rejected)},Promise.prototype.fail=Promise.prototype["catch"]=function(rejected){return this.then(void 0,rejected)},Q.progress=progress,Promise.prototype.progress=function(progressed){return this.then(void 0,void 0,progressed)},Q.fin=Q["finally"]=function(object,callback){return Q(object)["finally"](callback)},Promise.prototype.fin=Promise.prototype["finally"]=function(callback){return callback=Q(callback),this.then(function(value){return callback.fcall().then(function(){return value})},function(reason){return callback.fcall().then(function(){throw reason})})},Q.done=function(object,fulfilled,rejected,progress){return Q(object).done(fulfilled,rejected,progress)},Promise.prototype.done=function(fulfilled,rejected,progress){var onUnhandledError=function(error){Q.nextTick(function(){if(makeStackTraceLong(error,promise),!Q.onerror)throw error;Q.onerror(error)})},promise=fulfilled||rejected||progress?this.then(fulfilled,rejected,progress):this;"object"==typeof process&&process&&process.domain&&(onUnhandledError=process.domain.bind(onUnhandledError)),promise.then(void 0,onUnhandledError)},Q.timeout=function(object,ms,error){return Q(object).timeout(ms,error)},Promise.prototype.timeout=function(ms,error){var deferred=defer(),timeoutId=setTimeout(function(){error&&"string"!=typeof error||(error=new Error(error||"Timed out after "+ms+" ms"),error.code="ETIMEDOUT"),deferred.reject(error)},ms);return this.then(function(value){clearTimeout(timeoutId),deferred.resolve(value)},function(exception){clearTimeout(timeoutId),deferred.reject(exception)},deferred.notify),deferred.promise},Q.delay=function(object,timeout){return void 0===timeout&&(timeout=object,object=void 0),Q(object).delay(timeout)},Promise.prototype.delay=function(timeout){return this.then(function(value){var deferred=defer();return setTimeout(function(){deferred.resolve(value)},timeout),deferred.promise})},Q.nfapply=function(callback,args){return Q(callback).nfapply(args)},Promise.prototype.nfapply=function(args){var deferred=defer(),nodeArgs=array_slice(args);return nodeArgs.push(deferred.makeNodeResolver()),this.fapply(nodeArgs).fail(deferred.reject),deferred.promise},Q.nfcall=function(callback){var args=array_slice(arguments,1);return Q(callback).nfapply(args)},Promise.prototype.nfcall=function(){var nodeArgs=array_slice(arguments),deferred=defer();return nodeArgs.push(deferred.makeNodeResolver()),this.fapply(nodeArgs).fail(deferred.reject),deferred.promise},Q.nfbind=Q.denodeify=function(callback){var baseArgs=array_slice(arguments,1);return function(){var nodeArgs=baseArgs.concat(array_slice(arguments)),deferred=defer();return nodeArgs.push(deferred.makeNodeResolver()),Q(callback).fapply(nodeArgs).fail(deferred.reject),deferred.promise}},Promise.prototype.nfbind=Promise.prototype.denodeify=function(){var args=array_slice(arguments);return args.unshift(this),Q.denodeify.apply(void 0,args)},Q.nbind=function(callback,thisp){var baseArgs=array_slice(arguments,2);return function(){function bound(){return callback.apply(thisp,arguments)}var nodeArgs=baseArgs.concat(array_slice(arguments)),deferred=defer();return nodeArgs.push(deferred.makeNodeResolver()),Q(bound).fapply(nodeArgs).fail(deferred.reject),deferred.promise}},Promise.prototype.nbind=function(){var args=array_slice(arguments,0);return args.unshift(this),Q.nbind.apply(void 0,args)},Q.nmapply=Q.npost=function(object,name,args){return Q(object).npost(name,args)},Promise.prototype.nmapply=Promise.prototype.npost=function(name,args){var nodeArgs=array_slice(args||[]),deferred=defer();return nodeArgs.push(deferred.makeNodeResolver()),this.dispatch("post",[name,nodeArgs]).fail(deferred.reject),deferred.promise},Q.nsend=Q.nmcall=Q.ninvoke=function(object,name){var nodeArgs=array_slice(arguments,2),deferred=defer();return nodeArgs.push(deferred.makeNodeResolver()),Q(object).dispatch("post",[name,nodeArgs]).fail(deferred.reject),deferred.promise},Promise.prototype.nsend=Promise.prototype.nmcall=Promise.prototype.ninvoke=function(name){var nodeArgs=array_slice(arguments,1),deferred=defer();return nodeArgs.push(deferred.makeNodeResolver()),this.dispatch("post",[name,nodeArgs]).fail(deferred.reject),deferred.promise},Q.nodeify=nodeify,Promise.prototype.nodeify=function(nodeback){return nodeback?void this.then(function(value){Q.nextTick(function(){nodeback(null,value)})},function(error){Q.nextTick(function(){nodeback(error)})}):this},Q.noConflict=function(){throw new Error("Q.noConflict only works when Q is used as a global")};var qEndingLine=captureLine();return Q});
/*mev-dataset@0.0.1#src/main/dataset/lib/DatasetValues32*/
define("mev-dataset@0.0.1#src/main/dataset/lib/DatasetValues32",["q"],function(q){return function(dataset,$http,$rootScope){function init(){return fetchDataValues()}function fetchDataValues(){return q.when({})}function getItemIndex(r,c){return dataset.column.keys.length*r+c}function keyToIndex(row,column){var r=dataset.rowLabels2Indexes[row],c=dataset.columnLabels2Indexes[column];return getItemIndex(r,c)}function getByIndex(index){return dataset.dataview?dataset.dataview.getFloat32(index*Float32Array.BYTES_PER_ELEMENT,!1):void 0}function getByKey(labelPair){if(dataset.dataview){var index=keyToIndex(labelPair[0],labelPair[1]);return getByIndex(index)}}function getSome(shownCells){if(dataset.dataview)for(var i=0;i<shownCells.length;i++){var index=keyToIndex(shownCells[i].row,shownCells[i].column);shownCells[i].index=index,shownCells[i].value=getByIndex(index)}return q.when(shownCells)}function getDict(shownCells){return dataPromise.then(function(){for(var dict={},i=0;i<shownCells.length;i++){var rowName=shownCells[i].row,columnName=shownCells[i].column;dict[rowName]||(dict[rowName]={}),dict[rowName][columnName]||(dict[rowName][columnName]={value:getByKey([rowName,columnName])})}return dict})}var dataPromise=init();return{getByKey:getByKey,getSome:getSome,getDict:getDict}}});
/*mev-dataset@0.0.1#src/main/dataset/lib/DatasetValuesJson*/
define("mev-dataset@0.0.1#src/main/dataset/lib/DatasetValuesJson",["q"],function(q){return function(dataset,$http,$rootScope){function getItemIndex(r,c){return dataset.column.keys.length*r+c}function keyToIndex(row,column){var r=dataset.rowLabels2Indexes[row],c=dataset.columnLabels2Indexes[column];return getItemIndex(r,c)}function getByIndex(index){return self.values[index].value}function getByKey(labelPair){var index=keyToIndex(labelPair[0],labelPair[1]);return getByIndex(index)}function getSome(shownCells){for(var i=0;i<shownCells.length;i++){var index=keyToIndex(shownCells[i].row,shownCells[i].column);shownCells[i].index=index,shownCells[i].value=getByIndex(index)}return q.when(shownCells)}function getDict(shownCells){for(var dict={},i=0;i<shownCells.length;i++){var rowName=shownCells[i].row,columnName=shownCells[i].column;dict[rowName]||(dict[rowName]={}),dict[rowName][columnName]||(dict[rowName][columnName]={value:getByKey([rowName,columnName])})}return dict}var self=this;return self.values=dataset.values,{getByKey:getByKey,getSome:getSome,getDict:getDict}}});
/*mev-dataset@0.0.1#src/main/dataset/lib/DatasetValues*/
define("mev-dataset@0.0.1#src/main/dataset/lib/DatasetValues",["./DatasetValues32","./DatasetValuesJson"],function(DatasetValues32,DatasetValuesJson){return function(dataset,$http,$rootScope,datasetRespObj){var instance;return instance=datasetRespObj&&datasetRespObj.values.length>0?new DatasetValuesJson(dataset,$http,$rootScope):new DatasetValues32(dataset,$http,$rootScope),{getByKey:instance.getByKey.bind(instance),getSome:instance.getSome.bind(instance),getDict:instance.getDict.bind(instance)}}});
/*mev-dataset@0.0.1#src/main/dataset/lib/DatasetClass*/
define("mev-dataset@0.0.1#src/main/dataset/lib/DatasetClass",["./datasetStatistics","./selectionSort","./selectionHelpers","./expressionModule","./DatasetValues"],function(datasetStatistics,selectionSort,selectionHelpers,expressionModule,DatasetValues){"use strict";function inversion(){var self=this,obj=Object.create(null);return self.map(function(label,index){obj[label]=index}),obj}function ranger(n){for(var r=[],i=0;n>i;i++)r.push(i);return r}return function(datasetName,datasetRespObj,$http,$rootScope){if(!datasetName)throw new TypeError("datasetName parameter not defined");if(!datasetRespObj)throw new TypeError("datasetRespObj parameter not defined");var self=this;this.id=datasetName,this.datasetName=datasetName,this.column=datasetRespObj.column,this.row=datasetRespObj.row,this.columnLabels2Indexes=inversion.call(datasetRespObj.column.keys),this.rowLabels2Indexes=inversion.call(datasetRespObj.row.keys),this.column.indexOf=function(label){return self.columnLabels2Indexes[label]},this.row.indexOf=function(label){return self.columnLabels2Indexes[label]},this.selections={column:datasetRespObj.column.selections,row:datasetRespObj.row.selections,intersection:function(params){return selectionHelpers.selectionIntersect.call(self,params)}},this.analyses=datasetRespObj.analyses||[],this.values=datasetRespObj.values,this.valueStore=new DatasetValues(this,$http,$rootScope,this),this.expression={values:datasetRespObj.values,data:{getRow:function(index){for(var row=[],c=0;c<self.column.keys.length;c++)row.push({value:datasetRespObj.dataview.getFloat64((index+c)*Float64Array.BYTES_PER_ELEMENT,!1),row:self.row.keys[index],column:self.column.keys[c]});return row}},max:datasetRespObj.max,min:datasetRespObj.min,avg:datasetRespObj.avg,tryGet:this.valueStore.getByKey,getSome:this.valueStore.getSome,getDict:this.valueStore.getDict,get:function(labelPair){var r=self.rowLabels2Indexes[labelPair[0]],c=self.columnLabels2Indexes[labelPair[1]];return{value:datasetRespObj.dataview.getFloat64((r*self.column.keys.length+c)*Float64Array.BYTES_PER_ELEMENT,!1),row:labelPair[0],column:labelPair[1]}},statistics:datasetStatistics,ranger:ranger},this.expression.sort=selectionSort;for(var k=0;k<datasetRespObj.values.length;k++)if(datasetRespObj.values[k].value%1!==0){self.expression.hasNonIntegerValues=!0;break}this.expression.retrieve=function(input){return expressionModule.retrieve.call(self,input)}}});
/*mev-dataset@0.0.1#src/main/dataset/lib/AnalysisClass*/
define("mev-dataset@0.0.1#src/main/dataset/lib/AnalysisClass",["lodash"],function(_){return function(initialData){var self=this,internalViewTypes={"Hierarchical Clustering":"tree"};self.randomId=Math.random().toString(36).substring(7),self.viewType=internalViewTypes[initialData.type],_.extend(self,initialData)}});
/*mev-dataset@0.0.1#src/main/dataset/lib/loadAnalyses*/
define("mev-dataset@0.0.1#src/main/dataset/lib/loadAnalyses",["./AnalysisClass"],function(AnalysisClass){return function(){var self=this;self.analyses=[];return self.analysis.getAll({datasetName:self.datasetName}).$promise.then(function(response){var requests=[],analyses=[];return response.names.map(function(name){var request=self.analysis.get({datasetName:self.datasetName,analysisName:name},function(res){var analysis=new AnalysisClass(res),sessionStorageKey=self.datasetName+"."+name;console.debug("sessionStorageKey get",sessionStorageKey),params=JSON.parse(sessionStorage.getItem(self.datasetName+"."+name)),analysis.params=params,console.debug("LoadAnalysis",analysis.name,analysis),analyses.push(analysis)});requests.push(request.$promise)}),self.$q.all(requests).then(function(response){return self.analyses.length=0,console.debug("qall",response),analyses.map(function(analysis){self.analyses.push(analysis)}),self.analyses})}).then(function(response){console.debug("qall2",response),self.analysisEventBus.analysisLoadedAll()})}});
/*mev-dataset@0.0.1#src/main/dataset/lib/setSelections*/
define("mev-dataset@0.0.1#src/main/dataset/lib/setSelections",[],function(){return function(dimension,selections){var self=this;return self[dimension].selections=selections,self.selections[dimension]=selections,null}});
/*mev-dataset@0.0.1#src/main/dataset/lib/resetSelections*/
define("mev-dataset@0.0.1#src/main/dataset/lib/resetSelections",[],function(){return function(dimension){var self=this;if(dimension)return self.selection.getAll({datasetName:self.datasetName,dimension:dimension},function(response){return self.setSelections(dimension,response.selections),response.selections});var row=self.selection.getAll({datasetName:self.datasetName,dimension:"row"},function(response){return self.setSelections("row",response.selections),response.selections});return row.$promnise.then(function(){self.selection.getAll({datasetName:self.datasetName,dimension:"column"},function(response){return self.setSelections("column",response.selections),response.selections})})}});
/*mev-dataset@0.0.1#src/main/dataset/Dataset*/
"use strict";define("mev-dataset@0.0.1#src/main/dataset/Dataset",["mui","./lib/DatasetClass","./lib/loadAnalyses","./lib/setSelections","./lib/resetSelections"],function(angular,DatasetClass,loadAnalyses,setSelections,resetSelections){return angular.module("Mev.DatasetMock",[]).factory("DatasetFactory",["$q","$http","$rootScope",function($q,$http,$rootScope,AnalysisResourceService,SelectionResourceService,analysisEventBus,DashboardItems){return function(datasetName,datasetResponseObj){var dataset=new DatasetClass(datasetName,datasetResponseObj,$http,$rootScope);return dataset.analysis=AnalysisResourceService,console.debug("api:AnalysisResourceService",AnalysisResourceService,dataset.analysis),dataset.selection=SelectionResourceService,dataset.$q=$q,dataset.analysisEventBus=analysisEventBus,dataset.loadAnalyses=loadAnalyses,dataset.setSelections=setSelections,dataset.resetSelections=resetSelections,dataset.getAnnotations=function(dimension){return this._annotations||(this._annotations={row:{getFields:function(){return[]}},column:{getFields:function(){return[]}}}),this._annotations[dimension]},dataset}}])});
/*mev-dataset@0.0.1#src/main/endpoint/rest/DatasetRest*/
define("mev-dataset@0.0.1#src/main/endpoint/rest/DatasetRest",["lodash"],function(_){var DatasetRest=function($resource,$q,$http,$rootScope,mevDb){function formatDatasetName(name){return _.endsWith(name,".zip")?name.substring(0,name.length-4):name}var resource=$resource("/dataset/:datasetName/data",{format:"json"},{get:{method:"GET"},getAll:{url:"/dataset",method:"GET",isArray:!0},subset:{url:"/dataset/:datasetName/data/subset/export",method:"POST"},"delete":{url:"/dataset/:datasetName",method:"DELETE"}}),DatasetResource=Object.create(resource);return DatasetResource.get=function(params,data,callback){var deferred=$q.defer(),cache={$promise:deferred.promise,$resolved:!1};mevDb.getDataset(params.datasetName)["catch"](function(e){return 404===e.status||501===e.status?(_.assign(cache,resource.get(params,data,callback)),cache.$promise.then(function(response){return mevDb.putDataset(_.assign(response,{id:params.datasetName})),response})):void 0}).then(function(response){return deferred.resolve(_.extend(response,{$promise:cache.$promise}))});return cache},DatasetResource.getAll=function(params,data,callback){var datasetsResource=resource.getAll(params,data,callback);return datasetsResource.$promise.then(function(response){$rootScope.$broadcast("mev:datasets:list:refreshed",response)}),datasetsResource},DatasetResource.subset=function(params,data,callback){data.name=params.datasetName+"--"+data.name;var datasetsResource=resource.subset(params,data,callback);return datasetsResource.$promise.then(function(response){$http({method:"POST",url:"/annotations/"+params.datasetName+"/annotation/row/export?destId="+data.name}),$http({method:"POST",url:"/annotations/"+params.datasetName+"/annotation/column/export?destId="+data.name}),DatasetResource.getAll()}),datasetsResource},DatasetResource.uploadFile=function(file,cbProgress,cbCompleted){var formdata=new FormData;formdata.append("upload",file),formdata.append("name",file.name);var xhr=new XMLHttpRequest;cbProgress&&(xhr.upload.onprogress=function(event){console.debug("upload",event),event.lengthComputable&&cbProgress(Math.floor(event.loaded/event.total*100),event)}),xhr.onreadystatechange=function(){console.debug("xhr",xhr),4==xhr.readyState&&200==xhr.status&&($rootScope.$apply($rootScope.$broadcast.bind($rootScope,"mev:dataset:uploaded",file)),cbCompleted&&cbCompleted(),DatasetResource.getAll())},xhr.open("POST","/dataset",!0),xhr.send(formdata),$rootScope.$apply($rootScope.$broadcast.bind($rootScope,"mev:dataset:upload:started",file))},DatasetResource.activate=function(dataset){return mevDb.getDataset(dataset.id).then(function(dataset){return mevDb.getDatasetValues64(dataset.id).then(function(values){var formdata=new FormData;formdata.append("name",dataset.id),formdata.append("rows",dataset.row.keys),formdata.append("rowSelections",JSON.stringify(dataset.row.selections)),formdata.append("columns",dataset.column.keys),formdata.append("columnSelections",JSON.stringify(dataset.column.selections)),formdata.append("upload",values);var xhr=new XMLHttpRequest;xhr.upload.addEventListener("progress",function(e){}),xhr.onreadystatechange=function(){4==xhr.readyState&&200==xhr.status&&($rootScope.$broadcast("mev:dataset:activated",dataset),DatasetResource.getAll())},xhr.open("POST","/import/binary",!0),xhr.send(formdata)})})},DatasetResource.importZip=function(file,cbProgress,cbCompleted){return mevDb.deleteDataset(formatDatasetName(file.name)).then(function(){var formdata=new FormData;formdata.append("upload",file),formdata.append("name",file.name);var xhr=new XMLHttpRequest;cbProgress&&(xhr.upload.onprogress=function(event){console.debug("upload",event),event.lengthComputable&&cbProgress(Math.floor(event.loaded/event.total*100),event)}),xhr.onreadystatechange=function(){4==xhr.readyState&&200==xhr.status&&($rootScope.$apply($rootScope.$broadcast.bind($rootScope,"mev:dataset:imported",file)),cbCompleted&&cbCompleted(),DatasetResource.getAll())},xhr.open("POST","/import/zip",!0),xhr.send(formdata),$rootScope.$apply($rootScope.$broadcast.bind($rootScope,"mev:dataset:import:started",file))})},DatasetResource["export"]=function(dataset){return mevDb.getDataset(dataset.id).then(function(dataset){return mevDb.getAnalysesAll(dataset.id).then(function(analyses){var formdata=new FormData;formdata.append("name",dataset.id),formdata.append("rows",dataset.row.keys),formdata.append("rowSelections",JSON.stringify(dataset.row.selections)),formdata.append("columns",dataset.column.keys),formdata.append("columnSelections",JSON.stringify(dataset.column.selections)),analyses.forEach(function(analysis){formdata.append("analyses",JSON.stringify(analysis))});var xhr=new XMLHttpRequest;xhr.upload.addEventListener("progress",function(e){}),xhr.onreadystatechange=function(){if(4==xhr.readyState&&200==xhr.status){$rootScope.$broadcast("mev:dataset:exported",dataset);var blob=new Blob([xhr.response],{type:"octet/stream"}),fileName=dataset.id+".zip";saveAs(blob,fileName)}},xhr.open("POST","/export/zip",!0),xhr.responseType="arraybuffer",xhr.setRequestHeader("Accept","application/octet-stream"),xhr.send(formdata)})})},DatasetResource["delete"]=function(params,data,callback){var datasetsResource=resource["delete"](params,data,callback);return datasetsResource.$promise.then(function(response){DatasetResource.getAll()})["catch"](function(e){throw e}),datasetsResource},DatasetResource};return DatasetRest.$inject=["$resource","$q","$http","$rootScope","mevDb"],DatasetRest.$name="mevDatasetRest",DatasetRest.$provider="service",DatasetRest});
/*mev-dataset@0.0.1#src/main/endpoint/rest/SelectionRest*/
define("mev-dataset@0.0.1#src/main/endpoint/rest/SelectionRest",["lodash"],function(_){var SelectionRest=function($resource,$routeParams,$http,datasetResource,$rootScope,$q,mevWorkspace,mevDb){var resource=$resource("/dataset/:datasetName/:dimension/selection",{format:"json"},{getAll:{url:"/dataset/:datasetName/:dimension/selections",method:"GET"},get:{method:"GET",url:"/dataset/:datasetName/:dimension/selection/:selectionName"},post:{method:"POST",url:"/dataset/:datasetName/:dimension/selection/"},put:{method:"PUT",url:"/dataset/:datasetName/:dimension/selection/"},"export":{method:"POST",url:"/dataset/:datasetName/:dimension/selection/export"},"delete":{method:"DELETE",url:"/dataset/:datasetName/:dimension/selection/:selectionName"}}),SelectionResource=Object.create(resource);return SelectionResource.post=function(params,data,callback){var result=resource.post(params,data,callback);return result.$promise.then(function(response){$rootScope.$broadcast("mui:dataset:selections:added",params.dimension,params,data,response)}),result},SelectionResource.put=function(params,data,callback){var result=resource.put(params,data,callback);return result.$promise.then(function(response){$rootScope.$broadcast("mui:dataset:selections:added",params.dimension,params,data,response)}),result},SelectionResource.getAll=function(params,callback){var deferred=$q.defer(),cache={$promise:deferred.promise,$resolved:!1};return mevWorkspace.getDataset(params.datasetName).then(function(dataset){return dataset&&dataset.isActive?resource.getAll(params).$promise.then(function(response){return response.selections.map(function(selection){return selection.type=params.dimension,selection})}):[]}).then(function(remote){return mevDb.getDataset(params.datasetName)["catch"](function(e){if(501===e.status)return void 0;throw e}).then(function(dataset){var remoteAndLocal=dataset?_.unionBy(remote,dataset[params.dimension].selections,function(selection){return selection.name}):remote;return callback&&callback({selections:remoteAndLocal}),deferred.resolve(remoteAndLocal),remoteAndLocal})})["catch"](function(e){throw console.error("Error fetching selection list: ",params,e),deferred.reject(e),e}),cache},SelectionResource["export"]=function(params,data,callback){data.name=params.datasetName+"--"+data.name;var result=resource["export"](params,data,callback);result.$promise.then(function(response){$http({method:"POST",url:"/annotations/"+params.datasetName+"/annotation/row/export?destId="+data.name}),$http({method:"POST",url:"/annotations/"+params.datasetName+"/annotation/column/export?destId="+data.name}),datasetResource.getAll()})},SelectionResource["delete"]=function(params,data,callback){var deferred=$q.defer(),cache={$promise:deferred.promise,$resolved:!1};return mevWorkspace.getDataset(params.datasetName).then(function(dataset){return dataset&&dataset.isActive?resource["delete"](params,data,callback).$promise.then(function(response){return response})["catch"](function(e){if(404===e.status)return e;throw e}):{status:200}}).then(function(remote){if(!remote.status||200!==remote.status&&404!==remote.status)throw new Error("Failed to delete selection");return mevDb.getDataset(params.datasetName).then(function(dataset){return _.remove(dataset[params.dimension].selections,function(selection){return selection.name===params.selectionName}),mevDb.putDataset(dataset).then(function(local){return callback&&callback(remote),deferred.resolve(remote),remote})})}).then(function(response){$rootScope.$broadcast("mui:dataset:selections:deleted",params.dimension,params,response)})["catch"](function(e){throw console.error("Error fetching selection list: ",params,e),deferred.reject(e),e}),cache},SelectionResource};return SelectionRest.$inject=["$resource","$routeParams","$http","mevDatasetRest","$rootScope","$q","mevWorkspace","mevDb"],SelectionRest.$name="mevSelectionRest",SelectionRest.$provider="service",SelectionRest});
/*mev-dataset@0.0.1#src/main/mev-dataset*/
define("mev-dataset@0.0.1#src/main/mev-dataset",["mui","angular-resource","./dataset/Dataset","./endpoint/rest/DatasetRest","./endpoint/rest/SelectionRest"],function(ng){"use strict";return ng.module("mevDataset",arguments,arguments)});
/*mev-annotations@0.0.1#src/main/endpoint/AnnotationProjectIdResource*/
define("mev-annotations@0.0.1#src/main/endpoint/AnnotationProjectIdResource",["mui"],function(){function component($resource,$stateParams){url="/annotations/:datasetName/annotation/:dimension/get-project-id";var AnnotationProjectIdResource=$resource(url,{format:"json"});this.get=function(dimension,datasetId){return AnnotationProjectIdResource.get({datasetName:$stateParams.datasetId||datasetId,dimension:dimension||"column"}).$promise}}return component.$name="AnnotationProjectIdResource",component.$inject=["$resource","$stateParams"],component.$provider="service",component});
/*mev-annotations@0.0.1#src/main/endpoint/AnnotationFieldsResource*/
define("mev-annotations@0.0.1#src/main/endpoint/AnnotationFieldsResource",["mui"],function(){function component($q,$resource,$stateParams,AnnotationProjectIdResource){var _self=this,url="/annotations/:datasetName/annotation/:dimension/new/dataset/command/core/get-columns-info";this.AnnotationFieldsResource=$resource(url,{datasetName:$stateParams.datasetId},{get:{method:"GET",isArray:!0}}),this.get=function(dimension){return AnnotationProjectIdResource.get(dimension).then(function(data){if(data.project<=0)return $q.when({error:-1});data.datasetName=$stateParams.datasetId,data.dimension=dimension;var fieldsPromise=_self.AnnotationFieldsResource.get(data).$promise;return fieldsPromise.params=data,fieldsPromise})}}return component.$name="AnnotationFieldsResource",component.$inject=["$q","$resource","$stateParams","AnnotationProjectIdResource"],component.$provider="service",component});
/*mev-annotations@0.0.1#src/main/endpoint/AnnotationValuesResource*/
define("mev-annotations@0.0.1#src/main/endpoint/AnnotationValuesResource",["mui"],function(){function component($q,$resource,$stateParams,AnnotationProjectIdResource){var _self=this,url="/annotations/:datasetName/annotation/:dimension/new/dataset/command/core/get-rows";this.AnnotationValuesResource=$resource(url,{datasetName:$stateParams.datasetId,limit:3e4}),this.get=function(dimension){return AnnotationProjectIdResource.get(dimension).then(function(data){return data.project<=0?$q.when({error:"OpenRefine - project not found"}):(data.datasetName=$stateParams.datasetId,data.dimension=dimension,_self.AnnotationValuesResource.get(data).$promise)})}}return component.$name="AnnotationValuesResource",component.$inject=["$q","$resource","$stateParams","AnnotationProjectIdResource"],component.$provider="service",component});
/*mev-annotations@0.0.1#src/main/endpoint/AnnotationExportResource*/
define("mev-annotations@0.0.1#src/main/endpoint/AnnotationExportResource",["lodash"],function(_){"use strict";var component=function($http,$q,$stateParams,AnnotationProjectIdResource){function AnnotationNotFoundOnServerError(){var temp=Error.apply(this,arguments);temp.name=this.name="AnnotationNotFoundOnServer",this.stack=temp.stack,this.message=temp.message}AnnotationNotFoundOnServerError.prototype=Object.create(Error.prototype,{constructor:{value:AnnotationNotFoundOnServerError,writable:!0,configurable:!0}});var source={"export":function(datasetId,dimension){datasetId=$stateParams.datasetId||datasetId;var url="/annotations/"+datasetId+"/annotation/"+dimension+"/new/dataset/command/core/export-project/"+datasetId+".google-refine.tar.gz";return AnnotationProjectIdResource.get(dimension,datasetId).then(function(response){if(response.project<=0)throw new AnnotationNotFoundOnServerError("Could not find "+dimension+" annotations for dataset "+datasetId+" at "+url);return $http.post(url,{},{params:{project:response.project},responseType:"arraybuffer",headers:{Accept:"application/x-gzip"}})})},"import":function(datasetId,dimension,data){var deferred=$q.defer(),url="/annotations/"+datasetId+"/annotation/"+dimension+"/import",formdata=new FormData;formdata.append("upload",data);var xhr=new XMLHttpRequest;return xhr.upload.addEventListener("progress",function(e){}),xhr.onreadystatechange=function(){4==xhr.readyState&&(200==xhr.status?deferred.resolve(200):deferred.reject(xhr.status))},xhr.open("POST",url,!0),xhr.send(formdata),deferred.promise}};_.assign(this,source)};return component.$name="AnnotationExportResource",component.$provider="service",component.$inject=["$http","$q","$stateParams","AnnotationProjectIdResource"],component});
/*mev-annotations@0.0.1#src/main/model/AnnotationRepository*/
define("mev-annotations@0.0.1#src/main/model/AnnotationRepository",[],function(){"use strict";var AnnotationRepository=function($rootScope,$q,AnnotationFieldsResource,AnnotationValuesResource,AnnotationProjectIdResource,AnnotationExportResource,mevDb){return function(dimension){function _createFieldNameToIndexMap(columns){_columns=columns;for(var i=0;i<columns.length;i++)_fieldNameToIndexMap[columns[i].name]=i,columns[i].idx=i;return console.debug("AnnotationRepository",_fieldNameToIndexMap),columns}function _isOld(){return AnnotationProjectIdResource.get(dimension).then(function(data){return _projectId&&_projectId!==data.project?!0:_projectId?!1:(_projectId=data.project,!0)})}var _columns,_fieldsPromise,_valuesPromise,_initPromise,_self=this,_projectId=!1,_fieldNameToIndexMap={},_dimension=dimension;_self.loadAnnotations=function(reload){return _initPromise&&!reload?_initPromise:(_fieldsPromise=AnnotationFieldsResource.get(dimension),_valuesPromise=AnnotationValuesResource.get(dimension),_initPromise=$q.all({columns:_fieldsPromise,rows:_valuesPromise}),_fieldsPromise.then(_createFieldNameToIndexMap),_initPromise)},_self.saveAnnotations=function(project,dimension){var datasetId=project.metadata.customMetadata.datasetName;return dimension=dimension||_dimension||(project.metadata.customMetadata.dimension?project.metadata.customMetadata.dimension.toLowerCase():void 0),console.debug("loaded column annotations",project,datasetId,dimension),_self["export"](datasetId,dimension).then(function(blob){return mevDb.putAnnotations(datasetId,dimension,blob)})},$rootScope.$on("openRefine:loadedAnnotations:row",function(event,project){return console.debug("loaded row annotations",project),_self.saveAnnotations(project)}),$rootScope.$on("openRefine:loadedAnnotations:column",function(event,project){return console.debug("loaded column annotations",project),_self.saveAnnotations(project)}),_self.getFields=function(){return _isOld().then(function(isOld){return isOld&&_self.loadAnnotations(!0),_fieldsPromise.then(function(){return _columns})})},_self.getDataKeyVal=function(fields){return _self.loadAnnotations().then(function(data){var results=[];if("undefined"!=typeof data.columns.error||"undefined"!=typeof data.rows.error)return results;for(var irow=0;irow<data.rows.rows.length;irow++)for(var curRow=data.rows.rows[irow],rowValues=curRow.cells,ifield=0;ifield<fields.length;ifield++){var curFieldName=fields[ifield],curFieldIndex=_fieldNameToIndexMap[curFieldName];"undefined"!=typeof curFieldIndex&&results.push({columnId:curFieldName,key:rowValues[0].v,value:rowValues[curFieldIndex].v})}return results})},_self.getDataTable=function(fields){return _self.loadAnnotations().then(function(data){var results=[];if("undefined"!=typeof data.columns.error||"undefined"!=typeof data.rows.error)return results;for(var keyColumn=data.columns.find(function(column){return"sampleid"===column.name.toLowerCase()||"id"===column.name.toLowerCase()||"mevid"===column.name.toLowerCase()}),keyIdx=keyColumn?keyColumn.idx:0,irow=0;irow<data.rows.rows.length;irow++){for(var curRow=data.rows.rows[irow],rowValues=curRow.cells,row={key:rowValues[keyIdx].v},ifield=0;ifield<fields.length;ifield++){var curFieldName=fields[ifield],curFieldIndex=_fieldNameToIndexMap[curFieldName];"undefined"!=typeof curFieldIndex&&(row[curFieldName]=rowValues[curFieldIndex].v)}results.push(row)}return results})},_self.getMapping=function(field,key){return _self.loadAnnotations().then(function(data){var fromIndex=key?_fieldNameToIndexMap[key]:_fieldNameToIndexMap.probeset_id?_fieldNameToIndexMap.probeset_id:6,toIndex=_fieldNameToIndexMap[field],map={};if("undefined"!=typeof data.columns.error)throw new Error("Error in AnnotationRepository columns:"+data.columns.error);if("undefined"!=typeof data.rows.error)throw new Error("Error in AnnotationRepository rows:"+data.rows.error);for(var irow=0;irow<data.rows.rows.length;irow++){var curRow=data.rows.rows[irow],rowValues=curRow.cells;rowValues[fromIndex]&&(map[rowValues[fromIndex].v]=rowValues[toIndex].v)}return map})},_self["export"]=function(datasetId,dimension){return AnnotationExportResource["export"](datasetId,dimension).then(function(response){return console.debug(response),new Blob([response.data],{type:"application/x-gzip"})})["catch"](function(e){throw e})},_self["import"]=function(datasetId,dimension){mevDb.getAnnotations(datasetId,dimension).then(function(blob){return AnnotationExportResource["import"](datasetId,dimension,blob)})["catch"](function(e){throw console.error("Error importing annotatinos",datasetId,dimension),e})}}};return AnnotationRepository.$name="mevAnnotationRepository",AnnotationRepository.$inject=["$rootScope","$q","AnnotationFieldsResource","AnnotationValuesResource","AnnotationProjectIdResource","AnnotationExportResource","mevDb"],AnnotationRepository.$provider="factory",AnnotationRepository});
/*mev-annotations@0.0.1#src/main/utils/OpenRefineBridge*/
define("mev-annotations@0.0.1#src/main/utils/OpenRefineBridge",["jquery","angular"],function(jquery,angular){return OpenRefineBridge={addSelectionSet:function(selection){console.debug("in addSelectionSet"),console.debug("selection",selection);var elm=document.querySelector("#selectionSetMgr"),selectionSetMgrDOM=angular.element(elm),rootScope=angular.element(document).scope();rootScope.$state&&rootScope.$state.go("^."+selection.dimension.toLowerCase()+"Set",{setId:selection.name});var selectionSetManagerScope=selectionSetMgrDOM.scope();console.debug("selectionSetManagerScope:",selectionSetManagerScope),selectionSetManagerScope?selectionSetManagerScope.addItem(selection):rootScope.$broadcast("mui:dataset:selections:added",selection.dimension.toLowerCase(),selection)},loadedProject:function(theProject){var rootScope=angular.element(document).scope();console.debug("loadedProject",theProject),"COLUMN"===theProject.metadata.customMetadata.dimension?rootScope.$broadcast("openRefine:loadedAnnotations:column",theProject):"ROW"===theProject.metadata.customMetadata.dimension?rootScope.$broadcast("openRefine:loadedAnnotations:row",theProject):rootScope.$broadcast("openRefine:loadedAnnotations",theProject)},openDataset:function(dataset){console.debug("in openDataset"),console.debug("dataset:"+angular.toJson(dataset)),jquery("#import-presets-modal").modal("hide"),jquery("div.modal-backdrop").hide();var rootScope=angular.element(document).scope();if(rootScope.$state)return void rootScope.$state.go("root.dataset.home",{datasetId:dataset.name});var datasetUrl="/#/dataset/"+dataset.name+"/";window.location.replace(datasetUrl)},showPresetList:function(){var elm=document.querySelector("#presetMgr"),presetMgrDOM=angular.element(elm),presetManagerScope=presetMgrDOM.scope(),presetManagerController=presetMgrDOM.controller();console.debug("presetManagerScope:"+angular.toJson(presetManagerScope)),console.debug("presetManagerScope.orderByColumn:"+presetManagerScope.orderByColumn),console.debug("presetManagerController.orderByColumn:"+presetManagerController.orderByColumn),presetManagerScope.showPresetList(),presetManagerScope.$apply()}},OpenRefineBridge});
/*mev-annotations@0.0.1#src/main/mevAnnotations.module*/
define("mev-annotations@0.0.1#src/main/mevAnnotations.module",["mui","./endpoint/AnnotationProjectIdResource","./endpoint/AnnotationFieldsResource","./endpoint/AnnotationValuesResource","./endpoint/AnnotationExportResource","./model/AnnotationRepository","./utils/OpenRefineBridge"],function(ng){"use strict";return ng.module("mevAnnotations",arguments,arguments)});
/*mev-workspace@0.0.1#src/main/model/Workspace*/
define("mev-workspace@0.0.1#src/main/model/Workspace",["lodash"],function(_){"use strict";var service=function($http,$q,mevDb,DatasetResource){function getDatasets(){var localDbsPromise=mevDb.getDatasets().then(function(dbs){return dbs})["catch"](function(err){throw err}),remoteDbsPromise=$http({method:"GET",url:"/dataset",params:{format:"json"}}).then(function(remoteDbs,status,headers,config){return remoteDbs.data}),allDbsPromise=$q.all([localDbsPromise,remoteDbsPromise]).then(function(dbs){var local=dbs[0],remote=dbs[1];console.debug("workspace local",local),console.debug("workspace remote",remote);var active=remote.map(function(name){return{id:name,name:name,isActive:!0,getStatus:mevDb.getStatus.bind(mevDb,name)}}),inactive=_.difference(local,remote).map(function(name){return{id:name,name:name,isActive:!1,getStatus:mevDb.getStatus.bind(mevDb,name)}});return _.concat(active,inactive)})["catch"](function(e){throw e});return allDbsPromise}function activateDataset(datasetId){}function getActiveDatasets(){return getDatasets().then(function(datasets){return datasets.filter(function(dataset){return dataset.isActive})})}function getInactiveDatasets(){return getDatasets().then(function(datasets){return datasets.filter(function(dataset){return!dataset.isActive})})}function activateDataset(dataset){return DatasetResource.activate(dataset)}function exportDataset(dataset){return DatasetResource["export"](dataset)}function deleteDataset(datasetId){return mevDb.deleteDataset(datasetId)}function getDataset(datasetId){return getDatasets().then(function(datasets){return datasets.find(function(dataset){return dataset.id===datasetId})})}function deactivate(datasetId){return DatasetResource["delete"]({datasetName:datasetId}).$promise}function saveEmail(email){}this.getDatasets=getDatasets,this.getActiveDatasets=getActiveDatasets,this.getInactiveDatasets=getInactiveDatasets,this.activateDataset=activateDataset,this.deleteDataset=deleteDataset,this.getDataset=getDataset,this.exportDataset=exportDataset,this.deactivate=deactivate,this.saveEmail=saveEmail};return service.$inject=["$http","$q","mevDb","mevDatasetRest"],service.$name="mevWorkspace",service.$provider="service",service});
/*mev-workspace@0.0.1#src/main/router/WorkspaceState*/
define("mev-workspace@0.0.1#src/main/router/WorkspaceState",[],function(){var config=function($stateProvider,$urlRouterProvider){$urlRouterProvider.deferIntercept(),$stateProvider.state("root.datasets.workspace",{url:"/workspace",parent:"root.datasets",displayName:!1,views:{"workspace@root.datasets":{template:"<div mev-workspace-list></div>"}},sticky:!0})};return config.$inject=["$stateProvider","$urlRouterProvider"],config.$provider="config",config});
/*mev-workspace@0.0.1#src/main/router/WorkspaceStateInit*/
define("mev-workspace@0.0.1#src/main/router/WorkspaceStateInit",[],function(){"use strict";var run=function($rootScope,$state,$stickyState,$q,$urlRouter){$rootScope.$on("$stateChangeSuccess",function(evt,toState,toParams,fromState,fromParams){var inactive=$stickyState.getInactiveStates();!inactive.find(function(state){return"root.datasets.workspace"===state.name})&&$state.includes("root.datasets")&&"root.datasets.workspace"!==toState.name&&"root.datasets.workspace"!==fromState.name&&$state.go("root.datasets.workspace",void 0,{location:!1}).then(function(){$state.go(toState,toParams)})});var preloadStates=$state.get().filter(function(state){return state.preload}),initialPromise=$q.when(),preloadPromise=preloadStates.reduce(function(prevPromise,preloadState){return prevPromise.then(function(){return $state.go(preloadState,void 0,{location:!1})})},initialPromise);preloadPromise.then(function(){$urlRouter.listen()})};return run.$inject=["$rootScope","$state","$stickyState","$q","$urlRouter"],run.$provider="run",run});
/*mev-workspace@0.0.1#src/main/view/list/WorkspaceList.tpl.html!system-text@0.1.0#text*/
define("mev-workspace@0.0.1#src/main/view/list/WorkspaceList.tpl.html!system-text@0.1.0#text",function(require,exports,module){module.exports='<table class="table table-hover table-condensed">\n    <thead>\n    <tr>\n        <th>Your datasets</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr ng-show="datasetsByStatus.active.length>0" ng-repeat="row in datasetsByStatus.active">\n        <!--  <td><a href="#/dataset/{{row}}"> <i class="icon-file"></i> {{row}}</a></td> -->\n        <td>\n            <a href="#/dataset/{{row}}" ui-sref="root.dataset.home({datasetId: row.id})">\n                <i class="icon-file"></i> {{row.id}}\n            </a>\n            <a href="" ng-click="vm.export(row)" title="download zip" class="btn btn-xs">\n                <i ng-class="{\'fa fa-file-archive-o\': !vm.getExportStatus(row.id), \'fa fa-spinner fa-spin\': vm.getExportStatus(row.id)}"></i>\n            </a>\n            <a href="" ng-click="vm.deactivate(row.id)" title="deactivate" class="btn btn-xs">\n                <i class="fa fa-close"></i>\n            </a>\n            &nbsp;\n            <span class="pull-right">\n                <i ng-show="vm.isSaved(row)" class="fa fa-check-circle"></i>\n                <i ng-hide="vm.isSaved(row)" class="fa fa-spinner fa-spin"></i>\n            </span>\n        </td>\n    <tr>\n    <tr ng-show="datasetsByStatus.active.length<=0">\n    <td><a ui-sref="root.datasets.imports.upload">Upload</a> your data file (tsv)\n        or import a curated <a ui-sref="root.datasets.imports.tcga">TCGA</a>\n        or <a ui-sref="root.datasets.imports.geods">GEO</a> dataset</td>\n    <tr>\n    </tbody>\n</table>\n<table ng-show="datasetsByStatus.inactive.length>0" class="table table-hover table-condensed">\n    <thead>\n    <tr>\n        <th>Offline datasets</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr ng-repeat="row in datasetsByStatus.inactive">\n        <!--  <td><a href="#/dataset/{{row}}"> <i class="icon-file"></i> {{row}}</a></td> -->\n        <td >\n            <span>{{row.id}}</span>\n            <a href="" ng-click="vm.activate(row)" title="activate" class="btn btn-xs">\n                <i ng-hide="row.status===\'activating\'" class="glyphicon glyphicon-cloud-upload"></i>\n                <i ng-show="row.status===\'activating\'" class="fa fa-spinner fa-spin"></i>\n            </a>\n            <a href="#/dataset/{{row}}" ui-sref="root.dataset.home({datasetId: row.id})" title="view readonly" class="btn btn-xs">\n                <i class="glyphicon glyphicon-eye-open"></i>\n            </a>\n            <a href="" ng-click="vm.delete(row.id)" title="delete" class="btn btn-xs">\n                <i class="fa fa-close"></i>\n            </a>\n        </td>\n    <tr>\n    </tbody>\n</table>'});
/*mev-workspace@0.0.1#src/main/view/list/WorkspaceListDirective*/
define("mev-workspace@0.0.1#src/main/view/list/WorkspaceListDirective",["./WorkspaceList.tpl.html","./WorkspaceList.less"],function(tempalte){var directive=function(mevWorkspace,mevAnnotationRepository,$timeout){return{restrict:"EAC",template:tempalte,scope:{},link:function(scope,elm,attr,ctrl){function updateDatasetList(){mevWorkspace.getDatasets().then(function(datasets){scope.datasets=datasets,scope.datasetsByStatus={active:scope.datasets.filter(function(dataset){return dataset.isActive}),inactive:scope.datasets.filter(function(dataset){return!dataset.isActive})}})}scope.vm={activate:function(dataset){dataset.status="activating",mevWorkspace.activateDataset(dataset)},"delete":function(datasetId){return confirm("Delete dataset '"+datasetId+"'?")?mevWorkspace.deleteDataset(datasetId).then(updateDatasetList):void 0},deactivate:function(datasetId){return confirm("Deactivate dataset '"+datasetId+"'?")?mevWorkspace.deactivate(datasetId).then(updateDatasetList):void 0},showStatus:function(row){var status=row.getStatus();return status},isSaved:function(row){return"saved"===row.getStatus()},"export":function(dataset){this.exportStatus[dataset.id]=!0,mevWorkspace.exportDataset(dataset)},exportStatus:{},getExportStatus:function(datasetId){return this.exportStatus[datasetId]}},scope.$on("mev:datasets:list:refreshed",function(){updateDatasetList()}),updateDatasetList(),scope.$on("mev:dataset:activated",function(event,dataset){dataset.status="active";var row=new mevAnnotationRepository("row");row["import"](dataset.id,"row");var column=new mevAnnotationRepository("column");column["import"](dataset.id,"column")}),scope.$on("mev:dataset:exported",function(event,dataset){$timeout(function(){scope.vm.exportStatus[dataset.id]=!1})})}}};return directive.$name="mevWorkspaceList",directive.$provider="directive",directive.$inject=["mevWorkspace","mevAnnotationRepository","$timeout"],directive});
/*mev-workspace@0.0.1#src/main/view/upload/UploadDataset.tpl.html!system-text@0.1.0#text*/
define("mev-workspace@0.0.1#src/main/view/upload/UploadDataset.tpl.html!system-text@0.1.0#text",function(require,exports,module){module.exports='<button class="btn btn-block btn-danger">\n    <span ng-show="vm.status===\'idle\'">Upload</span>\n    <span ng-show="vm.status===\'uploading\'">Upload {{vm.percent}}%</span>\n    <span ng-show="vm.status===\'processing\'">Processing <i class="fa fa-spinner fa-spin"></i></span>\n</button>\n<input id="upload-input" type="file" size="chars" multiple >\n\n\n'});
/*mev-workspace@0.0.1#src/main/view/upload/UploadDatasetDirective*/
define("mev-workspace@0.0.1#src/main/view/upload/UploadDatasetDirective",["lodash","./UploadDataset.tpl.html"],function(_,template){var directive=function(DatasetResource){return{restrict:"CEA",template:template,link:function(scope,elem,attrs){var elButton=elem.find(".btn"),elInput=elem.find("input");elButton.click(function(){elInput.click()}),scope.vm={status:"idle",uploadProgress:function(progress,event){scope.$apply(function(){scope.vm.percent=progress,progress>=100?scope.vm.status="processing":scope.vm.status="uploading"})},completed:function(event){scope.vm.status="idle"}},elInput.on("change",function(){for(var input=elInput[0],files=new Array,i=0;i<input.files.length;i++)files.push(input.files[i]),files.length==input.files.length&&files.map(function(file){_.endsWith(file.name,".zip")?DatasetResource.importZip(file,scope.vm.uploadProgress,scope.vm.completed):DatasetResource.uploadFile(file,scope.vm.uploadProgress,scope.vm.completed)})})}}};return directive.$name="mevDatasetUpload",directive.$inject=["mevDatasetRest"],directive.$provider="directive",directive});
/*mev-workspace@0.0.1#src/main/mev-workspace*/
define("mev-workspace@0.0.1#src/main/mev-workspace",["mui","pouchdb","mev-domain-common","mev-dataset","mev-annotations","angular-ui-router","ui-router-extras","./model/Workspace","./router/WorkspaceState","./router/WorkspaceStateInit","./view/list/WorkspaceListDirective","./view/upload/UploadDatasetDirective"],function(ng){return ng.module("mev-workspace",["ct.ui.router.extras"],arguments)});
/*app/domain/navigator/domain.navigator.module*/
define("app/domain/navigator/domain.navigator.module",["ng"],function(ng){var module=ng.module("mui.domain.navigator",[]);return module.factory("Navigator",["$state",function($state){function Navigator(){this.openProject=function(project){$state.go("root.project",{id:project.id})},this.newProject=function(){$state.go("root.project")},this.importDataset=function(datasource,dataset){$state.go("root.import",{datasourceId:datasource.id,datasetId:dataset.id})},this.goHome=function(){$state.go("root.home")},this.openDataset=function(){},this.openAnnotations=function(dataset,dimension){$state.go("root.dataset.annotations",{datasetId:dataset.id,dimension:dimension})}}return new Navigator}]),module});
/*app/domain/analysis/genesd/SigGenesFactory*/
define("app/domain/analysis/genesd/SigGenesFactory",[],function(){"use strict";var SigGenesFactory=function(){return function(n,genes,values,headers){function formatData(genes,values){return genes.map(function(gene,i){return{geneId:gene,value:values[i]}})}function getN(n){return n>0?formatData(genes.slice(0,n),values.slice(0,n)):formatData(genes.slice(genes.length+n),values.slice(values.length+n))}var aHeaders,genes=genes,values=values;return Array.isArray(headers)?aHeaders=headers:(aHeaders=[{name:"ID",field:"geneId",icon:"search"},{name:"Deviation",field:"value",icon:n>0?">=":"<="}],"string"==typeof headers&&(aHeaders[1].name=headers)),{keys:genes.slice(0,19),data:getN(n),headers:aHeaders}}};return SigGenesFactory.$name="SigGenesFactory",SigGenesFactory.$inject=[],SigGenesFactory});
/*app/domain/analysis/genesd/domain.analysis.genesd.module*/
define("app/domain/analysis/genesd/domain.analysis.genesd.module",["ng","./SigGenesFactory"],function(ng){return ng.module("mui.domain.analysis.genesd",arguments,arguments)});
/*app/domain/analysis/domain.analysis.module*/
define("app/domain/analysis/domain.analysis.module",["ng","./genesd/domain.analysis.genesd.module"],function(ng){var module=ng.module("mui.domain.analysis",arguments,arguments);return module});
/*app/domain/project/model/MevProject*/
define("app/domain/project/model/MevProject",["ng"],function(ng){"use strict";var ProjectFactory=function(DS){return DS.defineResource({name:"Project",endpoint:"project",idAttribute:"name",relations:{hasMany:{Dataset:{localField:"datasets",foreignKey:"projectName",enumerable:!0}}}})};return ProjectFactory.$inject=["DS"],ProjectFactory});
/*app/domain/project/domain.project.module*/
define("app/domain/project/domain.project.module",["ng","./model/MevProject"],function(ng,MevProject){var module=ng.module("mui.domain.project",["mui.domain.dataset"]);return module.factory("MevProject",MevProject),module});
/*app/domain/dataset/dashboard/services/dashboardItemsService*/
define("app/domain/dataset/dashboard/services/dashboardItemsService",[],function(){var DashboardItems=function(){return function(){var _self=this;this.GeneSD={name:"GeneSD",launch:{analysisType:"genesd",analysisName:"GeneSD"}},this.GeneMAD={name:"GeneMAD",launch:{analysisType:"genemad",analysisName:"GeneMAD"}},this.PCA={name:"PCA",launch:{analysisType:"pca",analysisName:"PCA"}},this.Histogram={name:"Histogram",launch:{analysisType:"histogram",analysisName:"Histogram"}},this.$add=function(item){_self[item.name]=item}}};return DashboardItems.$name="DashboardItems",DashboardItems.provider="factory",DashboardItems.$inject=[],DashboardItems});
/*app/domain/dataset/dashboard/services/dashboardsService*/
define("app/domain/dataset/dashboard/services/dashboardsService",[],function(){var Dashboards=function(DashboardItems){var _self=this;this.$add=function(item){_self[item.name]=item},this.$new=function(id){}};return Dashboards.$name="Dashboards",Dashboards.provider="service",Dashboards.$inject=["DashboardItems"],Dashboards});
/*app/domain/dataset/dashboard/DashboardFactory*/
define("app/domain/dataset/dashboard/DashboardFactory",[],function(){var DashboardFactory=function(){return function(){var _self=this;this.items={"Original Data":{name:"Original Data",templateUrl:"app/views/dataset/_templates/dataset.heatmap.tpl.html",viewModel:"DatasetHeatmapVMFactory"}},this.add=function(item){_self.items[item.name]=item}}};return DashboardFactory.$name="DashboardFactory",DashboardFactory.$inject=[],DashboardFactory});
/*app/domain/dataset/dashboard/domain.dataset.dashboard.module*/
define("app/domain/dataset/dashboard/domain.dataset.dashboard.module",["ng","./services/dashboardItemsService","./services/dashboardsService","./DashboardFactory"],function(ng){return ng.module("mui.domain.dataset.dashboard",[],arguments)});
/*app/domain/dataset/domain.dataset.module*/
define("app/domain/dataset/domain.dataset.module",["ng","./dashboard/domain.dataset.dashboard.module"],function(ng,project){var module=ng.module("mui.domain.dataset",arguments,arguments),DatasetFactory=function(DS){return DS.defineResource({name:"Dataset",endpoint:"dataset",idAttribute:"name",relations:{belongsTo:{Project:{localField:"project",localKey:"projectName",parent:!0,enumerable:!0}}}})};return DatasetFactory.$inject=["DS"],module.factory("MevDataset",DatasetFactory),module});
/*app/domain/domain.module*/
define("app/domain/domain.module",["mui","./navigator/domain.navigator.module","./analysis/domain.analysis.module","./presets/domain.presets.module","./project/domain.project.module","./dataset/domain.dataset.module"],function(ng,navigatorMod,modAnalsys,modPresets,modProject,modDataset){var module=ng.module("mui.domain",arguments,arguments);return module});
/*blob@0.0.4#index*/
define("blob@0.0.4#index",function(require,exports,module){!function(global){function mapArrayBufferViews(ary){for(var i=0;i<ary.length;i++){var chunk=ary[i];if(chunk.buffer instanceof ArrayBuffer){var buf=chunk.buffer;if(chunk.byteLength!==buf.byteLength){var copy=new Uint8Array(chunk.byteLength);copy.set(new Uint8Array(buf,chunk.byteOffset,chunk.byteLength)),buf=copy.buffer}ary[i]=buf}}}function BlobBuilderConstructor(ary,options){options=options||{};var bb=new BlobBuilder;mapArrayBufferViews(ary);for(var i=0;i<ary.length;i++)bb.append(ary[i]);return options.type?bb.getBlob(options.type):bb.getBlob()}function BlobConstructor(ary,options){return mapArrayBufferViews(ary),new Blob(ary,options||{})}var BlobBuilder=global.BlobBuilder||global.WebKitBlobBuilder||global.MSBlobBuilder||global.MozBlobBuilder,blobSupported=function(){try{var a=new Blob(["hi"]);return 2===a.size}catch(e){return!1}}(),blobSupportsArrayBufferView=blobSupported&&function(){try{var b=new Blob([new Uint8Array([1,2])]);return 2===b.size}catch(e){return!1}}(),blobBuilderSupported=BlobBuilder&&BlobBuilder.prototype.append&&BlobBuilder.prototype.getBlob;module.exports=function(){return blobSupported?blobSupportsArrayBufferView?global.Blob:BlobConstructor:blobBuilderSupported?BlobBuilderConstructor:void 0}()}(function(){return this}())});
/*immediate@3.0.6#lib/index*/
define("immediate@3.0.6#lib/index",function(require,exports,module){!function(global){"use strict";function nextTick(){draining=!0;for(var i,oldQueue,len=queue.length;len;){for(oldQueue=queue,queue=[],i=-1;++i<len;)oldQueue[i]();len=queue.length}draining=!1}function immediate(task){1!==queue.push(task)||draining||scheduleDrain()}var scheduleDrain,Mutation=global.MutationObserver||global.WebKitMutationObserver;if(process.browser)if(Mutation){var called=0,observer=new Mutation(nextTick),element=global.document.createTextNode("");observer.observe(element,{characterData:!0}),scheduleDrain=function(){element.data=called=++called%2}}else if(global.setImmediate||"undefined"==typeof global.MessageChannel)scheduleDrain="document"in global&&"onreadystatechange"in global.document.createElement("script")?function(){var scriptEl=global.document.createElement("script");scriptEl.onreadystatechange=function(){nextTick(),scriptEl.onreadystatechange=null,scriptEl.parentNode.removeChild(scriptEl),scriptEl=null},global.document.documentElement.appendChild(scriptEl)}:function(){setTimeout(nextTick,0)};else{var channel=new global.MessageChannel;channel.port1.onmessage=nextTick,scheduleDrain=function(){channel.port2.postMessage(0)}}else scheduleDrain=function(){process.nextTick(nextTick)};var draining,queue=[];module.exports=immediate}(function(){return this}())});
/*lie@3.1.0#lib/index*/
define("lie@3.1.0#lib/index",function(require,exports,module){"use strict";function INTERNAL(){}function Promise(resolver){if("function"!=typeof resolver)throw new TypeError("resolver must be a function");this.state=PENDING,this.queue=[],this.outcome=void 0,process.browser||(this.handled=UNHANDLED),resolver!==INTERNAL&&safelyResolveThenable(this,resolver)}function QueueItem(promise,onFulfilled,onRejected){this.promise=promise,"function"==typeof onFulfilled&&(this.onFulfilled=onFulfilled,this.callFulfilled=this.otherCallFulfilled),"function"==typeof onRejected&&(this.onRejected=onRejected,this.callRejected=this.otherCallRejected)}function unwrap(promise,func,value){immediate(function(){var returnValue;try{returnValue=func(value)}catch(e){return handlers.reject(promise,e)}returnValue===promise?handlers.reject(promise,new TypeError("Cannot resolve promise with itself")):handlers.resolve(promise,returnValue)})}function getThen(obj){var then=obj&&obj.then;return obj&&"object"==typeof obj&&"function"==typeof then?function(){then.apply(obj,arguments)}:void 0}function safelyResolveThenable(self,thenable){function onError(value){called||(called=!0,handlers.reject(self,value))}function onSuccess(value){called||(called=!0,handlers.resolve(self,value))}function tryToUnwrap(){thenable(onSuccess,onError)}var called=!1,result=tryCatch(tryToUnwrap);"error"===result.status&&onError(result.value)}function tryCatch(func,value){var out={};try{out.value=func(value),out.status="success"}catch(e){out.status="error",out.value=e}return out}function resolve(value){return value instanceof this?value:handlers.resolve(new this(INTERNAL),value)}function reject(reason){var promise=new this(INTERNAL);return handlers.reject(promise,reason)}function all(iterable){function allResolver(value,i){function resolveFromAll(outValue){values[i]=outValue,++resolved!==len||called||(called=!0,handlers.resolve(promise,values))}self.resolve(value).then(resolveFromAll,function(error){called||(called=!0,handlers.reject(promise,error))})}var self=this;if("[object Array]"!==Object.prototype.toString.call(iterable))return this.reject(new TypeError("must be an array"));var len=iterable.length,called=!1;if(!len)return this.resolve([]);for(var values=new Array(len),resolved=0,i=-1,promise=new this(INTERNAL);++i<len;)allResolver(iterable[i],i);return promise}function race(iterable){function resolver(value){self.resolve(value).then(function(response){called||(called=!0,handlers.resolve(promise,response))},function(error){called||(called=!0,handlers.reject(promise,error))})}var self=this;if("[object Array]"!==Object.prototype.toString.call(iterable))return this.reject(new TypeError("must be an array"));var len=iterable.length,called=!1;if(!len)return this.resolve([]);for(var i=-1,promise=new this(INTERNAL);++i<len;)resolver(iterable[i]);return promise}var immediate=require("immediate"),handlers={},REJECTED=["REJECTED"],FULFILLED=["FULFILLED"],PENDING=["PENDING"];if(!process.browser)var UNHANDLED=["UNHANDLED"];module.exports=Promise,Promise.prototype["catch"]=function(onRejected){return this.then(null,onRejected)},Promise.prototype.then=function(onFulfilled,onRejected){if("function"!=typeof onFulfilled&&this.state===FULFILLED||"function"!=typeof onRejected&&this.state===REJECTED)return this;var promise=new this.constructor(INTERNAL);if(process.browser||this.handled===UNHANDLED&&(this.handled=null),this.state!==PENDING){var resolver=this.state===FULFILLED?onFulfilled:onRejected;unwrap(promise,resolver,this.outcome)}else this.queue.push(new QueueItem(promise,onFulfilled,onRejected));return promise},QueueItem.prototype.callFulfilled=function(value){handlers.resolve(this.promise,value)},QueueItem.prototype.otherCallFulfilled=function(value){unwrap(this.promise,this.onFulfilled,value)},QueueItem.prototype.callRejected=function(value){handlers.reject(this.promise,value)},QueueItem.prototype.otherCallRejected=function(value){unwrap(this.promise,this.onRejected,value)},handlers.resolve=function(self,value){var result=tryCatch(getThen,value);if("error"===result.status)return handlers.reject(self,result.value);var thenable=result.value;if(thenable)safelyResolveThenable(self,thenable);else{self.state=FULFILLED,self.outcome=value;for(var i=-1,len=self.queue.length;++i<len;)self.queue[i].callFulfilled(value)}return self},handlers.reject=function(self,error){self.state=REJECTED,self.outcome=error,process.browser||self.handled===UNHANDLED&&immediate(function(){self.handled===UNHANDLED&&process.emit("unhandledRejection",error,self)});for(var i=-1,len=self.queue.length;++i<len;)self.queue[i].callRejected(error);return self},Promise.resolve=resolve,Promise.reject=reject,Promise.all=all,Promise.race=race});
/*native-or-lie@1.0.0#index*/
define("native-or-lie@1.0.0#index",function(require,exports,module){module.exports="function"==typeof Promise?Promise:require("lie")});
/*blob-util@1.2.1#lib/index*/
define("blob-util@1.2.1#lib/index",function(require,exports,module){"use strict";function binaryStringToArrayBuffer(binary){for(var length=binary.length,buf=new ArrayBuffer(length),arr=new Uint8Array(buf),i=-1;++i<length;)arr[i]=binary.charCodeAt(i);return buf}function arrayBufferToBinaryString(buffer){for(var binary="",bytes=new Uint8Array(buffer),length=bytes.byteLength,i=-1;++i<length;)binary+=String.fromCharCode(bytes[i]);return binary}function loadImage(src,crossOrigin){return new Promise(function(resolve,reject){var img=new Image;crossOrigin&&(img.crossOrigin=crossOrigin),img.onload=function(){resolve(img)},img.onerror=reject,img.src=src})}function imgToCanvas(img){var canvas=document.createElement("canvas");canvas.width=img.width,canvas.height=img.height;var context=canvas.getContext("2d");return context.drawImage(img,0,0,img.width,img.height,0,0,img.width,img.height),canvas}function createBlob(parts,options){return options=options||{},"string"==typeof options&&(options={type:options}),new Blob(parts,options)}function createObjectURL(blob){return(window.URL||window.webkitURL).createObjectURL(blob)}function revokeObjectURL(url){return(window.URL||window.webkitURL).revokeObjectURL(url)}function blobToBinaryString(blob){return new Promise(function(resolve,reject){var reader=new FileReader,hasBinaryString="function"==typeof reader.readAsBinaryString;reader.onloadend=function(e){var result=e.target.result||"";return hasBinaryString?resolve(result):void resolve(arrayBufferToBinaryString(result))},reader.onerror=reject,hasBinaryString?reader.readAsBinaryString(blob):reader.readAsArrayBuffer(blob)})}function base64StringToBlob(base64,type){return Promise.resolve().then(function(){var parts=[binaryStringToArrayBuffer(atob(base64))];return type?createBlob(parts,{type:type}):createBlob(parts)})}function binaryStringToBlob(binary,type){return Promise.resolve().then(function(){return base64StringToBlob(btoa(binary),type)})}function blobToBase64String(blob){return blobToBinaryString(blob).then(function(binary){return btoa(binary)})}function dataURLToBlob(dataURL){return Promise.resolve().then(function(){var type=dataURL.match(/data:([^;]+)/)[1],base64=dataURL.replace(/^[^,]+,/,""),buff=binaryStringToArrayBuffer(atob(base64));return createBlob([buff],{type:type})})}function imgSrcToDataURL(src,type,crossOrigin,quality){return type=type||"image/png",loadImage(src,crossOrigin).then(function(img){return imgToCanvas(img)}).then(function(canvas){return canvas.toDataURL(type,quality)})}function canvasToBlob(canvas,type,quality){return Promise.resolve().then(function(){return"function"==typeof canvas.toBlob?new Promise(function(resolve){canvas.toBlob(resolve,type,quality)}):dataURLToBlob(canvas.toDataURL(type,quality))})}function imgSrcToBlob(src,type,crossOrigin,quality){return type=type||"image/png",loadImage(src,crossOrigin).then(function(img){return imgToCanvas(img)}).then(function(canvas){return canvasToBlob(canvas,type,quality)})}function arrayBufferToBlob(buffer,type){return Promise.resolve().then(function(){return createBlob([buffer],type)})}function blobToArrayBuffer(blob){return new Promise(function(resolve,reject){var reader=new FileReader;reader.onloadend=function(e){var result=e.target.result||new ArrayBuffer(0);resolve(result)},reader.onerror=reject,reader.readAsArrayBuffer(blob)})}var Blob=require("blob"),Promise=require("native-or-lie");module.exports={createBlob:createBlob,createObjectURL:createObjectURL,revokeObjectURL:revokeObjectURL,imgSrcToBlob:imgSrcToBlob,imgSrcToDataURL:imgSrcToDataURL,canvasToBlob:canvasToBlob,dataURLToBlob:dataURLToBlob,blobToBase64String:blobToBase64String,base64StringToBlob:base64StringToBlob,binaryStringToBlob:binaryStringToBlob,blobToBinaryString:blobToBinaryString,arrayBufferToBlob:arrayBufferToBlob,blobToArrayBuffer:blobToArrayBuffer}});